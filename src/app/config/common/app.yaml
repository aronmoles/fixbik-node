services:

  App.Logger:
    class: ../../../microk/core/infrastructure/SystemLogger
    arguments: []

  App.Env:
    class: ../../ProcessEnv
    arguments: []

  App.CommandHandlersMapper:
    class: ../../../microk/cqrs/infrastructure/command/CommandHandlersMapper
    arguments: ['!tagged commandHandler']

  App.CommandBus:
    class: ../../../microk/cqrs/infrastructure/command/InMemoryCommandBus
    arguments: ['@App.CommandHandlersMapper', '!tagged commandExecutor']

  App.QueryHandlersMapper:
    class: ../../../microk/cqrs/infrastructure/query/QueryHandlersMapper
    arguments: ['!tagged queryHandler']

  App.QueryBus:
    class: ../../../microk/cqrs/infrastructure/query/InMemoryQueryBus
    arguments: ['@App.QueryHandlersMapper', '!tagged queryExecutor']

  App.EventSubscriberMapper:
    class: ../../../microk/event/infrastructure/EventSubscriberMapper
    arguments: ['!tagged eventSubscriber']

  App.RabbitMqConfigFactory:
    arguments: ['@App.Env']
    factory:
      class: ../../../modules/shared/infrastructure/RabbitMqConfigFactory
      method: 'createConfig'

  App.EventClassMapper:
    class: ../../../microk/event/infrastructure/EventClassMapper
    arguments: ['!tagged eventSubscriber']

  App.EventDeserializer:
    class: ../../../microk/event/infrastructure/EventJsonDeserializer
    arguments: ['@App.EventClassMapper']

  App.EventBus:
    class: ../../../microk/event/infrastructure/rabbit-mq/RabbitMqEventBus
    arguments: ['@App.RabbitMqConfigFactory', '@App.EventSubscriberMapper', '@App.EventDeserializer', '@App.Logger', '!tagged eventExecutor']

#  App.EventBus:
#    class: ../../../microk/event/infrastructure/InMemoryEventBus
#    arguments: ['@App.EventSubscriberMapper', '!tagged eventExecutor']


  App.ControllerDiscoverer:
    class: ../../../microk/core/infrastructure/Discoverer
    arguments: ['!tagged controller']

  App.MiddlewareDiscoverer:
    class: ../../../microk/core/infrastructure/Discoverer
    arguments: ['!tagged middleware']

  App.ErrorMiddlewareDiscoverer:
    class: ../../../microk/core/infrastructure/Discoverer
    arguments: ['!tagged errorMiddleware']

  App.ErrorTracker:
    class: ../../../microk/utils/FileErrorTracker
    arguments: ['@App.Logger']


  App.PersistErrorMiddleware:
    class: ../../../microk/core/infrastructure/error/PersistErrorMiddleware
    arguments: ['@App.ErrorTracker']
    tags:
      - { name: errorMiddleware }

  App.HttpErrorMiddleware:
    class: ../../../microk/core/infrastructure/HttpErrorMiddleware
    arguments: ['@App.Logger']
    tags:
      - { name: errorMiddleware }


  App.MessageStore:
    class: ../../../microk/utils/FileMessageStore

  App.StoreMessageBusMiddleware:
    class: ../../../microk/message-store/infrastructure/StoreMessageBusMiddleware
    arguments: ['@App.MessageStore']
    tags:
      - { name: commandExecutor }
      - { name: queryExecutor }
      - { name: eventExecutor }

  App.TimeBusMiddleware:
    class: ../../../microk/utils/TimeBusMiddleware
    arguments: ['@App.Logger']
    tags:
      - { name: commandExecutor }
      - { name: queryExecutor }
      - { name: eventExecutor }

#  App.AuthMiddleware:
#    class: ../../../modules/shared/infrastructure/AuthMiddleware
#    tags:
#      - { name: middleware }


  App.TypeOrmConfig:
    arguments: ['@App.Env']
    factory:
      class: ../../../modules/shared/infrastructure/persistence/typeorm/TypeOrmConfigFactory
      method: 'createConfig'

  App.ConnectionManager:
    factory:
      class: ../../../microk/persistence/infrastructure/typeorm/TypeOrmClientFactory
      method: 'createClient'
    arguments: ['@App.TypeOrmConfig']


