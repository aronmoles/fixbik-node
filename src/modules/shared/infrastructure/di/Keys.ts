export const Keys = {
    App: {
        Env: Symbol.for('Env'),
        Logger: Symbol.for('Log'),
        ControllerDiscoverer: Symbol.for('ControllerDiscoverer'),
        MiddlewareDiscoverer: Symbol.for('MiddlewareDiscoverer'),
        ErrorMiddlewareDiscoverer: Symbol.for('ErrorMiddlewareDiscoverer'),
        ErrorTracker: Symbol.for('ErrorTracker'),
        MessageStore: Symbol.for('MessageStore'),
        PersistErrorMiddleware: Symbol.for('PersistErrorMiddleware'),
        HttpErrorMiddleware: Symbol.for('HttpErrorMiddleware'),
        StoreMessageBusMiddleware: Symbol.for('StoreMessageBusMiddleware'),
        TimeBusMiddleware: Symbol.for('TimeBusMiddleware'),
        AuthMiddleware: Symbol.for('AuthMiddleware'),
        ServerOpenApiConfig: Symbol.for('ServerOpenApiConfig'),
        ConnectionManager: Symbol.for('ConnectionManager'),
    },
    CQRS: {
        CommandHandlersMapper: Symbol.for('CommandHandlersMapper'),
        CommandBus: Symbol.for('CommandBus'),
        QueryHandlersMapper: Symbol.for('QueryHandlersMapper'),
        QueryBus: Symbol.for('QueryBus'),
        EventSubscriberMapper: Symbol.for('EventSubscriberMapper'),
        EventBus: Symbol.for('EventBus'),
        RabbitMqConfig: Symbol.for('RabbitMqConfig'),
        EventDeserializer: Symbol.for('EventDeserializer'),
        EventClassMapper: Symbol.for('EventClassMapper'),
    },
    Test: {
        EnvironmentArranger: Symbol.for('EnvironmentArranger'),
        EnvironmentFixtures: Symbol.for('EnvironmentFixtures'),
    },
    Info: {
        InfoController: Symbol.for('InfoController'),
        SetInfoController: Symbol.for('SetInfoController'),
        InfoService: Symbol.for('InfoService'),
        SetInfoService: Symbol.for('SetInfoService'),
        SendEmailService: Symbol.for('SendEmailService'),
        InfoQueryHandler: Symbol.for('InfoQueryHandler'),
        SetInfoCommandHandler: Symbol.for('SetInfoCommandHandler'),
        SendEmailInfoRequestDomainEventSubscriber: Symbol.for('SendEmailInfoRequestDomainEventSubscriber'),
    },
    Auth: {
        AuthenticateController: Symbol.for('AuthenticateController'),
        Authenticator: Symbol.for('Authenticator'),
        AuthenticateQueryHandler: Symbol.for('AuthenticateQueryHandler'),
        AuthUserRepository: Symbol.for('AuthUserRepository'),
        AuthTokenRepository: Symbol.for('AuthTokenRepository'),
    },
}
