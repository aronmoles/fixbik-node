{"file":"/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/criteria/OrderType.ts","mappings":";;;;;;AAAA,sFAA8D;AAC9D,+EAA4E;AAE5E,IAAY,UAIX;AAJD,WAAY,UAAU;IACpB,yBAAW,CAAA;IACX,2BAAa,CAAA;IACb,2BAAa,CAAA;AACf,CAAC,EAJW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAIrB;AAED,MAAa,SAAU,SAAQ,yBAA2B;IACtD,YAAY,KAAiB;QACzB,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,KAAa;QAC1B,QAAQ,KAAK,EAAE;YACX,KAAK,UAAU,CAAC,GAAG;gBACf,OAAO,IAAI,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YACzC,KAAK,UAAU,CAAC,IAAI;gBAChB,OAAO,IAAI,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YAC1C;gBACI,MAAM,IAAI,2CAAoB,CAAC,kBAAkB,KAAK,aAAa,CAAC,CAAC;SAC5E;IACL,CAAC;IAEM,MAAM;QACT,OAAO,IAAI,CAAC,KAAK,EAAE,KAAK,UAAU,CAAC,IAAI,CAAC;IAC5C,CAAC;IAEM,KAAK;QACR,OAAO,IAAI,CAAC,KAAK,EAAE,KAAK,UAAU,CAAC,GAAG,CAAC;IAC3C,CAAC;IAES,yBAAyB,CAAC,KAAiB;QACjD,MAAM,IAAI,2CAAoB,CAAC,kBAAkB,KAAK,aAAa,CAAC,CAAC;IACzE,CAAC;CACJ;AA3BD,8BA2BC","names":[],"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/criteria/OrderType.ts"],"sourcesContent":["import EnumValueObject from '../value-object/EnumValueObject';\nimport { InvalidArgumentError } from '../value-object/InvalidArgumentError';\n\nexport enum OrderTypes {\n  ASC = 'asc',\n  DESC = 'desc',\n  NONE = 'none'\n}\n\nexport class OrderType extends EnumValueObject<OrderTypes> {\n    constructor(value: OrderTypes) {\n        super(value, Object.values(OrderTypes));\n    }\n\n    static fromValue(value: string): OrderType {\n        switch (value) {\n            case OrderTypes.ASC:\n                return new OrderType(OrderTypes.ASC);\n            case OrderTypes.DESC:\n                return new OrderType(OrderTypes.DESC);\n            default:\n                throw new InvalidArgumentError(`The order type ${value} is invalid`);\n        }\n    }\n\n    public isNone(): boolean {\n        return this.value() === OrderTypes.NONE;\n    }\n\n    public isAsc(): boolean {\n        return this.value() === OrderTypes.ASC;\n    }\n\n    protected throwErrorForInvalidValue(value: OrderTypes): void {\n        throw new InvalidArgumentError(`The order type ${value} is invalid`);\n    }\n}\n"],"version":3}