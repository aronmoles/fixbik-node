{"file":"/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/docs/openapi/consumers/ReadFiles.ts","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,uCAAyB;AAEzB,MAAM,QAAQ,GAAG,CAAC,QAAgB,EAAU,EAAE;IAC1C,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;AAChD,CAAC,CAAA;AAEM,MAAM,SAAS,GAAG,CAAC,KAAe,EAAY,EAAE;IACnD,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACjC,OAAO,EAAE,CAAC;KACb;IACD,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC;AALW,QAAA,SAAS,aAKpB","names":[],"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/docs/openapi/consumers/ReadFiles.ts"],"sourcesContent":["import * as fs from 'fs';\n\nconst readFile = (filePath: string): string => {\n    return fs.readFileSync(filePath).toString();\n}\n\nexport const readFiles = (files: string[]): string[] => {\n    if (!files || !Array.isArray(files)) {\n        return [];\n    }\n    return files.map((file) => readFile(file));\n};\n"],"version":3}