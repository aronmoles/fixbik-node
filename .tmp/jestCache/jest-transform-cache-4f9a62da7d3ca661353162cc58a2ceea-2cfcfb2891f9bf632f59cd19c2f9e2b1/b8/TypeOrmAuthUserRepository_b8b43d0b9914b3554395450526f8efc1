eea22e9f7c0769165d0000267d876d2f
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TypeOrmAuthUserRepository = void 0;
const Criteria_1 = require("@microk/common/criteria/Criteria");
const Filter_1 = require("@microk/common/criteria/Filter");
const FilterField_1 = require("@microk/common/criteria/FilterField");
const FilterOperator_1 = require("@microk/common/criteria/FilterOperator");
const Filters_1 = require("@microk/common/criteria/Filters");
const FilterValue_1 = require("@microk/common/criteria/FilterValue");
const Order_1 = require("@microk/common/criteria/Order");
const TypeOrmCriteriaConverter_1 = __importDefault(require("@microk/persistence/infrastructure/typeorm/TypeOrmCriteriaConverter"));
const TypeOrmRepository_1 = require("@microk/persistence/infrastructure/typeorm/TypeOrmRepository");
const AuthUserEntity_1 = require("./typeorm/AuthUserEntity");
class TypeOrmAuthUserRepository extends TypeOrmRepository_1.TypeOrmRepository {
    entitySchema() {
        return AuthUserEntity_1.AuthUserEntity;
    }
    save(course) {
        return this.persist(course);
    }
    search(id) {
        return __awaiter(this, void 0, void 0, function* () {
            const repository = yield this.repository();
            const authUser = yield repository.findOne({ id });
            return authUser;
        });
    }
    customSearch() {
        return __awaiter(this, void 0, void 0, function* () {
            // const repository = await this.repository();
            // const authUser = await repository.findOne({
            //     where: {
            //         email: new AuthUserEmail('amoles@pav.com'),
            //     },
            // })
            const repository = yield this.repository();
            const criteria = new Criteria_1.Criteria(new Filters_1.Filters([new Filter_1.Filter(new FilterField_1.FilterField('email'), FilterOperator_1.FilterOperator.equal(), new FilterValue_1.FilterValue('amoles@pav.com'))]), Order_1.Order.none());
            const criteriaConverter = new TypeOrmCriteriaConverter_1.default();
            const filter = criteriaConverter.convert(criteria);
            const authUser = yield repository.findOne(filter);
            return authUser;
        });
    }
}
exports.TypeOrmAuthUserRepository = TypeOrmAuthUserRepository;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3NyYy9tb2R1bGVzL2F1dGgvaW5mcmFzdHJ1Y3R1cmUvcGVyc2lzdGVuY2UvVHlwZU9ybUF1dGhVc2VyUmVwb3NpdG9yeS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQSwrREFBNEQ7QUFDNUQsMkRBQXdEO0FBQ3hELHFFQUFrRTtBQUNsRSwyRUFBd0U7QUFDeEUsNkRBQTBEO0FBQzFELHFFQUFrRTtBQUNsRSx5REFBc0Q7QUFFdEQsbUlBQTJHO0FBQzNHLG9HQUFpRztBQU1qRyw2REFBMEQ7QUFFMUQsTUFBYSx5QkFBMEIsU0FBUSxxQ0FBMkI7SUFDNUQsWUFBWTtRQUNsQixPQUFPLCtCQUFjLENBQUM7SUFDMUIsQ0FBQztJQUVNLElBQUksQ0FBQyxNQUFnQjtRQUN4QixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVZLE1BQU0sQ0FBQyxFQUFjOztZQUM5QixNQUFNLFVBQVUsR0FBRyxNQUFNLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUUzQyxNQUFNLFFBQVEsR0FBRyxNQUFNLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBRWxELE9BQU8sUUFBUSxDQUFDO1FBQ3BCLENBQUM7S0FBQTtJQUVLLFlBQVk7O1lBQ2QsOENBQThDO1lBQzlDLDhDQUE4QztZQUM5QyxlQUFlO1lBQ2Ysc0RBQXNEO1lBQ3RELFNBQVM7WUFDVCxLQUFLO1lBRUwsTUFBTSxVQUFVLEdBQUcsTUFBTSxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7WUFDM0MsTUFBTSxRQUFRLEdBQUcsSUFBSSxtQkFBUSxDQUN6QixJQUFJLGlCQUFPLENBQUMsQ0FBQyxJQUFJLGVBQU0sQ0FDbkIsSUFBSSx5QkFBVyxDQUFDLE9BQU8sQ0FBQyxFQUN4QiwrQkFBYyxDQUFDLEtBQUssRUFBRSxFQUN0QixJQUFJLHlCQUFXLENBQUMsZ0JBQWdCLENBQUMsQ0FDcEMsQ0FBQyxDQUFDLEVBQ0gsYUFBSyxDQUFDLElBQUksRUFBRSxDQUNmLENBQUE7WUFDRCxNQUFNLGlCQUFpQixHQUFHLElBQUksa0NBQXdCLEVBQUUsQ0FBQztZQUN6RCxNQUFNLE1BQU0sR0FBRyxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUE7WUFDbEQsTUFBTSxRQUFRLEdBQUcsTUFBTSxVQUFVLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFBO1lBQ2pELE9BQU8sUUFBUSxDQUFDO1FBQ3BCLENBQUM7S0FBQTtDQUNKO0FBdkNELDhEQXVDQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvY3VhdHJvb2NoZW50YS9NYWdpY1Nob3BwZXIvbWFnaWNzaG9wcGVyLW5vZGUvc3JjL21vZHVsZXMvYXV0aC9pbmZyYXN0cnVjdHVyZS9wZXJzaXN0ZW5jZS9UeXBlT3JtQXV0aFVzZXJSZXBvc2l0b3J5LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENyaXRlcmlhIH0gZnJvbSAnQG1pY3Jvay9jb21tb24vY3JpdGVyaWEvQ3JpdGVyaWEnO1xuaW1wb3J0IHsgRmlsdGVyIH0gZnJvbSAnQG1pY3Jvay9jb21tb24vY3JpdGVyaWEvRmlsdGVyJztcbmltcG9ydCB7IEZpbHRlckZpZWxkIH0gZnJvbSAnQG1pY3Jvay9jb21tb24vY3JpdGVyaWEvRmlsdGVyRmllbGQnO1xuaW1wb3J0IHsgRmlsdGVyT3BlcmF0b3IgfSBmcm9tICdAbWljcm9rL2NvbW1vbi9jcml0ZXJpYS9GaWx0ZXJPcGVyYXRvcic7XG5pbXBvcnQgeyBGaWx0ZXJzIH0gZnJvbSAnQG1pY3Jvay9jb21tb24vY3JpdGVyaWEvRmlsdGVycyc7XG5pbXBvcnQgeyBGaWx0ZXJWYWx1ZSB9IGZyb20gJ0BtaWNyb2svY29tbW9uL2NyaXRlcmlhL0ZpbHRlclZhbHVlJztcbmltcG9ydCB7IE9yZGVyIH0gZnJvbSAnQG1pY3Jvay9jb21tb24vY3JpdGVyaWEvT3JkZXInO1xuaW1wb3J0IHsgTnVsbGFibGUgfSBmcm9tICdAbWljcm9rL2NvbW1vbi9OdWxsYWJsZSc7XG5pbXBvcnQgVHlwZU9ybUNyaXRlcmlhQ29udmVydGVyIGZyb20gJ0BtaWNyb2svcGVyc2lzdGVuY2UvaW5mcmFzdHJ1Y3R1cmUvdHlwZW9ybS9UeXBlT3JtQ3JpdGVyaWFDb252ZXJ0ZXInO1xuaW1wb3J0IHsgVHlwZU9ybVJlcG9zaXRvcnkgfSBmcm9tICdAbWljcm9rL3BlcnNpc3RlbmNlL2luZnJhc3RydWN0dXJlL3R5cGVvcm0vVHlwZU9ybVJlcG9zaXRvcnknO1xuaW1wb3J0IHsgRW50aXR5U2NoZW1hIH0gZnJvbSAndHlwZW9ybSc7XG5pbXBvcnQgeyBBdXRoVXNlciB9IGZyb20gJy4uLy4uL2RvbWFpbi9BdXRoVXNlcic7XG5pbXBvcnQgQXV0aFVzZXJFbWFpbCBmcm9tICcuLi8uLi9kb21haW4vQXV0aFVzZXJFbWFpbCc7XG5pbXBvcnQgQXV0aFVzZXJJZCBmcm9tICcuLi8uLi9kb21haW4vQXV0aFVzZXJJZCc7XG5pbXBvcnQgeyBBdXRoVXNlclJlcG9zaXRvcnkgfSBmcm9tICcuLi8uLi9kb21haW4vQXV0aFVzZXJSZXBvc2l0b3J5JztcbmltcG9ydCB7IEF1dGhVc2VyRW50aXR5IH0gZnJvbSAnLi90eXBlb3JtL0F1dGhVc2VyRW50aXR5JztcblxuZXhwb3J0IGNsYXNzIFR5cGVPcm1BdXRoVXNlclJlcG9zaXRvcnkgZXh0ZW5kcyBUeXBlT3JtUmVwb3NpdG9yeTxBdXRoVXNlcj4gaW1wbGVtZW50cyBBdXRoVXNlclJlcG9zaXRvcnkge1xuICAgIHByb3RlY3RlZCBlbnRpdHlTY2hlbWEoKTogRW50aXR5U2NoZW1hPEF1dGhVc2VyPiB7XG4gICAgICAgIHJldHVybiBBdXRoVXNlckVudGl0eTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2F2ZShjb3Vyc2U6IEF1dGhVc2VyKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIHJldHVybiB0aGlzLnBlcnNpc3QoY291cnNlKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgc2VhcmNoKGlkOiBBdXRoVXNlcklkKTogUHJvbWlzZTxOdWxsYWJsZTxBdXRoVXNlcj4+IHtcbiAgICAgICAgY29uc3QgcmVwb3NpdG9yeSA9IGF3YWl0IHRoaXMucmVwb3NpdG9yeSgpO1xuXG4gICAgICAgIGNvbnN0IGF1dGhVc2VyID0gYXdhaXQgcmVwb3NpdG9yeS5maW5kT25lKHsgaWQgfSk7XG5cbiAgICAgICAgcmV0dXJuIGF1dGhVc2VyO1xuICAgIH1cblxuICAgIGFzeW5jIGN1c3RvbVNlYXJjaCgpOiBQcm9taXNlPE51bGxhYmxlPEF1dGhVc2VyPj4ge1xuICAgICAgICAvLyBjb25zdCByZXBvc2l0b3J5ID0gYXdhaXQgdGhpcy5yZXBvc2l0b3J5KCk7XG4gICAgICAgIC8vIGNvbnN0IGF1dGhVc2VyID0gYXdhaXQgcmVwb3NpdG9yeS5maW5kT25lKHtcbiAgICAgICAgLy8gICAgIHdoZXJlOiB7XG4gICAgICAgIC8vICAgICAgICAgZW1haWw6IG5ldyBBdXRoVXNlckVtYWlsKCdhbW9sZXNAcGF2LmNvbScpLFxuICAgICAgICAvLyAgICAgfSxcbiAgICAgICAgLy8gfSlcblxuICAgICAgICBjb25zdCByZXBvc2l0b3J5ID0gYXdhaXQgdGhpcy5yZXBvc2l0b3J5KCk7XG4gICAgICAgIGNvbnN0IGNyaXRlcmlhID0gbmV3IENyaXRlcmlhKFxuICAgICAgICAgICAgbmV3IEZpbHRlcnMoW25ldyBGaWx0ZXIoXG4gICAgICAgICAgICAgICAgbmV3IEZpbHRlckZpZWxkKCdlbWFpbCcpLFxuICAgICAgICAgICAgICAgIEZpbHRlck9wZXJhdG9yLmVxdWFsKCksXG4gICAgICAgICAgICAgICAgbmV3IEZpbHRlclZhbHVlKCdhbW9sZXNAcGF2LmNvbScpLFxuICAgICAgICAgICAgKV0pLFxuICAgICAgICAgICAgT3JkZXIubm9uZSgpLFxuICAgICAgICApXG4gICAgICAgIGNvbnN0IGNyaXRlcmlhQ29udmVydGVyID0gbmV3IFR5cGVPcm1Dcml0ZXJpYUNvbnZlcnRlcigpO1xuICAgICAgICBjb25zdCBmaWx0ZXIgPSBjcml0ZXJpYUNvbnZlcnRlci5jb252ZXJ0KGNyaXRlcmlhKVxuICAgICAgICBjb25zdCBhdXRoVXNlciA9IGF3YWl0IHJlcG9zaXRvcnkuZmluZE9uZShmaWx0ZXIpXG4gICAgICAgIHJldHVybiBhdXRoVXNlcjtcbiAgICB9XG59XG4iXSwidmVyc2lvbiI6M30=