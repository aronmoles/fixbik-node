6079e9a77542e0274e45a324fa735cf7
"use strict";

/* istanbul ignore next */
function cov_2cyr4o7cpy() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/send-email/SendEmailService.ts";
  var hash = "1244c4770a0dad9cde39cf7ccf4e2d296f6dd203";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/send-email/SendEmailService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 16
        },
        end: {
          line: 12,
          column: 46
        }
      },
      "14": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 29
        }
      },
      "15": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 21,
          column: 11
        }
      },
      "16": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 43
        }
      },
      "17": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 43
        }
      },
      "18": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 24,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 5
          }
        },
        loc: {
          start: {
            line: 14,
            column: 24
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 14
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 13
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 17
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 18,
            column: 47
          },
          end: {
            line: 18,
            column: 48
          }
        },
        loc: {
          start: {
            line: 18,
            column: 60
          },
          end: {
            line: 21,
            column: 9
          }
        },
        line: 18
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/send-email/SendEmailService.ts",
      mappings: ";;;;;;;;;;;AACA,+CAA4C;AAE5C,MAAqB,gBAAgB;IACjC,YAA6B,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAC3C,CAAC;IAEK,MAAM;;YACR,MAAM,IAAA,aAAK,EAAC,IAAI,CAAC,CAAA;YACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;QAClC,CAAC;KAAA;CACJ;AARD,mCAQC",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/send-email/SendEmailService.ts"],
      sourcesContent: ["import Logger from '@microk/core/domain/Logger';\nimport { sleep } from '@microk/utils/Sleep';\n\nexport default class SendEmailService {\n    constructor(private readonly logger: Logger) {\n    }\n\n    async invoke(): Promise<void> {\n        await sleep(2000)\n        this.logger.info('SEND EMAIL')\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1244c4770a0dad9cde39cf7ccf4e2d296f6dd203"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2cyr4o7cpy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2cyr4o7cpy();

var __awaiter =
/* istanbul ignore next */
(cov_2cyr4o7cpy().s[0]++,
/* istanbul ignore next */
(cov_2cyr4o7cpy().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_2cyr4o7cpy().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_2cyr4o7cpy().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_2cyr4o7cpy().f[0]++;

  function adopt(value) {
    /* istanbul ignore next */
    cov_2cyr4o7cpy().f[1]++;
    cov_2cyr4o7cpy().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_2cyr4o7cpy().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_2cyr4o7cpy().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_2cyr4o7cpy().f[2]++;
      cov_2cyr4o7cpy().s[2]++;
      resolve(value);
    }));
  }

  /* istanbul ignore next */
  cov_2cyr4o7cpy().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_2cyr4o7cpy().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_2cyr4o7cpy().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_2cyr4o7cpy().f[3]++;

    function fulfilled(value) {
      /* istanbul ignore next */
      cov_2cyr4o7cpy().f[4]++;
      cov_2cyr4o7cpy().s[4]++;

      try {
        /* istanbul ignore next */
        cov_2cyr4o7cpy().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_2cyr4o7cpy().s[6]++;
        reject(e);
      }
    }

    function rejected(value) {
      /* istanbul ignore next */
      cov_2cyr4o7cpy().f[5]++;
      cov_2cyr4o7cpy().s[7]++;

      try {
        /* istanbul ignore next */
        cov_2cyr4o7cpy().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_2cyr4o7cpy().s[9]++;
        reject(e);
      }
    }

    function step(result) {
      /* istanbul ignore next */
      cov_2cyr4o7cpy().f[6]++;
      cov_2cyr4o7cpy().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_2cyr4o7cpy().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_2cyr4o7cpy().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }

    /* istanbul ignore next */
    cov_2cyr4o7cpy().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_2cyr4o7cpy().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_2cyr4o7cpy().b[4][1]++, []))).next());
  });
}));

/* istanbul ignore next */
cov_2cyr4o7cpy().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const Sleep_1 =
/* istanbul ignore next */
(cov_2cyr4o7cpy().s[13]++, require("@microk/utils/Sleep"));

class SendEmailService {
  constructor(logger) {
    /* istanbul ignore next */
    cov_2cyr4o7cpy().f[7]++;
    cov_2cyr4o7cpy().s[14]++;
    this.logger = logger;
  }

  invoke() {
    /* istanbul ignore next */
    cov_2cyr4o7cpy().f[8]++;
    cov_2cyr4o7cpy().s[15]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_2cyr4o7cpy().f[9]++;
      cov_2cyr4o7cpy().s[16]++;
      yield (0, Sleep_1.sleep)(2000);

      /* istanbul ignore next */
      cov_2cyr4o7cpy().s[17]++;
      this.logger.info('SEND EMAIL');
    });
  }

}

/* istanbul ignore next */
cov_2cyr4o7cpy().s[18]++;
exports.default = SendEmailService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbW9kdWxlcy9pbmZvL2FwcGxpY2F0aW9uL3NlbmQtZW1haWwvU2VuZEVtYWlsU2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBS0s7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFKTCxNQUFBLE9BQUE7QUFBQTtBQUFBLDJCQUFBLE9BQUEsQ0FBQSxxQkFBQSxDQUFBLENBQUE7O0FBRUEsTUFBcUIsZ0JBQXJCLENBQXFDO0FBQ2pDLEVBQUEsV0FBQSxDQUE2QixNQUE3QixFQUEyQztBQUFBO0FBQUE7QUFBQTtBQUFkLFNBQUEsTUFBQSxHQUFBLE1BQUE7QUFDNUI7O0FBRUssRUFBQSxNQUFNLEdBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7O0FBQ1IsWUFBTSxDQUFBLEdBQUEsT0FBQSxDQUFBLEtBQUEsRUFBTSxJQUFOLENBQU47Ozs7QUFDQSxXQUFLLE1BQUwsQ0FBWSxJQUFaLENBQWlCLFlBQWpCO0FBQ0gsSztBQUFBOztBQVBnQzs7OztBQUFyQyxPQUFBLENBQUEsT0FBQSxHQUFBLGdCQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExvZ2dlciBmcm9tICdAbWljcm9rL2NvcmUvZG9tYWluL0xvZ2dlcic7XG5pbXBvcnQgeyBzbGVlcCB9IGZyb20gJ0BtaWNyb2svdXRpbHMvU2xlZXAnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZW5kRW1haWxTZXJ2aWNlIHtcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGxvZ2dlcjogTG9nZ2VyKSB7XG4gICAgfVxuXG4gICAgYXN5bmMgaW52b2tlKCk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICBhd2FpdCBzbGVlcCgyMDAwKVxuICAgICAgICB0aGlzLmxvZ2dlci5pbmZvKCdTRU5EIEVNQUlMJylcbiAgICB9XG59XG4iXX0=