03c1eed83149528f72b44e28a2230434
"use strict";

/* istanbul ignore next */
function cov_25axfs3j02() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/persistence/infrastructure/typeorm/ValueObjectTransformer.ts";
  var hash = "a5f1204bce48ed7baa256a9904c525e1869e5df7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/persistence/infrastructure/typeorm/ValueObjectTransformer.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 40
        }
      },
      "2": {
        start: {
          line: 4,
          column: 18
        },
        end: {
          line: 4,
          column: 36
        }
      },
      "3": {
        start: {
          line: 5,
          column: 31
        },
        end: {
          line: 15,
          column: 1
        }
      },
      "4": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 14,
          column: 6
        }
      },
      "5": {
        start: {
          line: 8,
          column: 12
        },
        end: {
          line: 10,
          column: 13
        }
      },
      "6": {
        start: {
          line: 9,
          column: 16
        },
        end: {
          line: 9,
          column: 26
        }
      },
      "7": {
        start: {
          line: 11,
          column: 12
        },
        end: {
          line: 11,
          column: 70
        }
      },
      "8": {
        start: {
          line: 13,
          column: 26
        },
        end: {
          line: 13,
          column: 63
        }
      },
      "9": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 31
          },
          end: {
            line: 5,
            column: 32
          }
        },
        loc: {
          start: {
            line: 5,
            column: 48
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 7,
            column: 12
          },
          end: {
            line: 7,
            column: 13
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 12,
            column: 9
          }
        },
        line: 7
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 13,
            column: 14
          },
          end: {
            line: 13,
            column: 15
          }
        },
        loc: {
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 63
          }
        },
        line: 13
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 12
          },
          end: {
            line: 10,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 12
          },
          end: {
            line: 10,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 52
          }
        }, {
          start: {
            line: 8,
            column: 56
          },
          end: {
            line: 8,
            column: 78
          }
        }, {
          start: {
            line: 8,
            column: 82
          },
          end: {
            line: 8,
            column: 104
          }
        }],
        line: 8
      },
      "2": {
        loc: {
          start: {
            line: 11,
            column: 19
          },
          end: {
            line: 11,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 11,
            column: 50
          },
          end: {
            line: 11,
            column: 56
          }
        }, {
          start: {
            line: 11,
            column: 59
          },
          end: {
            line: 11,
            column: 69
          }
        }],
        line: 11
      },
      "3": {
        loc: {
          start: {
            line: 11,
            column: 19
          },
          end: {
            line: 11,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 19
          },
          end: {
            line: 11,
            column: 30
          }
        }, {
          start: {
            line: 11,
            column: 34
          },
          end: {
            line: 11,
            column: 47
          }
        }],
        line: 11
      },
      "4": {
        loc: {
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 56
          }
        }, {
          start: {
            line: 13,
            column: 59
          },
          end: {
            line: 13,
            column: 63
          }
        }],
        line: 13
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/persistence/infrastructure/typeorm/ValueObjectTransformer.ts",
      mappings: ";;;AAAA,qCAAuC;AAIhC,MAAM,sBAAsB,GAAG,CAAC,WAA2C,EAAE,EAAE;IAClF,OAAO;QACH,EAAE,EAAE,CAAC,EAAoB,EAAO,EAAE;YAC9B,IAAI,EAAE,YAAY,sBAAY,IAAI,OAAO,EAAE,KAAK,QAAQ,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE;gBAChF,OAAO,EAAE,CAAC;aACb;YACD,OAAO,EAAE,aAAF,EAAE,uBAAF,EAAE,CAAE,KAAK,EAAE,CAAC;QACvB,CAAC;QACD,IAAI,EAAE,CAAC,KAAU,EAAoB,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;KAClF,CAAA;AACL,CAAC,CAAA;AAVY,QAAA,sBAAsB,0BAUlC",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/persistence/infrastructure/typeorm/ValueObjectTransformer.ts"],
      sourcesContent: ["import { FindOperator } from 'typeorm';\nimport { NewableClass } from '../../../common/NewableClass';\nimport { ValueObject } from '../../../common/value-object/ValueObject';\n\nexport const ValueObjectTransformer = (valueObject: NewableClass<ValueObject<any>>) => {\n    return {\n        to: (vo: ValueObject<any>): any => {\n            if (vo instanceof FindOperator || typeof vo === 'string' || typeof vo === 'number') {\n                return vo;\n            }\n            return vo?.value();\n        },\n        from: (value: any): ValueObject<any> => (value ? new valueObject(value) : null),\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a5f1204bce48ed7baa256a9904c525e1869e5df7"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25axfs3j02 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_25axfs3j02();
cov_25axfs3j02().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_25axfs3j02().s[1]++;
exports.ValueObjectTransformer = void 0;
const typeorm_1 =
/* istanbul ignore next */
(cov_25axfs3j02().s[2]++, require("typeorm"));

/* istanbul ignore next */
cov_25axfs3j02().s[3]++;

const ValueObjectTransformer = (valueObject) => {
  /* istanbul ignore next */
  cov_25axfs3j02().f[0]++;
  cov_25axfs3j02().s[4]++;
  return {
    to: (vo) => {
      /* istanbul ignore next */
      cov_25axfs3j02().f[1]++;
      cov_25axfs3j02().s[5]++;

      if (
      /* istanbul ignore next */
      (cov_25axfs3j02().b[1][0]++, vo instanceof typeorm_1.FindOperator) ||
      /* istanbul ignore next */
      (cov_25axfs3j02().b[1][1]++, typeof vo === 'string') ||
      /* istanbul ignore next */
      (cov_25axfs3j02().b[1][2]++, typeof vo === 'number')) {
        /* istanbul ignore next */
        cov_25axfs3j02().b[0][0]++;
        cov_25axfs3j02().s[6]++;
        return vo;
      } else
      /* istanbul ignore next */
      {
        cov_25axfs3j02().b[0][1]++;
      }

      cov_25axfs3j02().s[7]++;
      return (
        /* istanbul ignore next */
        (cov_25axfs3j02().b[3][0]++, vo === null) ||
        /* istanbul ignore next */
        (cov_25axfs3j02().b[3][1]++, vo === void 0) ?
        /* istanbul ignore next */
        (cov_25axfs3j02().b[2][0]++, void 0) :
        /* istanbul ignore next */
        (cov_25axfs3j02().b[2][1]++, vo.value())
      );
    },
    from: (value) => {
      /* istanbul ignore next */
      cov_25axfs3j02().f[2]++;
      cov_25axfs3j02().s[8]++;
      return value ?
      /* istanbul ignore next */
      (cov_25axfs3j02().b[4][0]++, new valueObject(value)) :
      /* istanbul ignore next */
      (cov_25axfs3j02().b[4][1]++, null);
    }
  };
};

/* istanbul ignore next */
cov_25axfs3j02().s[9]++;
exports.ValueObjectTransformer = ValueObjectTransformer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbWljcm9rL3BlcnNpc3RlbmNlL2luZnJhc3RydWN0dXJlL3R5cGVvcm0vVmFsdWVPYmplY3RUcmFuc2Zvcm1lci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFJYTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFKYixNQUFBLFNBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxTQUFBLENBQUEsQ0FBQTs7Ozs7QUFJTyxNQUFNLHNCQUFzQixHQUFHLENBQUMsV0FBRCxLQUFnRDtBQUFBO0FBQUE7QUFBQTtBQUNsRixTQUFPO0FBQ0gsSUFBQSxFQUFFLEVBQUUsQ0FBQyxFQUFELEtBQThCO0FBQUE7QUFBQTtBQUFBOztBQUM5QjtBQUFJO0FBQUEsbUNBQUEsRUFBRSxZQUFZLFNBQUEsQ0FBQSxZQUFkO0FBQUE7QUFBQSxtQ0FBOEIsT0FBTyxFQUFQLEtBQWMsUUFBNUM7QUFBQTtBQUFBLG1DQUF3RCxPQUFPLEVBQVAsS0FBYyxRQUF0RSxDQUFKLEVBQW9GO0FBQUE7QUFBQTtBQUFBO0FBQ2hGLGVBQU8sRUFBUDtBQUNILE9BRkQ7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFEOEI7QUFJOUIsYUFBTztBQUFBO0FBQUEscUNBQUEsRUFBRSxLQUFBLElBQUY7QUFBQTtBQUFBLHFDQUFBLEVBQUUsS0FBQSxLQUFBLENBQUY7QUFBQTtBQUFBLHFDQUFFLEtBQUEsQ0FBRjtBQUFBO0FBQUEscUNBQUEsRUFBRSxDQUFFLEtBQUosRUFBQTtBQUFQO0FBQ0gsS0FORTtBQU9ILElBQUEsSUFBSSxFQUFFLENBQUMsS0FBRCxLQUFtQztBQUFBO0FBQUE7QUFBQTtBQUFBLGFBQUEsS0FBSztBQUFBO0FBQUEsbUNBQUcsSUFBSSxXQUFKLENBQWdCLEtBQWhCLENBQUg7QUFBQTtBQUFBLG1DQUE0QixJQUE1QixDQUFMO0FBQXFDO0FBUDNFLEdBQVA7QUFTSCxDQVZNOzs7O0FBQU0sT0FBQSxDQUFBLHNCQUFBLEdBQXNCLHNCQUF0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZpbmRPcGVyYXRvciB9IGZyb20gJ3R5cGVvcm0nO1xuaW1wb3J0IHsgTmV3YWJsZUNsYXNzIH0gZnJvbSAnLi4vLi4vLi4vY29tbW9uL05ld2FibGVDbGFzcyc7XG5pbXBvcnQgeyBWYWx1ZU9iamVjdCB9IGZyb20gJy4uLy4uLy4uL2NvbW1vbi92YWx1ZS1vYmplY3QvVmFsdWVPYmplY3QnO1xuXG5leHBvcnQgY29uc3QgVmFsdWVPYmplY3RUcmFuc2Zvcm1lciA9ICh2YWx1ZU9iamVjdDogTmV3YWJsZUNsYXNzPFZhbHVlT2JqZWN0PGFueT4+KSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdG86ICh2bzogVmFsdWVPYmplY3Q8YW55Pik6IGFueSA9PiB7XG4gICAgICAgICAgICBpZiAodm8gaW5zdGFuY2VvZiBGaW5kT3BlcmF0b3IgfHwgdHlwZW9mIHZvID09PSAnc3RyaW5nJyB8fCB0eXBlb2Ygdm8gPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZvO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHZvPy52YWx1ZSgpO1xuICAgICAgICB9LFxuICAgICAgICBmcm9tOiAodmFsdWU6IGFueSk6IFZhbHVlT2JqZWN0PGFueT4gPT4gKHZhbHVlID8gbmV3IHZhbHVlT2JqZWN0KHZhbHVlKSA6IG51bGwpLFxuICAgIH1cbn1cbiJdfQ==