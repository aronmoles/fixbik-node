{"version":3,"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBQ;;;;;;;;;;;;;;;;;AAhBR,MAAA,sBAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,wBAAA,CAAA,CAAA;;AAEA,MAAsB,WAAtB,CAAiC;AAC7B,EAAA,WAAA,CACqB,MADrB,EAC8B;AAAA;AAAA;AAAA;AAAT,SAAA,MAAA,GAAA,MAAA;;AAAS;AAAA;AAE1B,SAAK,oBAAL,CAA0B,MAA1B;AACH;;AAEO,EAAA,oBAAoB,CAAC,KAAD,EAAS;AAAA;AAAA;AAAA;;AACjC;AAAI;AAAA,iCAAA,KAAK,KAAK,IAAV;AAAA;AAAA,iCAAkB,KAAK,KAAK,SAA5B,CAAJ,EAA2C;AAAA;AAAA;AAAA;AACvC,YAAM,IAAI,sBAAA,CAAA,oBAAJ,CAAyB,uBAAzB,CAAN;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;AAGH;;AAEM,EAAA,KAAK,GAAA;AAAA;AAAA;AAAA;AACR,WAAO,KAAK,MAAZ;AACH;;AAEM,EAAA,MAAM,CAAC,KAAD,EAAsB;AAAA;AAAA;AAAA;AAC/B,WAAO,KAAK,KAAL,OAAiB,KAAK,CAAC,KAAN,EAAxB;AACH;;AAES,EAAA,MAAM,GAAA;AAAA;AAAA;AAAA;AACZ,WAAO,KAAK,QAAL,EAAP;AACH;;AAED,EAAA,QAAQ,GAAA;AAAA;AAAA;AAAA;;AACJ,QAAI,KAAK,MAAT,EAAiB;AAAA;AAAA;AAAA;AACb,aAAO,KAAK,MAAL,CAAY,QAAZ,EAAP;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;;AADI;AAKJ,WAAO,KAAK,MAAZ;AACH;;AAED,EAAA,OAAO,GAAA;AAAA;AAAA;AAAA;AACH,WAAO,KAAK,MAAZ;AACH;;AAnC4B;;;;AAAjC,OAAA,CAAA,WAAA,GAAA,WAAA","sourcesContent":["import { PrimitiveType } from '../PrimitiveType';\nimport { InvalidArgumentError } from './InvalidArgumentError';\n\nexport abstract class ValueObject<T extends PrimitiveType> {\n    protected constructor(\n        private readonly _value: T,\n    ) {\n        this.ensureValueIsDefined(_value);\n    }\n\n    private ensureValueIsDefined(value: T): void {\n        if (value === null || value === undefined) {\n            throw new InvalidArgumentError('Value must be defined');\n        }\n    }\n\n    public value(): T {\n        return this._value;\n    }\n\n    public equals(other: ValueObject<T>): boolean {\n        return this.value() === other.value();\n    }\n\n    protected toJSON() {\n        return this.toString();\n    }\n\n    toString() {\n        if (this._value) {\n            return this._value.toString();\n        }\n\n        return this._value;\n    }\n\n    valueOf() {\n        return this._value;\n    }\n}\n"]}