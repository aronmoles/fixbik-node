50413852df63532b2a64203323714d54
"use strict";

/* istanbul ignore next */
function cov_1ziwz4re5k() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts";
  var hash = "21987703b8b7351b6e6a9720f4fcb7504a900ae2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 29
        }
      },
      "2": {
        start: {
          line: 4,
          column: 31
        },
        end: {
          line: 4,
          column: 64
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 29
        }
      },
      "4": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 42
        }
      },
      "5": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 13,
          column: 9
        }
      },
      "6": {
        start: {
          line: 12,
          column: 12
        },
        end: {
          line: 12,
          column: 91
        }
      },
      "7": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 27
        }
      },
      "8": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 46
        }
      },
      "9": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "10": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "11": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 42
        }
      },
      "12": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 27
        }
      },
      "13": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 27
        }
      },
      "14": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 34,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 24
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 32
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 10
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 12
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 13
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 15
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 14
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 13,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 8
          },
          end: {
            line: 13,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 11,
            column: 12
          },
          end: {
            line: 11,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 12
          },
          end: {
            line: 11,
            column: 26
          }
        }, {
          start: {
            line: 11,
            column: 30
          },
          end: {
            line: 11,
            column: 49
          }
        }],
        line: 11
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts",
      mappings: ";;;AACA,iEAA8D;AAE9D,MAAsB,WAAW;IAC7B,YACqB,MAAS;QAAT,WAAM,GAAN,MAAM,CAAG;QAE1B,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;IACtC,CAAC;IAEO,oBAAoB,CAAC,KAAQ;QACjC,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,SAAS,EAAE;YACvC,MAAM,IAAI,2CAAoB,CAAC,uBAAuB,CAAC,CAAC;SAC3D;IACL,CAAC;IAEM,KAAK;QACR,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAEM,MAAM,CAAC,KAAqB;QAC/B,OAAO,IAAI,CAAC,KAAK,EAAE,KAAK,KAAK,CAAC,KAAK,EAAE,CAAC;IAC1C,CAAC;IAES,MAAM;QACZ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;IAED,QAAQ;QACJ,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;SACjC;QAED,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,OAAO;QACH,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;CACJ;AApCD,kCAoCC",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts"],
      sourcesContent: ["import { PrimitiveType } from '../PrimitiveType';\nimport { InvalidArgumentError } from './InvalidArgumentError';\n\nexport abstract class ValueObject<T extends PrimitiveType> {\n    protected constructor(\n        private readonly _value: T,\n    ) {\n        this.ensureValueIsDefined(_value);\n    }\n\n    private ensureValueIsDefined(value: T): void {\n        if (value === null || value === undefined) {\n            throw new InvalidArgumentError('Value must be defined');\n        }\n    }\n\n    public value(): T {\n        return this._value;\n    }\n\n    public equals(other: ValueObject<T>): boolean {\n        return this.value() === other.value();\n    }\n\n    protected toJSON() {\n        return this.toString();\n    }\n\n    toString() {\n        if (this._value) {\n            return this._value.toString();\n        }\n\n        return this._value;\n    }\n\n    valueOf() {\n        return this._value;\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "21987703b8b7351b6e6a9720f4fcb7504a900ae2"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ziwz4re5k = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1ziwz4re5k();
cov_1ziwz4re5k().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1ziwz4re5k().s[1]++;
exports.ValueObject = void 0;
const InvalidArgumentError_1 =
/* istanbul ignore next */
(cov_1ziwz4re5k().s[2]++, require("./InvalidArgumentError"));

class ValueObject {
  constructor(_value) {
    /* istanbul ignore next */
    cov_1ziwz4re5k().f[0]++;
    cov_1ziwz4re5k().s[3]++;
    this._value = _value;

    /* istanbul ignore next */
    cov_1ziwz4re5k().s[4]++;
    this.ensureValueIsDefined(_value);
  }

  ensureValueIsDefined(value) {
    /* istanbul ignore next */
    cov_1ziwz4re5k().f[1]++;
    cov_1ziwz4re5k().s[5]++;

    if (
    /* istanbul ignore next */
    (cov_1ziwz4re5k().b[1][0]++, value === null) ||
    /* istanbul ignore next */
    (cov_1ziwz4re5k().b[1][1]++, value === undefined)) {
      /* istanbul ignore next */
      cov_1ziwz4re5k().b[0][0]++;
      cov_1ziwz4re5k().s[6]++;
      throw new InvalidArgumentError_1.InvalidArgumentError('Value must be defined');
    } else
    /* istanbul ignore next */
    {
      cov_1ziwz4re5k().b[0][1]++;
    }
  }

  value() {
    /* istanbul ignore next */
    cov_1ziwz4re5k().f[2]++;
    cov_1ziwz4re5k().s[7]++;
    return this._value;
  }

  equals(other) {
    /* istanbul ignore next */
    cov_1ziwz4re5k().f[3]++;
    cov_1ziwz4re5k().s[8]++;
    return this.value() === other.value();
  }

  toJSON() {
    /* istanbul ignore next */
    cov_1ziwz4re5k().f[4]++;
    cov_1ziwz4re5k().s[9]++;
    return this.toString();
  }

  toString() {
    /* istanbul ignore next */
    cov_1ziwz4re5k().f[5]++;
    cov_1ziwz4re5k().s[10]++;

    if (this._value) {
      /* istanbul ignore next */
      cov_1ziwz4re5k().b[2][0]++;
      cov_1ziwz4re5k().s[11]++;
      return this._value.toString();
    } else
    /* istanbul ignore next */
    {
      cov_1ziwz4re5k().b[2][1]++;
    }

    cov_1ziwz4re5k().s[12]++;
    return this._value;
  }

  valueOf() {
    /* istanbul ignore next */
    cov_1ziwz4re5k().f[6]++;
    cov_1ziwz4re5k().s[13]++;
    return this._value;
  }

}

/* istanbul ignore next */
cov_1ziwz4re5k().s[14]++;
exports.ValueObject = ValueObject;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbWljcm9rL2NvbW1vbi92YWx1ZS1vYmplY3QvVmFsdWVPYmplY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJROzs7Ozs7Ozs7Ozs7Ozs7OztBQWhCUixNQUFBLHNCQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsd0JBQUEsQ0FBQSxDQUFBOztBQUVBLE1BQXNCLFdBQXRCLENBQWlDO0FBQzdCLEVBQUEsV0FBQSxDQUNxQixNQURyQixFQUM4QjtBQUFBO0FBQUE7QUFBQTtBQUFULFNBQUEsTUFBQSxHQUFBLE1BQUE7O0FBQVM7QUFBQTtBQUUxQixTQUFLLG9CQUFMLENBQTBCLE1BQTFCO0FBQ0g7O0FBRU8sRUFBQSxvQkFBb0IsQ0FBQyxLQUFELEVBQVM7QUFBQTtBQUFBO0FBQUE7O0FBQ2pDO0FBQUk7QUFBQSxpQ0FBQSxLQUFLLEtBQUssSUFBVjtBQUFBO0FBQUEsaUNBQWtCLEtBQUssS0FBSyxTQUE1QixDQUFKLEVBQTJDO0FBQUE7QUFBQTtBQUFBO0FBQ3ZDLFlBQU0sSUFBSSxzQkFBQSxDQUFBLG9CQUFKLENBQXlCLHVCQUF6QixDQUFOO0FBQ0gsS0FGRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBR0g7O0FBRU0sRUFBQSxLQUFLLEdBQUE7QUFBQTtBQUFBO0FBQUE7QUFDUixXQUFPLEtBQUssTUFBWjtBQUNIOztBQUVNLEVBQUEsTUFBTSxDQUFDLEtBQUQsRUFBc0I7QUFBQTtBQUFBO0FBQUE7QUFDL0IsV0FBTyxLQUFLLEtBQUwsT0FBaUIsS0FBSyxDQUFDLEtBQU4sRUFBeEI7QUFDSDs7QUFFUyxFQUFBLE1BQU0sR0FBQTtBQUFBO0FBQUE7QUFBQTtBQUNaLFdBQU8sS0FBSyxRQUFMLEVBQVA7QUFDSDs7QUFFRCxFQUFBLFFBQVEsR0FBQTtBQUFBO0FBQUE7QUFBQTs7QUFDSixRQUFJLEtBQUssTUFBVCxFQUFpQjtBQUFBO0FBQUE7QUFBQTtBQUNiLGFBQU8sS0FBSyxNQUFMLENBQVksUUFBWixFQUFQO0FBQ0gsS0FGRDtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQURJO0FBS0osV0FBTyxLQUFLLE1BQVo7QUFDSDs7QUFFRCxFQUFBLE9BQU8sR0FBQTtBQUFBO0FBQUE7QUFBQTtBQUNILFdBQU8sS0FBSyxNQUFaO0FBQ0g7O0FBbkM0Qjs7OztBQUFqQyxPQUFBLENBQUEsV0FBQSxHQUFBLFdBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmltaXRpdmVUeXBlIH0gZnJvbSAnLi4vUHJpbWl0aXZlVHlwZSc7XG5pbXBvcnQgeyBJbnZhbGlkQXJndW1lbnRFcnJvciB9IGZyb20gJy4vSW52YWxpZEFyZ3VtZW50RXJyb3InO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgVmFsdWVPYmplY3Q8VCBleHRlbmRzIFByaW1pdGl2ZVR5cGU+IHtcbiAgICBwcm90ZWN0ZWQgY29uc3RydWN0b3IoXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgX3ZhbHVlOiBULFxuICAgICkge1xuICAgICAgICB0aGlzLmVuc3VyZVZhbHVlSXNEZWZpbmVkKF92YWx1ZSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBlbnN1cmVWYWx1ZUlzRGVmaW5lZCh2YWx1ZTogVCk6IHZvaWQge1xuICAgICAgICBpZiAodmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWRBcmd1bWVudEVycm9yKCdWYWx1ZSBtdXN0IGJlIGRlZmluZWQnKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyB2YWx1ZSgpOiBUIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3ZhbHVlO1xuICAgIH1cblxuICAgIHB1YmxpYyBlcXVhbHMob3RoZXI6IFZhbHVlT2JqZWN0PFQ+KTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlKCkgPT09IG90aGVyLnZhbHVlKCk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudG9TdHJpbmcoKTtcbiAgICB9XG5cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgaWYgKHRoaXMuX3ZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fdmFsdWUudG9TdHJpbmcoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0aGlzLl92YWx1ZTtcbiAgICB9XG5cbiAgICB2YWx1ZU9mKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fdmFsdWU7XG4gICAgfVxufVxuIl19