7f23a36299f6a10f8fba0cc558967ef5
"use strict";

/* istanbul ignore next */
function cov_10zjjf9hjo() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/domain/InfoRequestedDomainEvent.ts";
  var hash = "9177a21b0418700971cf0ad9c660f3cf7d132608";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/domain/InfoRequestedDomainEvent.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 6,
          column: 67
        }
      },
      "4": {
        start: {
          line: 7,
          column: 29
        },
        end: {
          line: 7,
          column: 103
        }
      },
      "5": {
        start: {
          line: 8,
          column: 15
        },
        end: {
          line: 8,
          column: 75
        }
      },
      "6": {
        start: {
          line: 9,
          column: 22
        },
        end: {
          line: 9,
          column: 90
        }
      },
      "7": {
        start: {
          line: 10,
          column: 20
        },
        end: {
          line: 10,
          column: 88
        }
      },
      "8": {
        start: {
          line: 11,
          column: 37
        },
        end: {
          line: 11,
          column: 122
        }
      },
      "9": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 138
        }
      },
      "10": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 82
        }
      },
      "11": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 43
        }
      },
      "12": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 21,
          column: 135
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 29
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 32
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/domain/InfoRequestedDomainEvent.ts",
      mappings: ";;;;;AAAA,oEAAiE;AACjE,wGAAgF;AAChF,4EAAoD;AACpD,2FAAmE;AACnE,yFAAiE;AACjE,2HAAmG;AAEnG,MAAqB,wBAAyB,SAAQ,qBAAW;IAG7D,YACI,WAAiB;QAEjB,KAAK,CACD,mBAAS,CAAC,MAAM,EAAE,EAClB,wBAAwB,CAAC,UAAU,EACnC,WAAW,EACX,oCAA0B,CAAC,GAAG,EAAE,CACnC,CAAC;IACN,CAAC;IAED,MAAM,CAAC,cAAc,CAAC,IAAS;QAC3B,OAAO,IAAI,wBAAwB,CAAC,IAAI,cAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACpE,CAAC;;AAhBL,2CAiBC;AAhBU,mCAAU,GAAG,4BAAkB,CAAC,MAAM,CAAC,WAAW,EAAE,MAAM,EAAE,yBAAW,CAAC,YAAY,CAAC,CAAC",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/domain/InfoRequestedDomainEvent.ts"],
      sourcesContent: ["import { MessageType } from '@microk/common/message/MessageType';\nimport MessageNameFactory from '@microk/common/value-object/MessageNameFactory';\nimport Uuid from '@microk/common/value-object/Uuid';\nimport DomainEvent from '../../../microk/event/domain/DomainEvent';\nimport MessageId from '../../../microk/common/message/MessageId';\nimport AggregateMessageOccurredOn from '../../../microk/common/message/AggregateMessageOccurredOn';\n\nexport default class InfoRequestedDomainEvent extends DomainEvent {\n    static EVENT_NAME = MessageNameFactory.create('requested', 'info', MessageType.DOMAIN_EVENT);\n\n    constructor(\n        aggregateId: Uuid,\n    ) {\n        super(\n            MessageId.create(),\n            InfoRequestedDomainEvent.EVENT_NAME,\n            aggregateId,\n            AggregateMessageOccurredOn.now(),\n        );\n    }\n\n    static fromPrimitives(args: any): InfoRequestedDomainEvent {\n        return new InfoRequestedDomainEvent(new Uuid(args.aggregateId));\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9177a21b0418700971cf0ad9c660f3cf7d132608"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_10zjjf9hjo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_10zjjf9hjo();

var __importDefault =
/* istanbul ignore next */
(cov_10zjjf9hjo().s[0]++,
/* istanbul ignore next */
(cov_10zjjf9hjo().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_10zjjf9hjo().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_10zjjf9hjo().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_10zjjf9hjo().f[0]++;
  cov_10zjjf9hjo().s[1]++;
  return (
    /* istanbul ignore next */
    (cov_10zjjf9hjo().b[2][0]++, mod) &&
    /* istanbul ignore next */
    (cov_10zjjf9hjo().b[2][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_10zjjf9hjo().b[1][0]++, mod) :
    /* istanbul ignore next */
    (cov_10zjjf9hjo().b[1][1]++, {
      "default": mod
    })
  );
}));

/* istanbul ignore next */
cov_10zjjf9hjo().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const MessageType_1 =
/* istanbul ignore next */
(cov_10zjjf9hjo().s[3]++, require("@microk/common/message/MessageType"));
const MessageNameFactory_1 =
/* istanbul ignore next */
(cov_10zjjf9hjo().s[4]++, __importDefault(require("@microk/common/value-object/MessageNameFactory")));
const Uuid_1 =
/* istanbul ignore next */
(cov_10zjjf9hjo().s[5]++, __importDefault(require("@microk/common/value-object/Uuid")));
const DomainEvent_1 =
/* istanbul ignore next */
(cov_10zjjf9hjo().s[6]++, __importDefault(require("../../../microk/event/domain/DomainEvent")));
const MessageId_1 =
/* istanbul ignore next */
(cov_10zjjf9hjo().s[7]++, __importDefault(require("../../../microk/common/message/MessageId")));
const AggregateMessageOccurredOn_1 =
/* istanbul ignore next */
(cov_10zjjf9hjo().s[8]++, __importDefault(require("../../../microk/common/message/AggregateMessageOccurredOn")));

class InfoRequestedDomainEvent extends
/* istanbul ignore next */
(DomainEvent_1.default) {
  constructor(aggregateId) {
    /* istanbul ignore next */
    cov_10zjjf9hjo().f[1]++;
    cov_10zjjf9hjo().s[9]++;
    super(MessageId_1.default.create(), InfoRequestedDomainEvent.EVENT_NAME, aggregateId, AggregateMessageOccurredOn_1.default.now());
  }

  static fromPrimitives(args) {
    /* istanbul ignore next */
    cov_10zjjf9hjo().f[2]++;
    cov_10zjjf9hjo().s[10]++;
    return new InfoRequestedDomainEvent(new Uuid_1.default(args.aggregateId));
  }

}

/* istanbul ignore next */
cov_10zjjf9hjo().s[11]++;
exports.default = InfoRequestedDomainEvent;

/* istanbul ignore next */
cov_10zjjf9hjo().s[12]++;
InfoRequestedDomainEvent.EVENT_NAME = MessageNameFactory_1.default.create('requested', 'info', MessageType_1.MessageType.DOMAIN_EVENT);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbW9kdWxlcy9pbmZvL2RvbWFpbi9JbmZvUmVxdWVzdGVkRG9tYWluRXZlbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXFCVzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFyQlgsTUFBQSxhQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsb0NBQUEsQ0FBQSxDQUFBO0FBQ0EsTUFBQSxvQkFBQTtBQUFBO0FBQUEsMEJBQUEsZUFBQSxDQUFBLE9BQUEsQ0FBQSxnREFBQSxDQUFBLENBQUEsQ0FBQTtBQUNBLE1BQUEsTUFBQTtBQUFBO0FBQUEsMEJBQUEsZUFBQSxDQUFBLE9BQUEsQ0FBQSxrQ0FBQSxDQUFBLENBQUEsQ0FBQTtBQUNBLE1BQUEsYUFBQTtBQUFBO0FBQUEsMEJBQUEsZUFBQSxDQUFBLE9BQUEsQ0FBQSwwQ0FBQSxDQUFBLENBQUEsQ0FBQTtBQUNBLE1BQUEsV0FBQTtBQUFBO0FBQUEsMEJBQUEsZUFBQSxDQUFBLE9BQUEsQ0FBQSwwQ0FBQSxDQUFBLENBQUEsQ0FBQTtBQUNBLE1BQUEsNEJBQUE7QUFBQTtBQUFBLDBCQUFBLGVBQUEsQ0FBQSxPQUFBLENBQUEsMkRBQUEsQ0FBQSxDQUFBLENBQUE7O0FBRUEsTUFBcUIsd0JBQXJCO0FBQUE7QUFBQSxDQUFzRCxhQUFBLENBQUEsT0FBdEQsRUFBaUU7QUFHN0QsRUFBQSxXQUFBLENBQ0ksV0FESixFQUNxQjtBQUFBO0FBQUE7QUFBQTtBQUVqQixVQUNJLFdBQUEsQ0FBQSxPQUFBLENBQVUsTUFBVixFQURKLEVBRUksd0JBQXdCLENBQUMsVUFGN0IsRUFHSSxXQUhKLEVBSUksNEJBQUEsQ0FBQSxPQUFBLENBQTJCLEdBQTNCLEVBSko7QUFNSDs7QUFFb0IsU0FBZCxjQUFjLENBQUMsSUFBRCxFQUFVO0FBQUE7QUFBQTtBQUFBO0FBQzNCLFdBQU8sSUFBSSx3QkFBSixDQUE2QixJQUFJLE1BQUEsQ0FBQSxPQUFKLENBQVMsSUFBSSxDQUFDLFdBQWQsQ0FBN0IsQ0FBUDtBQUNIOztBQWhCNEQ7Ozs7QUFBakUsT0FBQSxDQUFBLE9BQUEsR0FBQSx3QkFBQTs7OztBQUNXLHdCQUFBLENBQUEsVUFBQSxHQUFhLG9CQUFBLENBQUEsT0FBQSxDQUFtQixNQUFuQixDQUEwQixXQUExQixFQUF1QyxNQUF2QyxFQUErQyxhQUFBLENBQUEsV0FBQSxDQUFZLFlBQTNELENBQWIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNZXNzYWdlVHlwZSB9IGZyb20gJ0BtaWNyb2svY29tbW9uL21lc3NhZ2UvTWVzc2FnZVR5cGUnO1xuaW1wb3J0IE1lc3NhZ2VOYW1lRmFjdG9yeSBmcm9tICdAbWljcm9rL2NvbW1vbi92YWx1ZS1vYmplY3QvTWVzc2FnZU5hbWVGYWN0b3J5JztcbmltcG9ydCBVdWlkIGZyb20gJ0BtaWNyb2svY29tbW9uL3ZhbHVlLW9iamVjdC9VdWlkJztcbmltcG9ydCBEb21haW5FdmVudCBmcm9tICcuLi8uLi8uLi9taWNyb2svZXZlbnQvZG9tYWluL0RvbWFpbkV2ZW50JztcbmltcG9ydCBNZXNzYWdlSWQgZnJvbSAnLi4vLi4vLi4vbWljcm9rL2NvbW1vbi9tZXNzYWdlL01lc3NhZ2VJZCc7XG5pbXBvcnQgQWdncmVnYXRlTWVzc2FnZU9jY3VycmVkT24gZnJvbSAnLi4vLi4vLi4vbWljcm9rL2NvbW1vbi9tZXNzYWdlL0FnZ3JlZ2F0ZU1lc3NhZ2VPY2N1cnJlZE9uJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW5mb1JlcXVlc3RlZERvbWFpbkV2ZW50IGV4dGVuZHMgRG9tYWluRXZlbnQge1xuICAgIHN0YXRpYyBFVkVOVF9OQU1FID0gTWVzc2FnZU5hbWVGYWN0b3J5LmNyZWF0ZSgncmVxdWVzdGVkJywgJ2luZm8nLCBNZXNzYWdlVHlwZS5ET01BSU5fRVZFTlQpO1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIGFnZ3JlZ2F0ZUlkOiBVdWlkLFxuICAgICkge1xuICAgICAgICBzdXBlcihcbiAgICAgICAgICAgIE1lc3NhZ2VJZC5jcmVhdGUoKSxcbiAgICAgICAgICAgIEluZm9SZXF1ZXN0ZWREb21haW5FdmVudC5FVkVOVF9OQU1FLFxuICAgICAgICAgICAgYWdncmVnYXRlSWQsXG4gICAgICAgICAgICBBZ2dyZWdhdGVNZXNzYWdlT2NjdXJyZWRPbi5ub3coKSxcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZnJvbVByaW1pdGl2ZXMoYXJnczogYW55KTogSW5mb1JlcXVlc3RlZERvbWFpbkV2ZW50IHtcbiAgICAgICAgcmV0dXJuIG5ldyBJbmZvUmVxdWVzdGVkRG9tYWluRXZlbnQobmV3IFV1aWQoYXJncy5hZ2dyZWdhdGVJZCkpO1xuICAgIH1cbn1cbiJdfQ==