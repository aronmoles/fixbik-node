{"version":3,"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/application/login/LoginService.ts"],"names":[],"mappingsqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAFrB,MAAA,uBAAA;AAAA;AAAA,0BAAA,eAAA,CAAA,OAAA,CAAA,0CAAA,CAAA,CAAA,CAAA;;AAEA,MAAqB,YAArB,CAAiC;AAE7B,EAAA,WAAA,CACI,kBADJ,EAEqB,mBAFrB,EAE6D;AAAA;AAAA;AAAA;AAAxC,SAAA,mBAAA,GAAA,mBAAA;;AAAwC;AAAA;AAEzD,SAAK,uBAAL,GAA+B,IAAI,uBAAA,CAAA,OAAJ,CAA0B,kBAA1B,CAA/B;AACH;;AAEK,EAAA,GAAG,CAAC,KAAD,EAAuB,QAAvB,EAAiD;AAAA;AAAA;AAAA;;;;AACtD,YAAM,QAAQ;AAAA;AAAA,gCAAG,MAAM,KAAK,uBAAL,CAA6B,MAA7B,CAAoC,KAApC,CAAT,CAAd;;;;AAEA,MAAA,QAAQ,CAAC,eAAT,CAAyB,QAAzB;;;;AAEA,aAAO,KAAK,mBAAL,CAAyB,QAAzB,CAAkC,QAAlC,CAAP;AACH,K;AAAA;;AAf4B;;;;AAAjC,OAAA,CAAA,OAAA,GAAA,YAAA","sourcesContent":["import AuthToken from '../../domain/AuthToken';\nimport AuthTokenRepository from '../../domain/AuthTokenRepository';\nimport AuthUserEmail from '../../domain/AuthUserEmail';\nimport AuthUserPassword from '../../domain/AuthUserPassword';\nimport { AuthUserRepository } from '../../domain/AuthUserRepository';\nimport AuthUserSearchByEmail from '../search-by-email/AuthUserSearchByEmail';\n\nexport default class LoginService {\n    private readonly authUserSearcherByEmail: AuthUserSearchByEmail;\n    constructor(\n        authUserRepository: AuthUserRepository,\n        private readonly authTokenRepository: AuthTokenRepository,\n    ) {\n        this.authUserSearcherByEmail = new AuthUserSearchByEmail(authUserRepository);\n    }\n\n    async run(email: AuthUserEmail, password: AuthUserPassword): Promise<AuthToken> {\n        const authUser = await this.authUserSearcherByEmail.search(email);\n\n        authUser.isValidPassword(password);\n\n        return this.authTokenRepository.generate(authUser);\n    }\n}\n"]}