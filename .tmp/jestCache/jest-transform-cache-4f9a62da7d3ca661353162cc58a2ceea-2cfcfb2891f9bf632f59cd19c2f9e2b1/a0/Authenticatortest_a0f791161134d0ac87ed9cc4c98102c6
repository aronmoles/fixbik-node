3fc5063fac05f0643bf68c6f90ea84e4
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const NotFoundHttpError_1 = __importDefault(require("@microk/common/http/errors/NotFoundHttpError"));
const AuthenticateQueryHandler_1 = __importDefault(require("../../../../src/modules/auth/application/login/AuthenticateQueryHandler"));
const Authenticator_1 = __importDefault(require("../../../../src/modules/auth/application/login/Authenticator"));
const AuthTokenRepositoryMock_1 = __importDefault(require("../__mocks__/AuthTokenRepositoryMock"));
const AuthUserRepositoryMock_1 = __importDefault(require("../__mocks__/AuthUserRepositoryMock"));
const AuthUserMother_1 = __importDefault(require("../domain/AuthUserMother"));
const AuthenticateQueryMother_1 = __importDefault(require("./AuthenticateQueryMother"));
let authUserRepository;
let authTokenRepository;
let authenticateQueryHandler;
beforeEach(() => {
    authTokenRepository = new AuthTokenRepositoryMock_1.default();
    authUserRepository = new AuthUserRepositoryMock_1.default();
    authenticateQueryHandler = new AuthenticateQueryHandler_1.default(new Authenticator_1.default(authUserRepository, authTokenRepository));
});
describe('Authenticator', () => {
    it('should create a valid auth token', () => __awaiter(void 0, void 0, void 0, function* () {
        const query = AuthenticateQueryMother_1.default.random();
        const authUser = AuthUserMother_1.default.fromQuery(query);
        authUserRepository.mockReturn(authUser);
        const authToken = yield authenticateQueryHandler.handle(query);
        expect(authToken.toString()).toBeDefined();
    }));
    it('should throw NotFoundError if user not exists', () => __awaiter(void 0, void 0, void 0, function* () {
        const query = AuthenticateQueryMother_1.default.random();
        authUserRepository.mockReturn(null);
        yield expect(() => __awaiter(void 0, void 0, void 0, function* () {
            yield authenticateQueryHandler.handle(query);
        })).rejects.toThrow(NotFoundHttpError_1.default);
    }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3Rlc3RzL21vZHVsZXMvYXV0aC9hcHBsaWNhdGlvbi9BdXRoZW50aWNhdG9yLnRlc3QudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQSxxR0FBNkU7QUFDN0UsdUlBQStHO0FBQy9HLGlIQUF5RjtBQUV6RixtR0FBMkU7QUFDM0UsaUdBQXlFO0FBQ3pFLDhFQUFzRDtBQUN0RCx3RkFBZ0U7QUFFaEUsSUFBSSxrQkFBMEMsQ0FBQztBQUMvQyxJQUFJLG1CQUF3QyxDQUFDO0FBQzdDLElBQUksd0JBQWtELENBQUM7QUFFdkQsVUFBVSxDQUFDLEdBQUcsRUFBRTtJQUNaLG1CQUFtQixHQUFHLElBQUksaUNBQXVCLEVBQUUsQ0FBQztJQUNwRCxrQkFBa0IsR0FBRyxJQUFJLGdDQUFzQixFQUFFLENBQUM7SUFDbEQsd0JBQXdCLEdBQUcsSUFBSSxrQ0FBd0IsQ0FBQyxJQUFJLHVCQUFhLENBQUMsa0JBQWtCLEVBQUUsbUJBQW1CLENBQUMsQ0FBQyxDQUFBO0FBQ3ZILENBQUMsQ0FBQyxDQUFDO0FBRUgsUUFBUSxDQUFDLGVBQWUsRUFBRSxHQUFHLEVBQUU7SUFDM0IsRUFBRSxDQUFDLGtDQUFrQyxFQUFFLEdBQVMsRUFBRTtRQUM5QyxNQUFNLEtBQUssR0FBRyxpQ0FBdUIsQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUMvQyxNQUFNLFFBQVEsR0FBRyx3QkFBYyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNqRCxrQkFBa0IsQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFeEMsTUFBTSxTQUFTLEdBQUcsTUFBTSx3QkFBd0IsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFFL0QsTUFBTSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQy9DLENBQUMsQ0FBQSxDQUFDLENBQUM7SUFDSCxFQUFFLENBQUMsK0NBQStDLEVBQUUsR0FBUyxFQUFFO1FBQzNELE1BQU0sS0FBSyxHQUFHLGlDQUF1QixDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQy9DLGtCQUFrQixDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVwQyxNQUFNLE1BQU0sQ0FBQyxHQUFTLEVBQUU7WUFDcEIsTUFBTSx3QkFBd0IsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDakQsQ0FBQyxDQUFBLENBQUMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLDJCQUFpQixDQUFDLENBQUM7SUFDMUMsQ0FBQyxDQUFBLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS90ZXN0cy9tb2R1bGVzL2F1dGgvYXBwbGljYXRpb24vQXV0aGVudGljYXRvci50ZXN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBOb3RGb3VuZEh0dHBFcnJvciBmcm9tICdAbWljcm9rL2NvbW1vbi9odHRwL2Vycm9ycy9Ob3RGb3VuZEh0dHBFcnJvcic7XG5pbXBvcnQgQXV0aGVudGljYXRlUXVlcnlIYW5kbGVyIGZyb20gJy4uLy4uLy4uLy4uL3NyYy9tb2R1bGVzL2F1dGgvYXBwbGljYXRpb24vbG9naW4vQXV0aGVudGljYXRlUXVlcnlIYW5kbGVyJztcbmltcG9ydCBBdXRoZW50aWNhdG9yIGZyb20gJy4uLy4uLy4uLy4uL3NyYy9tb2R1bGVzL2F1dGgvYXBwbGljYXRpb24vbG9naW4vQXV0aGVudGljYXRvcic7XG5pbXBvcnQgQXV0aFRva2VuUmVwb3NpdG9yeSBmcm9tICcuLi8uLi8uLi8uLi9zcmMvbW9kdWxlcy9hdXRoL2RvbWFpbi9BdXRoVG9rZW5SZXBvc2l0b3J5JztcbmltcG9ydCBBdXRoVG9rZW5SZXBvc2l0b3J5TW9jayBmcm9tICcuLi9fX21vY2tzX18vQXV0aFRva2VuUmVwb3NpdG9yeU1vY2snO1xuaW1wb3J0IEF1dGhVc2VyUmVwb3NpdG9yeU1vY2sgZnJvbSAnLi4vX19tb2Nrc19fL0F1dGhVc2VyUmVwb3NpdG9yeU1vY2snO1xuaW1wb3J0IEF1dGhVc2VyTW90aGVyIGZyb20gJy4uL2RvbWFpbi9BdXRoVXNlck1vdGhlcic7XG5pbXBvcnQgQXV0aGVudGljYXRlUXVlcnlNb3RoZXIgZnJvbSAnLi9BdXRoZW50aWNhdGVRdWVyeU1vdGhlcic7XG5cbmxldCBhdXRoVXNlclJlcG9zaXRvcnk6IEF1dGhVc2VyUmVwb3NpdG9yeU1vY2s7XG5sZXQgYXV0aFRva2VuUmVwb3NpdG9yeTogQXV0aFRva2VuUmVwb3NpdG9yeTtcbmxldCBhdXRoZW50aWNhdGVRdWVyeUhhbmRsZXI6IEF1dGhlbnRpY2F0ZVF1ZXJ5SGFuZGxlcjtcblxuYmVmb3JlRWFjaCgoKSA9PiB7XG4gICAgYXV0aFRva2VuUmVwb3NpdG9yeSA9IG5ldyBBdXRoVG9rZW5SZXBvc2l0b3J5TW9jaygpO1xuICAgIGF1dGhVc2VyUmVwb3NpdG9yeSA9IG5ldyBBdXRoVXNlclJlcG9zaXRvcnlNb2NrKCk7XG4gICAgYXV0aGVudGljYXRlUXVlcnlIYW5kbGVyID0gbmV3IEF1dGhlbnRpY2F0ZVF1ZXJ5SGFuZGxlcihuZXcgQXV0aGVudGljYXRvcihhdXRoVXNlclJlcG9zaXRvcnksIGF1dGhUb2tlblJlcG9zaXRvcnkpKVxufSk7XG5cbmRlc2NyaWJlKCdBdXRoZW50aWNhdG9yJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgY3JlYXRlIGEgdmFsaWQgYXV0aCB0b2tlbicsIGFzeW5jICgpID0+IHtcbiAgICAgICAgY29uc3QgcXVlcnkgPSBBdXRoZW50aWNhdGVRdWVyeU1vdGhlci5yYW5kb20oKTtcbiAgICAgICAgY29uc3QgYXV0aFVzZXIgPSBBdXRoVXNlck1vdGhlci5mcm9tUXVlcnkocXVlcnkpO1xuICAgICAgICBhdXRoVXNlclJlcG9zaXRvcnkubW9ja1JldHVybihhdXRoVXNlcik7XG5cbiAgICAgICAgY29uc3QgYXV0aFRva2VuID0gYXdhaXQgYXV0aGVudGljYXRlUXVlcnlIYW5kbGVyLmhhbmRsZShxdWVyeSk7XG5cbiAgICAgICAgZXhwZWN0KGF1dGhUb2tlbi50b1N0cmluZygpKS50b0JlRGVmaW5lZCgpO1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgdGhyb3cgTm90Rm91bmRFcnJvciBpZiB1c2VyIG5vdCBleGlzdHMnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHF1ZXJ5ID0gQXV0aGVudGljYXRlUXVlcnlNb3RoZXIucmFuZG9tKCk7XG4gICAgICAgIGF1dGhVc2VyUmVwb3NpdG9yeS5tb2NrUmV0dXJuKG51bGwpO1xuXG4gICAgICAgIGF3YWl0IGV4cGVjdChhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICBhd2FpdCBhdXRoZW50aWNhdGVRdWVyeUhhbmRsZXIuaGFuZGxlKHF1ZXJ5KTtcbiAgICAgICAgfSkucmVqZWN0cy50b1Rocm93KE5vdEZvdW5kSHR0cEVycm9yKTtcbiAgICB9KTtcbn0pO1xuIl0sInZlcnNpb24iOjN9