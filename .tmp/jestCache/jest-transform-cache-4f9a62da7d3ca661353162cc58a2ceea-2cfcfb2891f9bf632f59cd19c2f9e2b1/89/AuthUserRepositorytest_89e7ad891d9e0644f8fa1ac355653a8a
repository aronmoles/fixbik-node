bb83df5210df5acd88aff8a0e1980c3a
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Container_1 = __importDefault(require("../../../../../src/app/Container"));
const AuthUserMother_1 = __importDefault(require("../../domain/AuthUserMother"));
const repository = Container_1.default.get('Auth.domain.AuthUserRepository');
const environmentArranger = Container_1.default.get('Test.EnvironmentArranger');
beforeEach(() => __awaiter(void 0, void 0, void 0, function* () {
    yield (yield environmentArranger).arrange();
}));
afterAll(() => __awaiter(void 0, void 0, void 0, function* () {
    yield (yield environmentArranger).arrange();
    yield (yield environmentArranger).close();
}));
describe('AuthUserRepository', () => {
    describe('#save', () => {
        it('should save a auth user and search by id', () => __awaiter(void 0, void 0, void 0, function* () {
            const authUser = AuthUserMother_1.default.random();
            yield repository.save(authUser);
            const authUserResponse = yield repository.search(authUser.id);
            expect(authUserResponse).toEqual(authUser);
        }));
    });
    describe('#customSearch', () => {
        it('should do a custom search', () => __awaiter(void 0, void 0, void 0, function* () {
            const authUserResponse = yield repository.customSearch();
        }));
    });
    // describe('#searchOneByCriteria', () => {
    //     it('should save a auth user and search by criteria', async () => {
    //         const authUser = AuthUserMother.random();
    //         await repository.save(authUser);
    //
    //         const criteria = new Criteria(
    //             new Filters([new Filter(
    //                 new FilterField('email'),
    //                 FilterOperator.equal(),
    //                 new FilterValue(authUser.email.toString()),
    //             )]),
    //             Order.none(),
    //         )
    //         const authUserResponse = await repository.searchByCriteria(criteria);
    //
    //         expect(authUserResponse).toEqual(authUser)
    //     });
    // });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3Rlc3RzL21vZHVsZXMvYXV0aC9pbmZyYXN0cnVjdHVyZS9wZXJzaXN0ZW5jZS9BdXRoVXNlclJlcG9zaXRvcnkudGVzdC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQVFBLGlGQUF5RDtBQUV6RCxpRkFBeUQ7QUFFekQsTUFBTSxVQUFVLEdBQXVCLG1CQUFTLENBQUMsR0FBRyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7QUFDdkYsTUFBTSxtQkFBbUIsR0FBd0IsbUJBQVMsQ0FBQyxHQUFHLENBQUMsMEJBQTBCLENBQUMsQ0FBQztBQUUzRixVQUFVLENBQUMsR0FBUyxFQUFFO0lBQ2xCLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7QUFDaEQsQ0FBQyxDQUFBLENBQUMsQ0FBQztBQUVILFFBQVEsQ0FBQyxHQUFTLEVBQUU7SUFDaEIsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUM1QyxNQUFNLENBQUMsTUFBTSxtQkFBbUIsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO0FBQzlDLENBQUMsQ0FBQSxDQUFDLENBQUM7QUFFSCxRQUFRLENBQUMsb0JBQW9CLEVBQUUsR0FBRyxFQUFFO0lBQ2hDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFO1FBQ25CLEVBQUUsQ0FBQywwQ0FBMEMsRUFBRSxHQUFTLEVBQUU7WUFDdEQsTUFBTSxRQUFRLEdBQUcsd0JBQWMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUV6QyxNQUFNLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDaEMsTUFBTSxnQkFBZ0IsR0FBRyxNQUFNLFVBQVUsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBRTlELE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQTtRQUM5QyxDQUFDLENBQUEsQ0FBQyxDQUFDO0lBQ1AsQ0FBQyxDQUFDLENBQUM7SUFFSCxRQUFRLENBQUMsZUFBZSxFQUFFLEdBQUcsRUFBRTtRQUMzQixFQUFFLENBQUMsMkJBQTJCLEVBQUUsR0FBUyxFQUFFO1lBQ3ZDLE1BQU0sZ0JBQWdCLEdBQUcsTUFBTSxVQUFVLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDN0QsQ0FBQyxDQUFBLENBQUMsQ0FBQztJQUNQLENBQUMsQ0FBQyxDQUFDO0lBQ0gsMkNBQTJDO0lBQzNDLHlFQUF5RTtJQUN6RSxvREFBb0Q7SUFDcEQsMkNBQTJDO0lBQzNDLEVBQUU7SUFDRix5Q0FBeUM7SUFDekMsdUNBQXVDO0lBQ3ZDLDRDQUE0QztJQUM1QywwQ0FBMEM7SUFDMUMsOERBQThEO0lBQzlELG1CQUFtQjtJQUNuQiw0QkFBNEI7SUFDNUIsWUFBWTtJQUNaLGdGQUFnRjtJQUNoRixFQUFFO0lBQ0YscURBQXFEO0lBQ3JELFVBQVU7SUFDVixNQUFNO0FBQ1YsQ0FBQyxDQUFDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3Rlc3RzL21vZHVsZXMvYXV0aC9pbmZyYXN0cnVjdHVyZS9wZXJzaXN0ZW5jZS9BdXRoVXNlclJlcG9zaXRvcnkudGVzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcml0ZXJpYSB9IGZyb20gJ0BtaWNyb2svY29tbW9uL2NyaXRlcmlhL0NyaXRlcmlhJztcbmltcG9ydCB7IEZpbHRlciB9IGZyb20gJ0BtaWNyb2svY29tbW9uL2NyaXRlcmlhL0ZpbHRlcic7XG5pbXBvcnQgeyBGaWx0ZXJGaWVsZCB9IGZyb20gJ0BtaWNyb2svY29tbW9uL2NyaXRlcmlhL0ZpbHRlckZpZWxkJztcbmltcG9ydCB7IEZpbHRlck9wZXJhdG9yIH0gZnJvbSAnQG1pY3Jvay9jb21tb24vY3JpdGVyaWEvRmlsdGVyT3BlcmF0b3InO1xuaW1wb3J0IHsgRmlsdGVycyB9IGZyb20gJ0BtaWNyb2svY29tbW9uL2NyaXRlcmlhL0ZpbHRlcnMnO1xuaW1wb3J0IHsgRmlsdGVyVmFsdWUgfSBmcm9tICdAbWljcm9rL2NvbW1vbi9jcml0ZXJpYS9GaWx0ZXJWYWx1ZSc7XG5pbXBvcnQgeyBPcmRlciB9IGZyb20gJ0BtaWNyb2svY29tbW9uL2NyaXRlcmlhL09yZGVyJztcbmltcG9ydCB7IEVudmlyb25tZW50QXJyYW5nZXIgfSBmcm9tICdAbWljcm9rL3Rlc3RzL2RvbWFpbi9FbnZpcm9ubWVudEFycmFuZ2VyJztcbmltcG9ydCBDb250YWluZXIgZnJvbSAnLi4vLi4vLi4vLi4vLi4vc3JjL2FwcC9Db250YWluZXInO1xuaW1wb3J0IHsgQXV0aFVzZXJSZXBvc2l0b3J5IH0gZnJvbSAnLi4vLi4vLi4vLi4vLi4vc3JjL21vZHVsZXMvYXV0aC9kb21haW4vQXV0aFVzZXJSZXBvc2l0b3J5JztcbmltcG9ydCBBdXRoVXNlck1vdGhlciBmcm9tICcuLi8uLi9kb21haW4vQXV0aFVzZXJNb3RoZXInO1xuXG5jb25zdCByZXBvc2l0b3J5OiBBdXRoVXNlclJlcG9zaXRvcnkgPSBDb250YWluZXIuZ2V0KCdBdXRoLmRvbWFpbi5BdXRoVXNlclJlcG9zaXRvcnknKTtcbmNvbnN0IGVudmlyb25tZW50QXJyYW5nZXI6IEVudmlyb25tZW50QXJyYW5nZXIgPSBDb250YWluZXIuZ2V0KCdUZXN0LkVudmlyb25tZW50QXJyYW5nZXInKTtcblxuYmVmb3JlRWFjaChhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgKGF3YWl0IGVudmlyb25tZW50QXJyYW5nZXIpLmFycmFuZ2UoKTtcbn0pO1xuXG5hZnRlckFsbChhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgKGF3YWl0IGVudmlyb25tZW50QXJyYW5nZXIpLmFycmFuZ2UoKTtcbiAgICBhd2FpdCAoYXdhaXQgZW52aXJvbm1lbnRBcnJhbmdlcikuY2xvc2UoKTtcbn0pO1xuXG5kZXNjcmliZSgnQXV0aFVzZXJSZXBvc2l0b3J5JywgKCkgPT4ge1xuICAgIGRlc2NyaWJlKCcjc2F2ZScsICgpID0+IHtcbiAgICAgICAgaXQoJ3Nob3VsZCBzYXZlIGEgYXV0aCB1c2VyIGFuZCBzZWFyY2ggYnkgaWQnLCBhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBhdXRoVXNlciA9IEF1dGhVc2VyTW90aGVyLnJhbmRvbSgpO1xuXG4gICAgICAgICAgICBhd2FpdCByZXBvc2l0b3J5LnNhdmUoYXV0aFVzZXIpO1xuICAgICAgICAgICAgY29uc3QgYXV0aFVzZXJSZXNwb25zZSA9IGF3YWl0IHJlcG9zaXRvcnkuc2VhcmNoKGF1dGhVc2VyLmlkKTtcblxuICAgICAgICAgICAgZXhwZWN0KGF1dGhVc2VyUmVzcG9uc2UpLnRvRXF1YWwoYXV0aFVzZXIpXG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgZGVzY3JpYmUoJyNjdXN0b21TZWFyY2gnLCAoKSA9PiB7XG4gICAgICAgIGl0KCdzaG91bGQgZG8gYSBjdXN0b20gc2VhcmNoJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgYXV0aFVzZXJSZXNwb25zZSA9IGF3YWl0IHJlcG9zaXRvcnkuY3VzdG9tU2VhcmNoKCk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuICAgIC8vIGRlc2NyaWJlKCcjc2VhcmNoT25lQnlDcml0ZXJpYScsICgpID0+IHtcbiAgICAvLyAgICAgaXQoJ3Nob3VsZCBzYXZlIGEgYXV0aCB1c2VyIGFuZCBzZWFyY2ggYnkgY3JpdGVyaWEnLCBhc3luYyAoKSA9PiB7XG4gICAgLy8gICAgICAgICBjb25zdCBhdXRoVXNlciA9IEF1dGhVc2VyTW90aGVyLnJhbmRvbSgpO1xuICAgIC8vICAgICAgICAgYXdhaXQgcmVwb3NpdG9yeS5zYXZlKGF1dGhVc2VyKTtcbiAgICAvL1xuICAgIC8vICAgICAgICAgY29uc3QgY3JpdGVyaWEgPSBuZXcgQ3JpdGVyaWEoXG4gICAgLy8gICAgICAgICAgICAgbmV3IEZpbHRlcnMoW25ldyBGaWx0ZXIoXG4gICAgLy8gICAgICAgICAgICAgICAgIG5ldyBGaWx0ZXJGaWVsZCgnZW1haWwnKSxcbiAgICAvLyAgICAgICAgICAgICAgICAgRmlsdGVyT3BlcmF0b3IuZXF1YWwoKSxcbiAgICAvLyAgICAgICAgICAgICAgICAgbmV3IEZpbHRlclZhbHVlKGF1dGhVc2VyLmVtYWlsLnRvU3RyaW5nKCkpLFxuICAgIC8vICAgICAgICAgICAgICldKSxcbiAgICAvLyAgICAgICAgICAgICBPcmRlci5ub25lKCksXG4gICAgLy8gICAgICAgICApXG4gICAgLy8gICAgICAgICBjb25zdCBhdXRoVXNlclJlc3BvbnNlID0gYXdhaXQgcmVwb3NpdG9yeS5zZWFyY2hCeUNyaXRlcmlhKGNyaXRlcmlhKTtcbiAgICAvL1xuICAgIC8vICAgICAgICAgZXhwZWN0KGF1dGhVc2VyUmVzcG9uc2UpLnRvRXF1YWwoYXV0aFVzZXIpXG4gICAgLy8gICAgIH0pO1xuICAgIC8vIH0pO1xufSk7XG4iXSwidmVyc2lvbiI6M30=