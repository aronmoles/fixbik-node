{"version":3,"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/infrastructure/command/InMemoryCommandBus.ts"],"names":[],"mappingseAAA,CAAA,OAAA,CAAA,uCAAA,CAAA,CAAA,CAAA;;AAKA,MAAa,kBAAb,CAA+B;AAG3B,EAAA,WAAA,CACqB,qBADrB,EAEI,SAAA;AAAA;AAAA,8BAA8C,EAA9C,CAFJ,EAEoD;AAAA;AAAA;AAAA;AAD/B,SAAA,qBAAA,GAAA,qBAAA;;AAC+B;AAAA;AAEhD,SAAK,QAAL,GAAgB,IAAI,UAAA,CAAA,OAAJ,CAA4B,SAA5B,CAAhB;AACH;;AAEK,EAAA,QAAQ,CAAC,OAAD,EAAiB;AAAA;AAAA;AAAA;;;;;AAC3B,aAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,OAAlB,EAA2B,MAAW;AAAA;AAAA;AAAA;AAAA,eAAA,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;AAAA;AAAA;AACzC,gBAAM,OAAO;AAAA;AAAA,oCAAG,KAAK,qBAAL,CAA2B,MAA3B,CAAkC,OAAlC,CAAH,CAAb;;AADyC;AAAA;AAEzC,gBAAM,OAAO,CAAC,MAAR,CAAe,OAAf,CAAN;AACH,SAH4C,CAAA;AAG5C,OAHM,CAAP;AAIH,K;AAAA;;AAf0B;;;;AAA/B,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourcesContent":["import { Mapper } from '../../../common/Mapper';\nimport WrapperExecutor from '../../../core/domain/WrapperExecutor';\nimport Executor from '../../../core/infrastructure/Executor';\nimport Command from '../../domain/command/Command';\nimport { CommandBus } from '../../domain/command/CommandBus';\nimport CommandHandler from '../../domain/command/CommandHandler';\n\nexport class InMemoryCommandBus implements CommandBus {\n    private readonly executor: Executor<Command, void>;\n\n    constructor(\n        private readonly commandHandlersMapper: Mapper<Command, CommandHandler<Command>>,\n        executors: WrapperExecutor<Command, void>[] = [],\n    ) {\n        this.executor = new Executor<Command, void>(executors);\n    }\n\n    async dispatch(command: Command): Promise<void> {\n        return this.executor.run(command, async () => {\n            const handler = this.commandHandlersMapper.search(command);\n            await handler.handle(command);\n        })\n    }\n}\n"]}