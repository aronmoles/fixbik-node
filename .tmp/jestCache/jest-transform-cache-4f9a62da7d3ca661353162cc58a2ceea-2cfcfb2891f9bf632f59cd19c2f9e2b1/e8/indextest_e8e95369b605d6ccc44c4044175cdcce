265a7a5604154e38b30e5e25494e4c89
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const index_1 = __importDefault(require("./index"));
describe('OpenApi', () => {
    it('should create a valid auth token', () => __awaiter(void 0, void 0, void 0, function* () {
        const openApi = new index_1.default({
            baseDir: `${__dirname}/examples`,
            filesPattern: './*.ts',
            info: {
                title: 'Test',
                version: '1.0.0',
                description: 'Public API',
                license: {
                    name: 'MIT',
                },
            },
            components: {
                securitySchemes: {
                    jwt: {
                        type: 'http',
                        scheme: 'bearer',
                        bearerFormat: 'JWT',
                    },
                },
            },
        });
        const openApiDoc = openApi.generateDocs();
        expect(openApiDoc).toEqual({
            openapi: '3.0.0',
            info: {
                version: '1.0.0',
                title: 'FixBike',
            },
            paths: {
                '/notification': {
                    post: {
                        operationId: 'addJob',
                        tags: [
                            'jobs',
                        ],
                        summary: 'Creates a new notification.',
                        description: '',
                        security: [
                            {
                                jwt: [],
                            },
                        ],
                        requestBody: {
                            description: 'Notification object to create',
                            required: true,
                            content: {
                                'application/json': {
                                    schema: {
                                        $ref: '#/components/schemas/Notification',
                                    },
                                },
                            },
                        },
                        responses: {
                            201: {
                                description: 'Successful operation. The notification has been created on the server.',
                                content: {
                                    'application/json': {
                                        schema: {
                                            $ref: '#/components/schemas/Notification',
                                        },
                                    },
                                },
                            },
                            400: {
                                description: 'Bad Request',
                                content: {
                                    'application/json': {
                                        schema: {
                                            $ref: '#/components/schemas/Error',
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
            },
            components: {
                securitySchemes: {
                    jwt: {
                        type: 'http',
                        scheme: 'bearer',
                        bearerFormat: 'JWT',
                    },
                },
                schemas: {
                    Error: {
                        type: 'object',
                        properties: {
                            message: {
                                type: 'string',
                            },
                            code: {
                                type: 'integer',
                                example: 404,
                            },
                        },
                    },
                    Notification: {
                        type: 'object',
                        required: [
                            'serviceUrl',
                        ],
                        properties: {
                            serviceUrl: {
                                type: 'string',
                            },
                            authenticationHeader: {
                                type: 'string',
                            },
                            certificateSubject: {
                                type: 'string',
                            },
                            parameters: {
                                type: 'string',
                            },
                        },
                    },
                },
            },
        });
    }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3NyYy9taWNyb2svZG9jcy9vcGVuYXBpL2luZGV4LnRlc3QudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQSxvREFBOEI7QUFFOUIsUUFBUSxDQUFDLFNBQVMsRUFBRSxHQUFHLEVBQUU7SUFDckIsRUFBRSxDQUFDLGtDQUFrQyxFQUFFLEdBQVMsRUFBRTtRQUM5QyxNQUFNLE9BQU8sR0FBRyxJQUFJLGVBQU8sQ0FBQztZQUN4QixPQUFPLEVBQUUsR0FBRyxTQUFTLFdBQVc7WUFDaEMsWUFBWSxFQUFFLFFBQVE7WUFDdEIsSUFBSSxFQUFFO2dCQUNGLEtBQUssRUFBRSxNQUFNO2dCQUNiLE9BQU8sRUFBRSxPQUFPO2dCQUNoQixXQUFXLEVBQUUsWUFBWTtnQkFDekIsT0FBTyxFQUFFO29CQUNMLElBQUksRUFBRSxLQUFLO2lCQUNkO2FBQ0o7WUFDRCxVQUFVLEVBQUU7Z0JBQ1IsZUFBZSxFQUFFO29CQUNiLEdBQUcsRUFBRTt3QkFDRCxJQUFJLEVBQUUsTUFBTTt3QkFDWixNQUFNLEVBQUUsUUFBUTt3QkFDaEIsWUFBWSxFQUFFLEtBQUs7cUJBQ3RCO2lCQUNKO2FBQ0o7U0FDSixDQUFDLENBQUE7UUFFRixNQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsWUFBWSxFQUFFLENBQUM7UUFFMUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLE9BQU8sQ0FBQztZQUN2QixPQUFPLEVBQUUsT0FBTztZQUNoQixJQUFJLEVBQUU7Z0JBQ0YsT0FBTyxFQUFFLE9BQU87Z0JBQ2hCLEtBQUssRUFBRSxTQUFTO2FBQ25CO1lBQ0QsS0FBSyxFQUFFO2dCQUNILGVBQWUsRUFBRTtvQkFDYixJQUFJLEVBQUU7d0JBQ0YsV0FBVyxFQUFFLFFBQVE7d0JBQ3JCLElBQUksRUFBRTs0QkFDRixNQUFNO3lCQUNUO3dCQUNELE9BQU8sRUFBRSw2QkFBNkI7d0JBQ3RDLFdBQVcsRUFBRSxFQUFFO3dCQUNmLFFBQVEsRUFBRTs0QkFDTjtnQ0FDSSxHQUFHLEVBQUUsRUFBRTs2QkFDVjt5QkFDSjt3QkFDRCxXQUFXLEVBQUU7NEJBQ1QsV0FBVyxFQUFFLCtCQUErQjs0QkFDNUMsUUFBUSxFQUFFLElBQUk7NEJBQ2QsT0FBTyxFQUFFO2dDQUNMLGtCQUFrQixFQUFFO29DQUNoQixNQUFNLEVBQUU7d0NBQ0osSUFBSSxFQUFFLG1DQUFtQztxQ0FDNUM7aUNBQ0o7NkJBQ0o7eUJBQ0o7d0JBQ0QsU0FBUyxFQUFFOzRCQUNQLEdBQUcsRUFBRTtnQ0FDRCxXQUFXLEVBQUUsd0VBQXdFO2dDQUNyRixPQUFPLEVBQUU7b0NBQ0wsa0JBQWtCLEVBQUU7d0NBQ2hCLE1BQU0sRUFBRTs0Q0FDSixJQUFJLEVBQUUsbUNBQW1DO3lDQUM1QztxQ0FDSjtpQ0FDSjs2QkFDSjs0QkFDRCxHQUFHLEVBQUU7Z0NBQ0QsV0FBVyxFQUFFLGFBQWE7Z0NBQzFCLE9BQU8sRUFBRTtvQ0FDTCxrQkFBa0IsRUFBRTt3Q0FDaEIsTUFBTSxFQUFFOzRDQUNKLElBQUksRUFBRSw0QkFBNEI7eUNBQ3JDO3FDQUNKO2lDQUNKOzZCQUNKO3lCQUNKO3FCQUNKO2lCQUNKO2FBQ0o7WUFDRCxVQUFVLEVBQUU7Z0JBQ1IsZUFBZSxFQUFFO29CQUNiLEdBQUcsRUFBRTt3QkFDRCxJQUFJLEVBQUUsTUFBTTt3QkFDWixNQUFNLEVBQUUsUUFBUTt3QkFDaEIsWUFBWSxFQUFFLEtBQUs7cUJBQ3RCO2lCQUNKO2dCQUNELE9BQU8sRUFBRTtvQkFDTCxLQUFLLEVBQUU7d0JBQ0gsSUFBSSxFQUFFLFFBQVE7d0JBQ2QsVUFBVSxFQUFFOzRCQUNSLE9BQU8sRUFBRTtnQ0FDTCxJQUFJLEVBQUUsUUFBUTs2QkFDakI7NEJBQ0QsSUFBSSxFQUFFO2dDQUNGLElBQUksRUFBRSxTQUFTO2dDQUNmLE9BQU8sRUFBRSxHQUFHOzZCQUNmO3lCQUNKO3FCQUNKO29CQUNELFlBQVksRUFBRTt3QkFDVixJQUFJLEVBQUUsUUFBUTt3QkFDZCxRQUFRLEVBQUU7NEJBQ04sWUFBWTt5QkFDZjt3QkFDRCxVQUFVLEVBQUU7NEJBQ1IsVUFBVSxFQUFFO2dDQUNSLElBQUksRUFBRSxRQUFROzZCQUNqQjs0QkFDRCxvQkFBb0IsRUFBRTtnQ0FDbEIsSUFBSSxFQUFFLFFBQVE7NkJBQ2pCOzRCQUNELGtCQUFrQixFQUFFO2dDQUNoQixJQUFJLEVBQUUsUUFBUTs2QkFDakI7NEJBQ0QsVUFBVSxFQUFFO2dDQUNSLElBQUksRUFBRSxRQUFROzZCQUNqQjt5QkFDSjtxQkFDSjtpQkFDSjthQUNKO1NBQ0osQ0FBQyxDQUFBO0lBQ04sQ0FBQyxDQUFBLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbWljcm9rL2RvY3Mvb3BlbmFwaS9pbmRleC50ZXN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBPcGVuQXBpIGZyb20gJy4vaW5kZXgnO1xuXG5kZXNjcmliZSgnT3BlbkFwaScsICgpID0+IHtcbiAgICBpdCgnc2hvdWxkIGNyZWF0ZSBhIHZhbGlkIGF1dGggdG9rZW4nLCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IG9wZW5BcGkgPSBuZXcgT3BlbkFwaSh7XG4gICAgICAgICAgICBiYXNlRGlyOiBgJHtfX2Rpcm5hbWV9L2V4YW1wbGVzYCxcbiAgICAgICAgICAgIGZpbGVzUGF0dGVybjogJy4vKi50cycsXG4gICAgICAgICAgICBpbmZvOiB7XG4gICAgICAgICAgICAgICAgdGl0bGU6ICdUZXN0JyxcbiAgICAgICAgICAgICAgICB2ZXJzaW9uOiAnMS4wLjAnLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnUHVibGljIEFQSScsXG4gICAgICAgICAgICAgICAgbGljZW5zZToge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnTUlUJyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNvbXBvbmVudHM6IHtcbiAgICAgICAgICAgICAgICBzZWN1cml0eVNjaGVtZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgand0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnaHR0cCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBzY2hlbWU6ICdiZWFyZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgYmVhcmVyRm9ybWF0OiAnSldUJyxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSlcblxuICAgICAgICBjb25zdCBvcGVuQXBpRG9jID0gb3BlbkFwaS5nZW5lcmF0ZURvY3MoKTtcblxuICAgICAgICBleHBlY3Qob3BlbkFwaURvYykudG9FcXVhbCh7XG4gICAgICAgICAgICBvcGVuYXBpOiAnMy4wLjAnLFxuICAgICAgICAgICAgaW5mbzoge1xuICAgICAgICAgICAgICAgIHZlcnNpb246ICcxLjAuMCcsXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdGaXhCaWtlJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwYXRoczoge1xuICAgICAgICAgICAgICAgICcvbm90aWZpY2F0aW9uJzoge1xuICAgICAgICAgICAgICAgICAgICBwb3N0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcGVyYXRpb25JZDogJ2FkZEpvYicsXG4gICAgICAgICAgICAgICAgICAgICAgICB0YWdzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2pvYnMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1bW1hcnk6ICdDcmVhdGVzIGEgbmV3IG5vdGlmaWNhdGlvbi4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgc2VjdXJpdHk6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGp3dDogW10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICByZXF1ZXN0Qm9keToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnTm90aWZpY2F0aW9uIG9iamVjdCB0byBjcmVhdGUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2FwcGxpY2F0aW9uL2pzb24nOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY2hlbWE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkcmVmOiAnIy9jb21wb25lbnRzL3NjaGVtYXMvTm90aWZpY2F0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAyMDE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdTdWNjZXNzZnVsIG9wZXJhdGlvbi4gVGhlIG5vdGlmaWNhdGlvbiBoYXMgYmVlbiBjcmVhdGVkIG9uIHRoZSBzZXJ2ZXIuJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2FwcGxpY2F0aW9uL2pzb24nOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2NoZW1hOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRyZWY6ICcjL2NvbXBvbmVudHMvc2NoZW1hcy9Ob3RpZmljYXRpb24nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgNDAwOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnQmFkIFJlcXVlc3QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZW50OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnYXBwbGljYXRpb24vanNvbic6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY2hlbWE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHJlZjogJyMvY29tcG9uZW50cy9zY2hlbWFzL0Vycm9yJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNvbXBvbmVudHM6IHtcbiAgICAgICAgICAgICAgICBzZWN1cml0eVNjaGVtZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgand0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnaHR0cCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBzY2hlbWU6ICdiZWFyZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgYmVhcmVyRm9ybWF0OiAnSldUJyxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHNjaGVtYXM6IHtcbiAgICAgICAgICAgICAgICAgICAgRXJyb3I6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdvYmplY3QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcGVydGllczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3N0cmluZycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2RlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdpbnRlZ2VyJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhhbXBsZTogNDA0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBOb3RpZmljYXRpb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdvYmplY3QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc2VydmljZVVybCcsXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcGVydGllczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZpY2VVcmw6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3N0cmluZycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRoZW50aWNhdGlvbkhlYWRlcjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3RyaW5nJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNlcnRpZmljYXRlU3ViamVjdDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3RyaW5nJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtZXRlcnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3N0cmluZycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pXG4gICAgfSk7XG59KTtcbiJdLCJ2ZXJzaW9uIjozfQ==