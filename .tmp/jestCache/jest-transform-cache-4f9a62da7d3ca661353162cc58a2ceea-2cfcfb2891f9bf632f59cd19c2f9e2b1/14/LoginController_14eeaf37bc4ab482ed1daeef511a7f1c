7e009779d47bc383e640032018a7636d
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const HttpMethod_1 = require("@microk/common/http/HttpMethod");
const HttpStatus_1 = require("@microk/common/http/HttpStatus");
const LoginQuery_1 = __importDefault(require("../../application/login/LoginQuery"));
class LoginController {
    constructor(queryBus) {
        this.queryBus = queryBus;
    }
    config() {
        return {
            path: '/auth/login',
            method: HttpMethod_1.HttpMethod.POST,
        };
    }
    run(req, res) {
        return __awaiter(this, void 0, void 0, function* () {
            const loginQuery = LoginQuery_1.default.fromRequest(req);
            const loginQueryResponse = yield this.queryBus.ask(loginQuery);
            res.status(HttpStatus_1.HttpStatus.OK).send(loginQueryResponse);
        });
    }
}
exports.default = LoginController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3NyYy9tb2R1bGVzL2F1dGgvaW5mcmFzdHJ1Y3R1cmUvY29udHJvbGxlcnMvTG9naW5Db250cm9sbGVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEsK0RBQTREO0FBQzVELCtEQUE0RDtBQU01RCxvRkFBNEQ7QUFHNUQsTUFBcUIsZUFBZTtJQUNoQyxZQUNxQixRQUFrQjtRQUFsQixhQUFRLEdBQVIsUUFBUSxDQUFVO0lBRXZDLENBQUM7SUFFRCxNQUFNO1FBQ0YsT0FBTztZQUNILElBQUksRUFBRSxhQUFhO1lBQ25CLE1BQU0sRUFBRSx1QkFBVSxDQUFDLElBQUk7U0FDMUIsQ0FBQztJQUNOLENBQUM7SUFFSyxHQUFHLENBQUMsR0FBWSxFQUFFLEdBQWE7O1lBQ2pDLE1BQU0sVUFBVSxHQUFHLG9CQUFVLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQy9DLE1BQU0sa0JBQWtCLEdBQUcsTUFBTSxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBcUIsVUFBVSxDQUFDLENBQUM7WUFDbkYsR0FBRyxDQUFDLE1BQU0sQ0FBQyx1QkFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQ3ZELENBQUM7S0FBQTtDQUNKO0FBbEJELGtDQWtCQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvY3VhdHJvb2NoZW50YS9NYWdpY1Nob3BwZXIvbWFnaWNzaG9wcGVyLW5vZGUvc3JjL21vZHVsZXMvYXV0aC9pbmZyYXN0cnVjdHVyZS9jb250cm9sbGVycy9Mb2dpbkNvbnRyb2xsZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cE1ldGhvZCB9IGZyb20gJ0BtaWNyb2svY29tbW9uL2h0dHAvSHR0cE1ldGhvZCc7XG5pbXBvcnQgeyBIdHRwU3RhdHVzIH0gZnJvbSAnQG1pY3Jvay9jb21tb24vaHR0cC9IdHRwU3RhdHVzJztcbmltcG9ydCBDb250cm9sbGVyIGZyb20gJ0BtaWNyb2svY29yZS9kb21haW4vaHR0cC9Db250cm9sbGVyJztcbmltcG9ydCB7IENvbnRyb2xsZXJDb25maWcgfSBmcm9tICdAbWljcm9rL2NvcmUvZG9tYWluL2h0dHAvQ29udHJvbGxlckNvbmZpZyc7XG5pbXBvcnQgeyBSZXF1ZXN0IH0gZnJvbSAnQG1pY3Jvay9jb3JlL2RvbWFpbi9odHRwL1JlcXVlc3QnO1xuaW1wb3J0IHsgUmVzcG9uc2UgfSBmcm9tICdAbWljcm9rL2NvcmUvZG9tYWluL2h0dHAvUmVzcG9uc2UnO1xuaW1wb3J0IFF1ZXJ5QnVzIGZyb20gJ0BtaWNyb2svY3Fycy9kb21haW4vcXVlcnkvUXVlcnlCdXMnO1xuaW1wb3J0IExvZ2luUXVlcnkgZnJvbSAnLi4vLi4vYXBwbGljYXRpb24vbG9naW4vTG9naW5RdWVyeSc7XG5pbXBvcnQgTG9naW5RdWVyeVJlc3BvbnNlIGZyb20gJy4uLy4uL2FwcGxpY2F0aW9uL2xvZ2luL0xvZ2luUXVlcnlSZXNwb25zZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExvZ2luQ29udHJvbGxlciBpbXBsZW1lbnRzIENvbnRyb2xsZXIge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IHF1ZXJ5QnVzOiBRdWVyeUJ1cyxcbiAgICApIHtcbiAgICB9XG5cbiAgICBjb25maWcoKTogQ29udHJvbGxlckNvbmZpZyB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBwYXRoOiAnL2F1dGgvbG9naW4nLFxuICAgICAgICAgICAgbWV0aG9kOiBIdHRwTWV0aG9kLlBPU1QsXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgYXN5bmMgcnVuKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICBjb25zdCBsb2dpblF1ZXJ5ID0gTG9naW5RdWVyeS5mcm9tUmVxdWVzdChyZXEpO1xuICAgICAgICBjb25zdCBsb2dpblF1ZXJ5UmVzcG9uc2UgPSBhd2FpdCB0aGlzLnF1ZXJ5QnVzLmFzazxMb2dpblF1ZXJ5UmVzcG9uc2U+KGxvZ2luUXVlcnkpO1xuICAgICAgICByZXMuc3RhdHVzKEh0dHBTdGF0dXMuT0spLnNlbmQobG9naW5RdWVyeVJlc3BvbnNlKTtcbiAgICB9XG59XG4iXSwidmVyc2lvbiI6M30=