f17a380e8a9d56ce087e4c25483468fa
"use strict";

/* istanbul ignore next */
function cov_1qcxqsvsjp() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/Query.ts";
  var hash = "ecc13388c22a38d9289e4bc0f59cedfbb36b28fd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/Query.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 6,
          column: 89
        }
      },
      "4": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 7,
          column: 68
        }
      },
      "5": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 63
        }
      },
      "6": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 32
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 9
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/Query.ts",
      mappings: ";;;;;AAAA,0FAAkE;AAGlE,qEAAkE;AAGlE,MAAqB,KAAM,SAAQ,uBAAa;IAC5C,YAAY,EAAa,EAAE,IAAiB,EAAE,IAAkB;QAC5D,KAAK,CAAC,EAAE,EAAE,yBAAW,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC7C,CAAC;CACJ;AAJD,wBAIC",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/Query.ts"],
      sourcesContent: ["import SimpleMessage from '../../../common/message/SimpleMessage';\nimport MessageMeta from '../../../common/message/MessageMeta';\nimport MessageName from '../../../common/message/MessageName';\nimport { MessageType } from '../../../common/message/MessageType';\nimport MessageId from '../../../common/message/MessageId';\n\nexport default class Query extends SimpleMessage {\n    constructor(id: MessageId, name: MessageName, meta?: MessageMeta) {\n        super(id, MessageType.QUERY, name, meta);\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ecc13388c22a38d9289e4bc0f59cedfbb36b28fd"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1qcxqsvsjp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1qcxqsvsjp();

var __importDefault =
/* istanbul ignore next */
(cov_1qcxqsvsjp().s[0]++,
/* istanbul ignore next */
(cov_1qcxqsvsjp().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1qcxqsvsjp().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1qcxqsvsjp().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1qcxqsvsjp().f[0]++;
  cov_1qcxqsvsjp().s[1]++;
  return (
    /* istanbul ignore next */
    (cov_1qcxqsvsjp().b[2][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1qcxqsvsjp().b[2][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_1qcxqsvsjp().b[1][0]++, mod) :
    /* istanbul ignore next */
    (cov_1qcxqsvsjp().b[1][1]++, {
      "default": mod
    })
  );
}));

/* istanbul ignore next */
cov_1qcxqsvsjp().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const SimpleMessage_1 =
/* istanbul ignore next */
(cov_1qcxqsvsjp().s[3]++, __importDefault(require("../../../common/message/SimpleMessage")));
const MessageType_1 =
/* istanbul ignore next */
(cov_1qcxqsvsjp().s[4]++, require("../../../common/message/MessageType"));

class Query extends
/* istanbul ignore next */
(SimpleMessage_1.default) {
  constructor(id, name, meta) {
    /* istanbul ignore next */
    cov_1qcxqsvsjp().f[1]++;
    cov_1qcxqsvsjp().s[5]++;
    super(id, MessageType_1.MessageType.QUERY, name, meta);
  }

}

/* istanbul ignore next */
cov_1qcxqsvsjp().s[6]++;
exports.default = Query;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbWljcm9rL2NxcnMvZG9tYWluL3F1ZXJ5L1F1ZXJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsTUFBQSxlQUFBO0FBQUE7QUFBQSwwQkFBQSxlQUFBLENBQUEsT0FBQSxDQUFBLHVDQUFBLENBQUEsQ0FBQSxDQUFBO0FBR0EsTUFBQSxhQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEscUNBQUEsQ0FBQSxDQUFBOztBQUdBLE1BQXFCLEtBQXJCO0FBQUE7QUFBQSxDQUFtQyxlQUFBLENBQUEsT0FBbkMsRUFBZ0Q7QUFDNUMsRUFBQSxXQUFBLENBQVksRUFBWixFQUEyQixJQUEzQixFQUE4QyxJQUE5QyxFQUFnRTtBQUFBO0FBQUE7QUFBQTtBQUM1RCxVQUFNLEVBQU4sRUFBVSxhQUFBLENBQUEsV0FBQSxDQUFZLEtBQXRCLEVBQTZCLElBQTdCLEVBQW1DLElBQW5DO0FBQ0g7O0FBSDJDOzs7O0FBQWhELE9BQUEsQ0FBQSxPQUFBLEdBQUEsS0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTaW1wbGVNZXNzYWdlIGZyb20gJy4uLy4uLy4uL2NvbW1vbi9tZXNzYWdlL1NpbXBsZU1lc3NhZ2UnO1xuaW1wb3J0IE1lc3NhZ2VNZXRhIGZyb20gJy4uLy4uLy4uL2NvbW1vbi9tZXNzYWdlL01lc3NhZ2VNZXRhJztcbmltcG9ydCBNZXNzYWdlTmFtZSBmcm9tICcuLi8uLi8uLi9jb21tb24vbWVzc2FnZS9NZXNzYWdlTmFtZSc7XG5pbXBvcnQgeyBNZXNzYWdlVHlwZSB9IGZyb20gJy4uLy4uLy4uL2NvbW1vbi9tZXNzYWdlL01lc3NhZ2VUeXBlJztcbmltcG9ydCBNZXNzYWdlSWQgZnJvbSAnLi4vLi4vLi4vY29tbW9uL21lc3NhZ2UvTWVzc2FnZUlkJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUXVlcnkgZXh0ZW5kcyBTaW1wbGVNZXNzYWdlIHtcbiAgICBjb25zdHJ1Y3RvcihpZDogTWVzc2FnZUlkLCBuYW1lOiBNZXNzYWdlTmFtZSwgbWV0YT86IE1lc3NhZ2VNZXRhKSB7XG4gICAgICAgIHN1cGVyKGlkLCBNZXNzYWdlVHlwZS5RVUVSWSwgbmFtZSwgbWV0YSk7XG4gICAgfVxufVxuIl19