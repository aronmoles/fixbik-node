d669ae2604e10004efb8ef5a0f389605
"use strict";

/* istanbul ignore next */
function cov_270lyxkdh7() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/infrastructure/EventSubscriberMapper.ts";
  var hash = "fbaa5c39043f40f38a32fa51105c20e3dc92609e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/infrastructure/EventSubscriberMapper.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 39
        }
      },
      "2": {
        start: {
          line: 6,
          column: 8
        },
        end: {
          line: 6,
          column: 93
        }
      },
      "3": {
        start: {
          line: 9,
          column: 42
        },
        end: {
          line: 9,
          column: 51
        }
      },
      "4": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 19,
          column: 11
        }
      },
      "5": {
        start: {
          line: 11,
          column: 12
        },
        end: {
          line: 18,
          column: 15
        }
      },
      "6": {
        start: {
          line: 12,
          column: 50
        },
        end: {
          line: 12,
          column: 116
        }
      },
      "7": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 15,
          column: 17
        }
      },
      "8": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 53
        }
      },
      "9": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 72
        }
      },
      "10": {
        start: {
          line: 17,
          column: 16
        },
        end: {
          line: 17,
          column: 112
        }
      },
      "11": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 41
        }
      },
      "12": {
        start: {
          line: 23,
          column: 39
        },
        end: {
          line: 23,
          column: 94
        }
      },
      "13": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "14": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 22
        }
      },
      "15": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 38
        }
      },
      "16": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 30,
          column: 54
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 5,
            column: 5
          }
        },
        loc: {
          start: {
            line: 5,
            column: 40
          },
          end: {
            line: 7,
            column: 5
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 10,
            column: 39
          },
          end: {
            line: 10,
            column: 40
          }
        },
        loc: {
          start: {
            line: 10,
            column: 66
          },
          end: {
            line: 19,
            column: 9
          }
        },
        line: 10
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 11,
            column: 57
          },
          end: {
            line: 11,
            column: 58
          }
        },
        loc: {
          start: {
            line: 11,
            column: 79
          },
          end: {
            line: 18,
            column: 13
          }
        },
        line: 11
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 24
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 22
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 15,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 15,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/infrastructure/EventSubscriberMapper.ts",
      mappings: ";;;AAKA,MAAa,qBAAqB;IAG9B,YAAY,sBAA2D;QACnE,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,sBAAsB,CAAC,sBAAsB,CAAC,CAAC;IACzF,CAAC;IAEO,sBAAsB,CAC1B,sBAA2D;QAE3D,MAAM,yBAAyB,GAAG,IAAI,GAAG,EAA+C,CAAC;QAEzF,sBAAsB,CAAC,OAAO,CAAC,CAAC,qBAAqB,EAAE,EAAE;YACrD,qBAAqB,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,CAAC,gBAAgB,EAAE,EAAE;gBAC9D,IAAI,2BAA2B,GAAG,yBAAyB,CAAC,GAAG,CAAC,gBAAgB,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC;gBACrG,IAAI,CAAC,2BAA2B,EAAE;oBAC9B,2BAA2B,GAAG,EAAE,CAAC;iBACpC;gBACD,2BAA2B,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAA;gBACvD,yBAAyB,CAAC,GAAG,CAAC,gBAAgB,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,2BAA2B,CAAC,CAAA;YACnG,CAAC,CAAC,CAAA;QACN,CAAC,CAAC,CAAC;QAEH,OAAO,yBAAyB,CAAC;IACrC,CAAC;IAEM,MAAM,CAAC,WAAwB;QAClC,MAAM,sBAAsB,GAAG,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAC;QAEvF,IAAI,CAAC,sBAAsB,EAAE;YACzB,OAAO,EAAE,CAAC;SACb;QAED,OAAO,sBAAsB,CAAC;IAClC,CAAC;CACJ;AAnCD,sDAmCC",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/infrastructure/EventSubscriberMapper.ts"],
      sourcesContent: ["import { Mapper } from '../../common/Mapper';\nimport MessageName from '../../common/message/MessageName';\nimport DomainEvent from '../domain/DomainEvent';\nimport EventSubscriber from '../domain/EventSubscriber';\n\nexport class EventSubscriberMapper implements Mapper<MessageName, EventSubscriber<DomainEvent>[]> {\n    private domainEventSubscribersMap: Map<string, Array<EventSubscriber<DomainEvent>>>;\n\n    constructor(domainEventSubscribers: Array<EventSubscriber<DomainEvent>>) {\n        this.domainEventSubscribersMap = this.formatEventSubscribers(domainEventSubscribers);\n    }\n\n    private formatEventSubscribers(\n        domainEventSubscribers: Array<EventSubscriber<DomainEvent>>,\n    ): Map<string, Array<EventSubscriber<DomainEvent>>> {\n        const domainEventSubscribersMap = new Map<string, Array<EventSubscriber<DomainEvent>>>();\n\n        domainEventSubscribers.forEach((domainEventSubscriber) => {\n            domainEventSubscriber.subscribedTo().forEach((domainEventClass) => {\n                let domainEventSubscribersInMap = domainEventSubscribersMap.get(domainEventClass.EVENT_NAME.value());\n                if (!domainEventSubscribersInMap) {\n                    domainEventSubscribersInMap = [];\n                }\n                domainEventSubscribersInMap.push(domainEventSubscriber)\n                domainEventSubscribersMap.set(domainEventClass.EVENT_NAME.value(), domainEventSubscribersInMap)\n            })\n        });\n\n        return domainEventSubscribersMap;\n    }\n\n    public search(messageName: MessageName): Array<EventSubscriber<DomainEvent>> {\n        const domainEventSubscribers = this.domainEventSubscribersMap.get(messageName.value());\n\n        if (!domainEventSubscribers) {\n            return [];\n        }\n\n        return domainEventSubscribers;\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fbaa5c39043f40f38a32fa51105c20e3dc92609e"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_270lyxkdh7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_270lyxkdh7();
cov_270lyxkdh7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_270lyxkdh7().s[1]++;
exports.EventSubscriberMapper = void 0;

class EventSubscriberMapper {
  constructor(domainEventSubscribers) {
    /* istanbul ignore next */
    cov_270lyxkdh7().f[0]++;
    cov_270lyxkdh7().s[2]++;
    this.domainEventSubscribersMap = this.formatEventSubscribers(domainEventSubscribers);
  }

  formatEventSubscribers(domainEventSubscribers) {
    /* istanbul ignore next */
    cov_270lyxkdh7().f[1]++;
    const domainEventSubscribersMap =
    /* istanbul ignore next */
    (cov_270lyxkdh7().s[3]++, new Map());

    /* istanbul ignore next */
    cov_270lyxkdh7().s[4]++;
    domainEventSubscribers.forEach((domainEventSubscriber) => {
      /* istanbul ignore next */
      cov_270lyxkdh7().f[2]++;
      cov_270lyxkdh7().s[5]++;
      domainEventSubscriber.subscribedTo().forEach((domainEventClass) => {
        /* istanbul ignore next */
        cov_270lyxkdh7().f[3]++;
        let domainEventSubscribersInMap =
        /* istanbul ignore next */
        (cov_270lyxkdh7().s[6]++, domainEventSubscribersMap.get(domainEventClass.EVENT_NAME.value()));

        /* istanbul ignore next */
        cov_270lyxkdh7().s[7]++;

        if (!domainEventSubscribersInMap) {
          /* istanbul ignore next */
          cov_270lyxkdh7().b[0][0]++;
          cov_270lyxkdh7().s[8]++;
          domainEventSubscribersInMap = [];
        } else
        /* istanbul ignore next */
        {
          cov_270lyxkdh7().b[0][1]++;
        }

        cov_270lyxkdh7().s[9]++;
        domainEventSubscribersInMap.push(domainEventSubscriber);

        /* istanbul ignore next */
        cov_270lyxkdh7().s[10]++;
        domainEventSubscribersMap.set(domainEventClass.EVENT_NAME.value(), domainEventSubscribersInMap);
      });
    });

    /* istanbul ignore next */
    cov_270lyxkdh7().s[11]++;
    return domainEventSubscribersMap;
  }

  search(messageName) {
    /* istanbul ignore next */
    cov_270lyxkdh7().f[4]++;
    const domainEventSubscribers =
    /* istanbul ignore next */
    (cov_270lyxkdh7().s[12]++, this.domainEventSubscribersMap.get(messageName.value()));

    /* istanbul ignore next */
    cov_270lyxkdh7().s[13]++;

    if (!domainEventSubscribers) {
      /* istanbul ignore next */
      cov_270lyxkdh7().b[1][0]++;
      cov_270lyxkdh7().s[14]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_270lyxkdh7().b[1][1]++;
    }

    cov_270lyxkdh7().s[15]++;
    return domainEventSubscribers;
  }

}

/* istanbul ignore next */
cov_270lyxkdh7().s[16]++;
exports.EventSubscriberMapper = EventSubscriberMapper;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbWljcm9rL2V2ZW50L2luZnJhc3RydWN0dXJlL0V2ZW50U3Vic2NyaWJlck1hcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBS0EsTUFBYSxxQkFBYixDQUFrQztBQUc5QixFQUFBLFdBQUEsQ0FBWSxzQkFBWixFQUF1RTtBQUFBO0FBQUE7QUFBQTtBQUNuRSxTQUFLLHlCQUFMLEdBQWlDLEtBQUssc0JBQUwsQ0FBNEIsc0JBQTVCLENBQWpDO0FBQ0g7O0FBRU8sRUFBQSxzQkFBc0IsQ0FDMUIsc0JBRDBCLEVBQ2lDO0FBQUE7QUFBQTtBQUUzRCxVQUFNLHlCQUF5QjtBQUFBO0FBQUEsOEJBQUcsSUFBSSxHQUFKLEVBQUgsQ0FBL0I7O0FBRjJEO0FBQUE7QUFJM0QsSUFBQSxzQkFBc0IsQ0FBQyxPQUF2QixDQUErQixDQUFDLHFCQUFELEtBQTBCO0FBQUE7QUFBQTtBQUFBO0FBQ3JELE1BQUEscUJBQXFCLENBQUMsWUFBdEIsR0FBcUMsT0FBckMsQ0FBNkMsQ0FBQyxnQkFBRCxLQUFxQjtBQUFBO0FBQUE7QUFDOUQsWUFBSSwyQkFBMkI7QUFBQTtBQUFBLGtDQUFHLHlCQUF5QixDQUFDLEdBQTFCLENBQThCLGdCQUFnQixDQUFDLFVBQWpCLENBQTRCLEtBQTVCLEVBQTlCLENBQUgsQ0FBL0I7O0FBRDhEO0FBQUE7O0FBRTlELFlBQUksQ0FBQywyQkFBTCxFQUFrQztBQUFBO0FBQUE7QUFBQTtBQUM5QixVQUFBLDJCQUEyQixHQUFHLEVBQTlCO0FBQ0gsU0FGRDtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUY4RDtBQUs5RCxRQUFBLDJCQUEyQixDQUFDLElBQTVCLENBQWlDLHFCQUFqQzs7QUFMOEQ7QUFBQTtBQU05RCxRQUFBLHlCQUF5QixDQUFDLEdBQTFCLENBQThCLGdCQUFnQixDQUFDLFVBQWpCLENBQTRCLEtBQTVCLEVBQTlCLEVBQW1FLDJCQUFuRTtBQUNILE9BUEQ7QUFRSCxLQVREOztBQUoyRDtBQUFBO0FBZTNELFdBQU8seUJBQVA7QUFDSDs7QUFFTSxFQUFBLE1BQU0sQ0FBQyxXQUFELEVBQXlCO0FBQUE7QUFBQTtBQUNsQyxVQUFNLHNCQUFzQjtBQUFBO0FBQUEsK0JBQUcsS0FBSyx5QkFBTCxDQUErQixHQUEvQixDQUFtQyxXQUFXLENBQUMsS0FBWixFQUFuQyxDQUFILENBQTVCOztBQURrQztBQUFBOztBQUdsQyxRQUFJLENBQUMsc0JBQUwsRUFBNkI7QUFBQTtBQUFBO0FBQUE7QUFDekIsYUFBTyxFQUFQO0FBQ0gsS0FGRDtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUhrQztBQU9sQyxXQUFPLHNCQUFQO0FBQ0g7O0FBbEM2Qjs7OztBQUFsQyxPQUFBLENBQUEscUJBQUEsR0FBQSxxQkFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1hcHBlciB9IGZyb20gJy4uLy4uL2NvbW1vbi9NYXBwZXInO1xuaW1wb3J0IE1lc3NhZ2VOYW1lIGZyb20gJy4uLy4uL2NvbW1vbi9tZXNzYWdlL01lc3NhZ2VOYW1lJztcbmltcG9ydCBEb21haW5FdmVudCBmcm9tICcuLi9kb21haW4vRG9tYWluRXZlbnQnO1xuaW1wb3J0IEV2ZW50U3Vic2NyaWJlciBmcm9tICcuLi9kb21haW4vRXZlbnRTdWJzY3JpYmVyJztcblxuZXhwb3J0IGNsYXNzIEV2ZW50U3Vic2NyaWJlck1hcHBlciBpbXBsZW1lbnRzIE1hcHBlcjxNZXNzYWdlTmFtZSwgRXZlbnRTdWJzY3JpYmVyPERvbWFpbkV2ZW50PltdPiB7XG4gICAgcHJpdmF0ZSBkb21haW5FdmVudFN1YnNjcmliZXJzTWFwOiBNYXA8c3RyaW5nLCBBcnJheTxFdmVudFN1YnNjcmliZXI8RG9tYWluRXZlbnQ+Pj47XG5cbiAgICBjb25zdHJ1Y3Rvcihkb21haW5FdmVudFN1YnNjcmliZXJzOiBBcnJheTxFdmVudFN1YnNjcmliZXI8RG9tYWluRXZlbnQ+Pikge1xuICAgICAgICB0aGlzLmRvbWFpbkV2ZW50U3Vic2NyaWJlcnNNYXAgPSB0aGlzLmZvcm1hdEV2ZW50U3Vic2NyaWJlcnMoZG9tYWluRXZlbnRTdWJzY3JpYmVycyk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBmb3JtYXRFdmVudFN1YnNjcmliZXJzKFxuICAgICAgICBkb21haW5FdmVudFN1YnNjcmliZXJzOiBBcnJheTxFdmVudFN1YnNjcmliZXI8RG9tYWluRXZlbnQ+PixcbiAgICApOiBNYXA8c3RyaW5nLCBBcnJheTxFdmVudFN1YnNjcmliZXI8RG9tYWluRXZlbnQ+Pj4ge1xuICAgICAgICBjb25zdCBkb21haW5FdmVudFN1YnNjcmliZXJzTWFwID0gbmV3IE1hcDxzdHJpbmcsIEFycmF5PEV2ZW50U3Vic2NyaWJlcjxEb21haW5FdmVudD4+PigpO1xuXG4gICAgICAgIGRvbWFpbkV2ZW50U3Vic2NyaWJlcnMuZm9yRWFjaCgoZG9tYWluRXZlbnRTdWJzY3JpYmVyKSA9PiB7XG4gICAgICAgICAgICBkb21haW5FdmVudFN1YnNjcmliZXIuc3Vic2NyaWJlZFRvKCkuZm9yRWFjaCgoZG9tYWluRXZlbnRDbGFzcykgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBkb21haW5FdmVudFN1YnNjcmliZXJzSW5NYXAgPSBkb21haW5FdmVudFN1YnNjcmliZXJzTWFwLmdldChkb21haW5FdmVudENsYXNzLkVWRU5UX05BTUUudmFsdWUoKSk7XG4gICAgICAgICAgICAgICAgaWYgKCFkb21haW5FdmVudFN1YnNjcmliZXJzSW5NYXApIHtcbiAgICAgICAgICAgICAgICAgICAgZG9tYWluRXZlbnRTdWJzY3JpYmVyc0luTWFwID0gW107XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGRvbWFpbkV2ZW50U3Vic2NyaWJlcnNJbk1hcC5wdXNoKGRvbWFpbkV2ZW50U3Vic2NyaWJlcilcbiAgICAgICAgICAgICAgICBkb21haW5FdmVudFN1YnNjcmliZXJzTWFwLnNldChkb21haW5FdmVudENsYXNzLkVWRU5UX05BTUUudmFsdWUoKSwgZG9tYWluRXZlbnRTdWJzY3JpYmVyc0luTWFwKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIGRvbWFpbkV2ZW50U3Vic2NyaWJlcnNNYXA7XG4gICAgfVxuXG4gICAgcHVibGljIHNlYXJjaChtZXNzYWdlTmFtZTogTWVzc2FnZU5hbWUpOiBBcnJheTxFdmVudFN1YnNjcmliZXI8RG9tYWluRXZlbnQ+PiB7XG4gICAgICAgIGNvbnN0IGRvbWFpbkV2ZW50U3Vic2NyaWJlcnMgPSB0aGlzLmRvbWFpbkV2ZW50U3Vic2NyaWJlcnNNYXAuZ2V0KG1lc3NhZ2VOYW1lLnZhbHVlKCkpO1xuXG4gICAgICAgIGlmICghZG9tYWluRXZlbnRTdWJzY3JpYmVycykge1xuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGRvbWFpbkV2ZW50U3Vic2NyaWJlcnM7XG4gICAgfVxufVxuIl19