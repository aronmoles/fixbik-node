705c6b116f3fffc30d1d2f5805f6aaf8
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const MessageType_1 = require("@microk/common/message/MessageType");
const MessageNameFactory_1 = __importDefault(require("@microk/common/value-object/MessageNameFactory"));
const Uuid_1 = __importDefault(require("@microk/common/value-object/Uuid"));
const DomainEvent_1 = __importDefault(require("../../../microk/event/domain/DomainEvent"));
const MessageId_1 = __importDefault(require("../../../microk/common/message/MessageId"));
const AggregateMessageOccurredOn_1 = __importDefault(require("../../../microk/common/message/AggregateMessageOccurredOn"));
class InfoRequestedDomainEvent extends DomainEvent_1.default {
    constructor(aggregateId) {
        super(MessageId_1.default.create(), InfoRequestedDomainEvent.EVENT_NAME, aggregateId, AggregateMessageOccurredOn_1.default.now());
    }
    static fromPrimitives(args) {
        return new InfoRequestedDomainEvent(new Uuid_1.default(args.aggregateId));
    }
}
exports.default = InfoRequestedDomainEvent;
InfoRequestedDomainEvent.EVENT_NAME = MessageNameFactory_1.default.create('requested', 'info', MessageType_1.MessageType.DOMAIN_EVENT);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3NyYy9tb2R1bGVzL2luZm8vZG9tYWluL0luZm9SZXF1ZXN0ZWREb21haW5FdmVudC50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLG9FQUFpRTtBQUNqRSx3R0FBZ0Y7QUFDaEYsNEVBQW9EO0FBQ3BELDJGQUFtRTtBQUNuRSx5RkFBaUU7QUFDakUsMkhBQW1HO0FBRW5HLE1BQXFCLHdCQUF5QixTQUFRLHFCQUFXO0lBRzdELFlBQ0ksV0FBaUI7UUFFakIsS0FBSyxDQUNELG1CQUFTLENBQUMsTUFBTSxFQUFFLEVBQ2xCLHdCQUF3QixDQUFDLFVBQVUsRUFDbkMsV0FBVyxFQUNYLG9DQUEwQixDQUFDLEdBQUcsRUFBRSxDQUNuQyxDQUFDO0lBQ04sQ0FBQztJQUVELE1BQU0sQ0FBQyxjQUFjLENBQUMsSUFBUztRQUMzQixPQUFPLElBQUksd0JBQXdCLENBQUMsSUFBSSxjQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7SUFDcEUsQ0FBQzs7QUFoQkwsMkNBaUJDO0FBaEJVLG1DQUFVLEdBQUcsNEJBQWtCLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBRSxNQUFNLEVBQUUseUJBQVcsQ0FBQyxZQUFZLENBQUMsQ0FBQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvY3VhdHJvb2NoZW50YS9NYWdpY1Nob3BwZXIvbWFnaWNzaG9wcGVyLW5vZGUvc3JjL21vZHVsZXMvaW5mby9kb21haW4vSW5mb1JlcXVlc3RlZERvbWFpbkV2ZW50LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1lc3NhZ2VUeXBlIH0gZnJvbSAnQG1pY3Jvay9jb21tb24vbWVzc2FnZS9NZXNzYWdlVHlwZSc7XG5pbXBvcnQgTWVzc2FnZU5hbWVGYWN0b3J5IGZyb20gJ0BtaWNyb2svY29tbW9uL3ZhbHVlLW9iamVjdC9NZXNzYWdlTmFtZUZhY3RvcnknO1xuaW1wb3J0IFV1aWQgZnJvbSAnQG1pY3Jvay9jb21tb24vdmFsdWUtb2JqZWN0L1V1aWQnO1xuaW1wb3J0IERvbWFpbkV2ZW50IGZyb20gJy4uLy4uLy4uL21pY3Jvay9ldmVudC9kb21haW4vRG9tYWluRXZlbnQnO1xuaW1wb3J0IE1lc3NhZ2VJZCBmcm9tICcuLi8uLi8uLi9taWNyb2svY29tbW9uL21lc3NhZ2UvTWVzc2FnZUlkJztcbmltcG9ydCBBZ2dyZWdhdGVNZXNzYWdlT2NjdXJyZWRPbiBmcm9tICcuLi8uLi8uLi9taWNyb2svY29tbW9uL21lc3NhZ2UvQWdncmVnYXRlTWVzc2FnZU9jY3VycmVkT24nO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJbmZvUmVxdWVzdGVkRG9tYWluRXZlbnQgZXh0ZW5kcyBEb21haW5FdmVudCB7XG4gICAgc3RhdGljIEVWRU5UX05BTUUgPSBNZXNzYWdlTmFtZUZhY3RvcnkuY3JlYXRlKCdyZXF1ZXN0ZWQnLCAnaW5mbycsIE1lc3NhZ2VUeXBlLkRPTUFJTl9FVkVOVCk7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgYWdncmVnYXRlSWQ6IFV1aWQsXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKFxuICAgICAgICAgICAgTWVzc2FnZUlkLmNyZWF0ZSgpLFxuICAgICAgICAgICAgSW5mb1JlcXVlc3RlZERvbWFpbkV2ZW50LkVWRU5UX05BTUUsXG4gICAgICAgICAgICBhZ2dyZWdhdGVJZCxcbiAgICAgICAgICAgIEFnZ3JlZ2F0ZU1lc3NhZ2VPY2N1cnJlZE9uLm5vdygpLFxuICAgICAgICApO1xuICAgIH1cblxuICAgIHN0YXRpYyBmcm9tUHJpbWl0aXZlcyhhcmdzOiBhbnkpOiBJbmZvUmVxdWVzdGVkRG9tYWluRXZlbnQge1xuICAgICAgICByZXR1cm4gbmV3IEluZm9SZXF1ZXN0ZWREb21haW5FdmVudChuZXcgVXVpZChhcmdzLmFnZ3JlZ2F0ZUlkKSk7XG4gICAgfVxufVxuIl0sInZlcnNpb24iOjN9