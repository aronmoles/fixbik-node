35254870dbff7af6bd9d51ae08142196
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const QueryHandler_1 = require("@microk/cqrs/domain/query/QueryHandler");
const AuthenticateQuery_1 = __importDefault(require("./AuthenticateQuery"));
class AuthenticateQueryHandler extends QueryHandler_1.QueryHandler {
    constructor(loginService) {
        super(AuthenticateQuery_1.default);
        this.loginService = loginService;
    }
    handle(query) {
        return __awaiter(this, void 0, void 0, function* () {
            const authToken = yield this.loginService.run(query.email, query.password);
            return {
                authToken: authToken.toString(),
            };
        });
    }
}
exports.default = AuthenticateQueryHandler;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3NyYy9tb2R1bGVzL2F1dGgvYXBwbGljYXRpb24vbG9naW4vQXV0aGVudGljYXRlUXVlcnlIYW5kbGVyLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEseUVBQXNFO0FBQ3RFLDRFQUFvRDtBQUlwRCxNQUFxQix3QkFBeUIsU0FBUSwyQkFBMEQ7SUFDNUcsWUFDcUIsWUFBMkI7UUFFNUMsS0FBSyxDQUFDLDJCQUFpQixDQUFDLENBQUM7UUFGUixpQkFBWSxHQUFaLFlBQVksQ0FBZTtJQUdoRCxDQUFDO0lBRUssTUFBTSxDQUFDLEtBQXdCOztZQUNqQyxNQUFNLFNBQVMsR0FBRyxNQUFNLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzNFLE9BQU87Z0JBQ0gsU0FBUyxFQUFFLFNBQVMsQ0FBQyxRQUFRLEVBQUU7YUFDbEMsQ0FBQztRQUNOLENBQUM7S0FBQTtDQUNKO0FBYkQsMkNBYUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3NyYy9tb2R1bGVzL2F1dGgvYXBwbGljYXRpb24vbG9naW4vQXV0aGVudGljYXRlUXVlcnlIYW5kbGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFF1ZXJ5SGFuZGxlciB9IGZyb20gJ0BtaWNyb2svY3Fycy9kb21haW4vcXVlcnkvUXVlcnlIYW5kbGVyJztcbmltcG9ydCBBdXRoZW50aWNhdGVRdWVyeSBmcm9tICcuL0F1dGhlbnRpY2F0ZVF1ZXJ5JztcbmltcG9ydCBBdXRoZW50aWNhdGVRdWVyeVJlc3BvbnNlIGZyb20gJy4vQXV0aGVudGljYXRlUXVlcnlSZXNwb25zZSc7XG5pbXBvcnQgQXV0aGVudGljYXRvciBmcm9tICcuL0F1dGhlbnRpY2F0b3InO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBdXRoZW50aWNhdGVRdWVyeUhhbmRsZXIgZXh0ZW5kcyBRdWVyeUhhbmRsZXI8QXV0aGVudGljYXRlUXVlcnksIEF1dGhlbnRpY2F0ZVF1ZXJ5UmVzcG9uc2U+IHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBsb2dpblNlcnZpY2U6IEF1dGhlbnRpY2F0b3IsXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKEF1dGhlbnRpY2F0ZVF1ZXJ5KTtcbiAgICB9XG5cbiAgICBhc3luYyBoYW5kbGUocXVlcnk6IEF1dGhlbnRpY2F0ZVF1ZXJ5KTogUHJvbWlzZTxBdXRoZW50aWNhdGVRdWVyeVJlc3BvbnNlPiB7XG4gICAgICAgIGNvbnN0IGF1dGhUb2tlbiA9IGF3YWl0IHRoaXMubG9naW5TZXJ2aWNlLnJ1bihxdWVyeS5lbWFpbCwgcXVlcnkucGFzc3dvcmQpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYXV0aFRva2VuOiBhdXRoVG9rZW4udG9TdHJpbmcoKSxcbiAgICAgICAgfTtcbiAgICB9XG59XG4iXSwidmVyc2lvbiI6M30=