2f749d541f63a5bf70aef3741d441bce
"use strict";

/* istanbul ignore next */
function cov_upcmpkzyb() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts";
  var hash = "675ba3007dedef898b51c0d4a105034f0cfe99a0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 5,
          column: 8
        },
        end: {
          line: 5,
          column: 27
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 32
        }
      },
      "3": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 26
        }
      },
      "4": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "5": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 19,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 4,
            column: 5
          }
        },
        loc: {
          start: {
            line: 4,
            column: 28
          },
          end: {
            line: 6,
            column: 5
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 18
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 10
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 4,
            column: 24
          },
          end: {
            line: 4,
            column: 26
          }
        }],
        line: 4
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0]
    },
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts",
      mappings: ";;AAUA,MAAqB,WAAW;IAO5B,YACqB,QAAyB,EAAE;QAA3B,UAAK,GAAL,KAAK,CAAsB;IAC7C,CAAC;IAEJ,GAAG,CAAC,GAAW,EAAE,KAAoB;QACjC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IAC5B,CAAC;IAED,WAAW;QACP,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;;AAjBL,8BAkBC;AAjBU,gBAAI,GAAG;IACV,cAAc,EAAE,eAAe;IAC/B,QAAQ,EAAE,SAAS;IACnB,IAAI,EAAE,MAAM;CACf,CAAC",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts"],
      sourcesContent: ["import { PrimitivesObject, PrimitiveType } from '../PrimitiveType';\nimport Serializable from '../Serializable';\n\ntype MessageMetaType = {\n    correlationId?: string,\n    replyTo?: string,\n    time?: number,\n    [key: string]: PrimitiveType,\n}\n\nexport default class MessageMeta implements Serializable {\n    static KEYS = {\n        CORRELATION_ID: 'correlationId',\n        REPLY_TO: 'replyTo',\n        TIME: 'time',\n    };\n\n    constructor(\n        private readonly value: MessageMetaType = {},\n    ) {}\n\n    set(key: string, value: PrimitiveType): void {\n        this.value[key] = value;\n    }\n\n    toPrimitive(): PrimitivesObject {\n        return this.value;\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "675ba3007dedef898b51c0d4a105034f0cfe99a0"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_upcmpkzyb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_upcmpkzyb();
cov_upcmpkzyb().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

class MessageMeta {
  constructor(value =
  /* istanbul ignore next */
  (cov_upcmpkzyb().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_upcmpkzyb().f[0]++;
    cov_upcmpkzyb().s[1]++;
    this.value = value;
  }

  set(key, value) {
    /* istanbul ignore next */
    cov_upcmpkzyb().f[1]++;
    cov_upcmpkzyb().s[2]++;
    this.value[key] = value;
  }

  toPrimitive() {
    /* istanbul ignore next */
    cov_upcmpkzyb().f[2]++;
    cov_upcmpkzyb().s[3]++;
    return this.value;
  }

}

/* istanbul ignore next */
cov_upcmpkzyb().s[4]++;
exports.default = MessageMeta;

/* istanbul ignore next */
cov_upcmpkzyb().s[5]++;
MessageMeta.KEYS = {
  CORRELATION_ID: 'correlationId',
  REPLY_TO: 'replyTo',
  TIME: 'time'
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbWljcm9rL2NvbW1vbi9tZXNzYWdlL01lc3NhZ2VNZXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVlROzs7Ozs7Ozs7Ozs7OztBQUZSLE1BQXFCLFdBQXJCLENBQWdDO0FBTzVCLEVBQUEsV0FBQSxDQUNxQixLQUFBO0FBQUE7QUFBQSw4QkFBeUIsRUFBekIsQ0FEckIsRUFDZ0Q7QUFBQTtBQUFBO0FBQUE7QUFBM0IsU0FBQSxLQUFBLEdBQUEsS0FBQTtBQUNqQjs7QUFFSixFQUFBLEdBQUcsQ0FBQyxHQUFELEVBQWMsS0FBZCxFQUFrQztBQUFBO0FBQUE7QUFBQTtBQUNqQyxTQUFLLEtBQUwsQ0FBVyxHQUFYLElBQWtCLEtBQWxCO0FBQ0g7O0FBRUQsRUFBQSxXQUFXLEdBQUE7QUFBQTtBQUFBO0FBQUE7QUFDUCxXQUFPLEtBQUssS0FBWjtBQUNIOztBQWpCMkI7Ozs7QUFBaEMsT0FBQSxDQUFBLE9BQUEsR0FBQSxXQUFBOzs7O0FBQ1csV0FBQSxDQUFBLElBQUEsR0FBTztBQUNWLEVBQUEsY0FBYyxFQUFFLGVBRE47QUFFVixFQUFBLFFBQVEsRUFBRSxTQUZBO0FBR1YsRUFBQSxJQUFJLEVBQUU7QUFISSxDQUFQIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpbWl0aXZlc09iamVjdCwgUHJpbWl0aXZlVHlwZSB9IGZyb20gJy4uL1ByaW1pdGl2ZVR5cGUnO1xuaW1wb3J0IFNlcmlhbGl6YWJsZSBmcm9tICcuLi9TZXJpYWxpemFibGUnO1xuXG50eXBlIE1lc3NhZ2VNZXRhVHlwZSA9IHtcbiAgICBjb3JyZWxhdGlvbklkPzogc3RyaW5nLFxuICAgIHJlcGx5VG8/OiBzdHJpbmcsXG4gICAgdGltZT86IG51bWJlcixcbiAgICBba2V5OiBzdHJpbmddOiBQcmltaXRpdmVUeXBlLFxufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNZXNzYWdlTWV0YSBpbXBsZW1lbnRzIFNlcmlhbGl6YWJsZSB7XG4gICAgc3RhdGljIEtFWVMgPSB7XG4gICAgICAgIENPUlJFTEFUSU9OX0lEOiAnY29ycmVsYXRpb25JZCcsXG4gICAgICAgIFJFUExZX1RPOiAncmVwbHlUbycsXG4gICAgICAgIFRJTUU6ICd0aW1lJyxcbiAgICB9O1xuXG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgdmFsdWU6IE1lc3NhZ2VNZXRhVHlwZSA9IHt9LFxuICAgICkge31cblxuICAgIHNldChrZXk6IHN0cmluZywgdmFsdWU6IFByaW1pdGl2ZVR5cGUpOiB2b2lkIHtcbiAgICAgICAgdGhpcy52YWx1ZVtrZXldID0gdmFsdWU7XG4gICAgfVxuXG4gICAgdG9QcmltaXRpdmUoKTogUHJpbWl0aXZlc09iamVjdCB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlO1xuICAgIH1cbn1cbiJdfQ==