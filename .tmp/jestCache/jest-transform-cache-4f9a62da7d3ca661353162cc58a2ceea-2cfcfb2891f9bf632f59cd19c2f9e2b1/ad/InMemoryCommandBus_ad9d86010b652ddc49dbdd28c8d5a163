a80ee2b0a1b0c37a4b9e581eba3dd4f2
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InMemoryCommandBus = void 0;
const Executor_1 = __importDefault(require("../../../core/infrastructure/Executor"));
class InMemoryCommandBus {
    constructor(commandHandlersMapper, executors = []) {
        this.commandHandlersMapper = commandHandlersMapper;
        this.executor = new Executor_1.default(executors);
    }
    dispatch(command) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.executor.run(command, () => __awaiter(this, void 0, void 0, function* () {
                const handler = this.commandHandlersMapper.search(command);
                yield handler.handle(command);
            }));
        });
    }
}
exports.InMemoryCommandBus = InMemoryCommandBus;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3NyYy9taWNyb2svY3Fycy9pbmZyYXN0cnVjdHVyZS9jb21tYW5kL0luTWVtb3J5Q29tbWFuZEJ1cy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFFQSxxRkFBNkQ7QUFLN0QsTUFBYSxrQkFBa0I7SUFHM0IsWUFDcUIscUJBQStELEVBQ2hGLFlBQThDLEVBQUU7UUFEL0IsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUEwQztRQUdoRixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksa0JBQVEsQ0FBZ0IsU0FBUyxDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUVLLFFBQVEsQ0FBQyxPQUFnQjs7WUFDM0IsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsR0FBUyxFQUFFO2dCQUN6QyxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMscUJBQXFCLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2dCQUMzRCxNQUFNLE9BQU8sQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDbEMsQ0FBQyxDQUFBLENBQUMsQ0FBQTtRQUNOLENBQUM7S0FBQTtDQUNKO0FBaEJELGdEQWdCQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvY3VhdHJvb2NoZW50YS9NYWdpY1Nob3BwZXIvbWFnaWNzaG9wcGVyLW5vZGUvc3JjL21pY3Jvay9jcXJzL2luZnJhc3RydWN0dXJlL2NvbW1hbmQvSW5NZW1vcnlDb21tYW5kQnVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1hcHBlciB9IGZyb20gJy4uLy4uLy4uL2NvbW1vbi9NYXBwZXInO1xuaW1wb3J0IFdyYXBwZXJFeGVjdXRvciBmcm9tICcuLi8uLi8uLi9jb3JlL2RvbWFpbi9XcmFwcGVyRXhlY3V0b3InO1xuaW1wb3J0IEV4ZWN1dG9yIGZyb20gJy4uLy4uLy4uL2NvcmUvaW5mcmFzdHJ1Y3R1cmUvRXhlY3V0b3InO1xuaW1wb3J0IENvbW1hbmQgZnJvbSAnLi4vLi4vZG9tYWluL2NvbW1hbmQvQ29tbWFuZCc7XG5pbXBvcnQgeyBDb21tYW5kQnVzIH0gZnJvbSAnLi4vLi4vZG9tYWluL2NvbW1hbmQvQ29tbWFuZEJ1cyc7XG5pbXBvcnQgQ29tbWFuZEhhbmRsZXIgZnJvbSAnLi4vLi4vZG9tYWluL2NvbW1hbmQvQ29tbWFuZEhhbmRsZXInO1xuXG5leHBvcnQgY2xhc3MgSW5NZW1vcnlDb21tYW5kQnVzIGltcGxlbWVudHMgQ29tbWFuZEJ1cyB7XG4gICAgcHJpdmF0ZSByZWFkb25seSBleGVjdXRvcjogRXhlY3V0b3I8Q29tbWFuZCwgdm9pZD47XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBjb21tYW5kSGFuZGxlcnNNYXBwZXI6IE1hcHBlcjxDb21tYW5kLCBDb21tYW5kSGFuZGxlcjxDb21tYW5kPj4sXG4gICAgICAgIGV4ZWN1dG9yczogV3JhcHBlckV4ZWN1dG9yPENvbW1hbmQsIHZvaWQ+W10gPSBbXSxcbiAgICApIHtcbiAgICAgICAgdGhpcy5leGVjdXRvciA9IG5ldyBFeGVjdXRvcjxDb21tYW5kLCB2b2lkPihleGVjdXRvcnMpO1xuICAgIH1cblxuICAgIGFzeW5jIGRpc3BhdGNoKGNvbW1hbmQ6IENvbW1hbmQpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXhlY3V0b3IucnVuKGNvbW1hbmQsIGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGhhbmRsZXIgPSB0aGlzLmNvbW1hbmRIYW5kbGVyc01hcHBlci5zZWFyY2goY29tbWFuZCk7XG4gICAgICAgICAgICBhd2FpdCBoYW5kbGVyLmhhbmRsZShjb21tYW5kKTtcbiAgICAgICAgfSlcbiAgICB9XG59XG4iXSwidmVyc2lvbiI6M30=