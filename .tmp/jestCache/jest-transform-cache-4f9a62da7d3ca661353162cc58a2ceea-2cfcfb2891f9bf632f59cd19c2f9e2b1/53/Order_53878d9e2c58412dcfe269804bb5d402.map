{"version":3,"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/criteria/Order.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBK;;;;;;;;;;;;;;;;;AAlBL,MAAA,SAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,WAAA,CAAA,CAAA;AACA,MAAA,WAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,aAAA,CAAA,CAAA;;AAEA,MAAa,KAAb,CAAkB;AAId,EAAA,WAAA,CAAY,OAAZ,EAA8B,SAA9B,EAAkD;AAAA;AAAA;AAAA;AAC9C,SAAK,OAAL,GAAe,OAAf;;AAD8C;AAAA;AAE9C,SAAK,SAAL,GAAiB,SAAjB;AACH;;AAEgB,SAAV,UAAU,CAAC,OAAD,EAAmB,SAAnB,EAAqC;AAAA;AAAA;AAAA;;AAClD,QAAI,CAAC,OAAL,EAAc;AAAA;AAAA;AAAA;AACV,aAAO,KAAK,CAAC,IAAN,EAAP;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;;AADkD;AAKlD,WAAO,IAAI,KAAJ,CAAU,IAAI,SAAA,CAAA,OAAJ,CAAY,OAAZ,CAAV,EAAgC,WAAA,CAAA,SAAA,CAAU,SAAV;AAAoB;AAAA,iCAAA,SAAS;AAAA;AAAA,iCAAI,WAAA,CAAA,UAAA,CAAW,GAAf,CAA7B,CAAhC,CAAP;AACH;;AAEU,SAAJ,IAAI,GAAA;AAAA;AAAA;AAAA;AACP,WAAO,IAAI,KAAJ,CAAU,IAAI,SAAA,CAAA,OAAJ,CAAY,EAAZ,CAAV,EAA2B,IAAI,WAAA,CAAA,SAAJ,CAAc,WAAA,CAAA,UAAA,CAAW,IAAzB,CAA3B,CAAP;AACH;;AAEU,SAAJ,IAAI,CAAC,OAAD,EAAgB;AAAA;AAAA;AAAA;AACvB,WAAO,IAAI,KAAJ,CAAU,IAAI,SAAA,CAAA,OAAJ,CAAY,OAAZ,CAAV,EAAgC,IAAI,WAAA,CAAA,SAAJ,CAAc,WAAA,CAAA,UAAA,CAAW,IAAzB,CAAhC,CAAP;AACH;;AAES,SAAH,GAAG,CAAC,OAAD,EAAgB;AAAA;AAAA;AAAA;AACtB,WAAO,IAAI,KAAJ,CAAU,IAAI,SAAA,CAAA,OAAJ,CAAY,OAAZ,CAAV,EAAgC,IAAI,WAAA,CAAA,SAAJ,CAAc,WAAA,CAAA,UAAA,CAAW,GAAzB,CAAhC,CAAP;AACH;;AAEM,EAAA,QAAQ,GAAA;AAAA;AAAA;AAAA;AACX,WAAO,CAAC,KAAK,SAAL,CAAe,MAAf,EAAR;AACH;;AA/Ba;;;;AAAlB,OAAA,CAAA,KAAA,GAAA,KAAA","sourcesContent":["import { OrderBy } from './OrderBy';\nimport { OrderType, OrderTypes } from './OrderType';\n\nexport class Order {\n    readonly orderBy: OrderBy;\n    readonly orderType: OrderType;\n\n    constructor(orderBy: OrderBy, orderType: OrderType) {\n        this.orderBy = orderBy;\n        this.orderType = orderType;\n    }\n\n    static fromValues(orderBy?: string, orderType?: string): Order {\n        if (!orderBy) {\n            return Order.none();\n        }\n\n        return new Order(new OrderBy(orderBy), OrderType.fromValue(orderType || OrderTypes.ASC));\n    }\n\n    static none(): Order {\n        return new Order(new OrderBy(''), new OrderType(OrderTypes.NONE));\n    }\n\n    static desc(orderBy: string): Order {\n        return new Order(new OrderBy(orderBy), new OrderType(OrderTypes.DESC));\n    }\n\n    static asc(orderBy: string): Order {\n        return new Order(new OrderBy(orderBy), new OrderType(OrderTypes.ASC));\n    }\n\n    public hasOrder() {\n        return !this.orderType.isNone();\n    }\n}\n"]}