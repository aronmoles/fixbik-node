84ab01956d9897017a09e9d5fe1dc3ba
"use strict";

/* istanbul ignore next */
function cov_1zrb11ksdj() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/DomainEvent.ts";
  var hash = "c9e70c50b739294a70f2e27f248d05d333583cec";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/DomainEvent.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 27
        },
        end: {
          line: 6,
          column: 92
        }
      },
      "4": {
        start: {
          line: 7,
          column: 22
        },
        end: {
          line: 7,
          column: 82
        }
      },
      "5": {
        start: {
          line: 8,
          column: 22
        },
        end: {
          line: 8,
          column: 65
        }
      },
      "6": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 95
        }
      },
      "7": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 87
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 10
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 10,
            column: 51
          },
          end: {
            line: 10,
            column: 85
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 10,
            column: 58
          },
          end: {
            line: 10,
            column: 85
          }
        }],
        line: 10
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0]
    },
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/DomainEvent.ts",
      mappings: ";;;;;AAAA,6FAAqE;AACrE,mFAA2D;AAC3D,kEAA+D;AAM/D,MAA8B,WAAY,SAAQ,0BAAgB;IAC9D,YACI,EAAa,EACb,IAAiB,EACjB,WAAiB,EACjB,UAAsC,EACtC,OAAoB,IAAI,qBAAW,EAAE;QAErC,KAAK,CAAC,EAAE,EAAE,yBAAW,CAAC,YAAY,EAAE,IAAI,EAAE,WAAW,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;IAC7E,CAAC;CACJ;AAVD,8BAUC",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/DomainEvent.ts"],
      sourcesContent: ["import AggregateMessage from '../../common/message/AggregateMessage';\nimport MessageMeta from '../../common/message/MessageMeta';\nimport { MessageType } from '../../common/message/MessageType';\nimport MessageName from '../../common/message/MessageName';\nimport AggregateMessageOccurredOn from '../../common/message/AggregateMessageOccurredOn';\nimport MessageId from '../../common/message/MessageId';\nimport Uuid from '../../common/value-object/Uuid';\n\nexport default abstract class DomainEvent extends AggregateMessage {\n    protected constructor(\n        id: MessageId,\n        name: MessageName,\n        aggregateId: Uuid,\n        occurredOn: AggregateMessageOccurredOn,\n        meta: MessageMeta = new MessageMeta(),\n    ) {\n        super(id, MessageType.DOMAIN_EVENT, name, aggregateId, occurredOn, meta);\n    }\n}\n\nexport type DomainEventClass = { EVENT_NAME: MessageName, fromPrimitives(...args: any[]): DomainEvent; };\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c9e70c50b739294a70f2e27f248d05d333583cec"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1zrb11ksdj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1zrb11ksdj();

var __importDefault =
/* istanbul ignore next */
(cov_1zrb11ksdj().s[0]++,
/* istanbul ignore next */
(cov_1zrb11ksdj().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1zrb11ksdj().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1zrb11ksdj().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1zrb11ksdj().f[0]++;
  cov_1zrb11ksdj().s[1]++;
  return (
    /* istanbul ignore next */
    (cov_1zrb11ksdj().b[2][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1zrb11ksdj().b[2][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_1zrb11ksdj().b[1][0]++, mod) :
    /* istanbul ignore next */
    (cov_1zrb11ksdj().b[1][1]++, {
      "default": mod
    })
  );
}));

/* istanbul ignore next */
cov_1zrb11ksdj().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const AggregateMessage_1 =
/* istanbul ignore next */
(cov_1zrb11ksdj().s[3]++, __importDefault(require("../../common/message/AggregateMessage")));
const MessageMeta_1 =
/* istanbul ignore next */
(cov_1zrb11ksdj().s[4]++, __importDefault(require("../../common/message/MessageMeta")));
const MessageType_1 =
/* istanbul ignore next */
(cov_1zrb11ksdj().s[5]++, require("../../common/message/MessageType"));

class DomainEvent extends
/* istanbul ignore next */
(AggregateMessage_1.default) {
  constructor(id, name, aggregateId, occurredOn, meta =
  /* istanbul ignore next */
  (cov_1zrb11ksdj().b[3][0]++, new MessageMeta_1.default())) {
    /* istanbul ignore next */
    cov_1zrb11ksdj().f[1]++;
    cov_1zrb11ksdj().s[6]++;
    super(id, MessageType_1.MessageType.DOMAIN_EVENT, name, aggregateId, occurredOn, meta);
  }

}

/* istanbul ignore next */
cov_1zrb11ksdj().s[7]++;
exports.default = DomainEvent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbWljcm9rL2V2ZW50L2RvbWFpbi9Eb21haW5FdmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE1BQUEsa0JBQUE7QUFBQTtBQUFBLDBCQUFBLGVBQUEsQ0FBQSxPQUFBLENBQUEsdUNBQUEsQ0FBQSxDQUFBLENBQUE7QUFDQSxNQUFBLGFBQUE7QUFBQTtBQUFBLDBCQUFBLGVBQUEsQ0FBQSxPQUFBLENBQUEsa0NBQUEsQ0FBQSxDQUFBLENBQUE7QUFDQSxNQUFBLGFBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxrQ0FBQSxDQUFBLENBQUE7O0FBTUEsTUFBOEIsV0FBOUI7QUFBQTtBQUFBLENBQWtELGtCQUFBLENBQUEsT0FBbEQsRUFBa0U7QUFDOUQsRUFBQSxXQUFBLENBQ0ksRUFESixFQUVJLElBRkosRUFHSSxXQUhKLEVBSUksVUFKSixFQUtJLElBQUE7QUFBQTtBQUFBLCtCQUFvQixJQUFJLGFBQUEsQ0FBQSxPQUFKLEVBQXBCLENBTEosRUFLeUM7QUFBQTtBQUFBO0FBQUE7QUFFckMsVUFBTSxFQUFOLEVBQVUsYUFBQSxDQUFBLFdBQUEsQ0FBWSxZQUF0QixFQUFvQyxJQUFwQyxFQUEwQyxXQUExQyxFQUF1RCxVQUF2RCxFQUFtRSxJQUFuRTtBQUNIOztBQVQ2RDs7OztBQUFsRSxPQUFBLENBQUEsT0FBQSxHQUFBLFdBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQWdncmVnYXRlTWVzc2FnZSBmcm9tICcuLi8uLi9jb21tb24vbWVzc2FnZS9BZ2dyZWdhdGVNZXNzYWdlJztcbmltcG9ydCBNZXNzYWdlTWV0YSBmcm9tICcuLi8uLi9jb21tb24vbWVzc2FnZS9NZXNzYWdlTWV0YSc7XG5pbXBvcnQgeyBNZXNzYWdlVHlwZSB9IGZyb20gJy4uLy4uL2NvbW1vbi9tZXNzYWdlL01lc3NhZ2VUeXBlJztcbmltcG9ydCBNZXNzYWdlTmFtZSBmcm9tICcuLi8uLi9jb21tb24vbWVzc2FnZS9NZXNzYWdlTmFtZSc7XG5pbXBvcnQgQWdncmVnYXRlTWVzc2FnZU9jY3VycmVkT24gZnJvbSAnLi4vLi4vY29tbW9uL21lc3NhZ2UvQWdncmVnYXRlTWVzc2FnZU9jY3VycmVkT24nO1xuaW1wb3J0IE1lc3NhZ2VJZCBmcm9tICcuLi8uLi9jb21tb24vbWVzc2FnZS9NZXNzYWdlSWQnO1xuaW1wb3J0IFV1aWQgZnJvbSAnLi4vLi4vY29tbW9uL3ZhbHVlLW9iamVjdC9VdWlkJztcblxuZXhwb3J0IGRlZmF1bHQgYWJzdHJhY3QgY2xhc3MgRG9tYWluRXZlbnQgZXh0ZW5kcyBBZ2dyZWdhdGVNZXNzYWdlIHtcbiAgICBwcm90ZWN0ZWQgY29uc3RydWN0b3IoXG4gICAgICAgIGlkOiBNZXNzYWdlSWQsXG4gICAgICAgIG5hbWU6IE1lc3NhZ2VOYW1lLFxuICAgICAgICBhZ2dyZWdhdGVJZDogVXVpZCxcbiAgICAgICAgb2NjdXJyZWRPbjogQWdncmVnYXRlTWVzc2FnZU9jY3VycmVkT24sXG4gICAgICAgIG1ldGE6IE1lc3NhZ2VNZXRhID0gbmV3IE1lc3NhZ2VNZXRhKCksXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKGlkLCBNZXNzYWdlVHlwZS5ET01BSU5fRVZFTlQsIG5hbWUsIGFnZ3JlZ2F0ZUlkLCBvY2N1cnJlZE9uLCBtZXRhKTtcbiAgICB9XG59XG5cbmV4cG9ydCB0eXBlIERvbWFpbkV2ZW50Q2xhc3MgPSB7IEVWRU5UX05BTUU6IE1lc3NhZ2VOYW1lLCBmcm9tUHJpbWl0aXZlcyguLi5hcmdzOiBhbnlbXSk6IERvbWFpbkV2ZW50OyB9O1xuIl19