32836e1d2a83142d28fc7ccebeb31b5a
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Container_1 = __importDefault(require("../../../../../src/app/Container"));
const AuthUserMother_1 = __importDefault(require("../../domain/AuthUserMother"));
const repository = Container_1.default.get('Auth.domain.AuthUserRepository');
const environmentArranger = Container_1.default.get('Test.EnvironmentArranger');
beforeEach(() => __awaiter(void 0, void 0, void 0, function* () {
    yield (yield environmentArranger).arrange();
}));
afterAll(() => __awaiter(void 0, void 0, void 0, function* () {
    yield (yield environmentArranger).arrange();
    yield (yield environmentArranger).close();
}));
describe('AuthUserRepository', () => {
    describe('#save', () => {
        it('should save a auth user', () => __awaiter(void 0, void 0, void 0, function* () {
            const authUser = AuthUserMother_1.default.random();
            yield repository.save(authUser);
        }));
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3Rlc3RzL21vZHVsZXMvYXV0aC9pbmZyYXN0cnVjdHVyZS9wZXJzaXN0ZW5jZS9BdXRoVXNlclJlcG9zaXRvcnkudGVzdC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUNBLGlGQUF5RDtBQUV6RCxpRkFBeUQ7QUFFekQsTUFBTSxVQUFVLEdBQXVCLG1CQUFTLENBQUMsR0FBRyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7QUFDdkYsTUFBTSxtQkFBbUIsR0FBd0IsbUJBQVMsQ0FBQyxHQUFHLENBQUMsMEJBQTBCLENBQUMsQ0FBQztBQUUzRixVQUFVLENBQUMsR0FBUyxFQUFFO0lBQ2xCLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7QUFDaEQsQ0FBQyxDQUFBLENBQUMsQ0FBQztBQUVILFFBQVEsQ0FBQyxHQUFTLEVBQUU7SUFDaEIsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUM1QyxNQUFNLENBQUMsTUFBTSxtQkFBbUIsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO0FBQzlDLENBQUMsQ0FBQSxDQUFDLENBQUM7QUFFSCxRQUFRLENBQUMsb0JBQW9CLEVBQUUsR0FBRyxFQUFFO0lBQ2hDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFO1FBQ25CLEVBQUUsQ0FBQyx5QkFBeUIsRUFBRSxHQUFTLEVBQUU7WUFDckMsTUFBTSxRQUFRLEdBQUcsd0JBQWMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUV6QyxNQUFNLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDcEMsQ0FBQyxDQUFBLENBQUMsQ0FBQztJQUNQLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyxDQUFDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3Rlc3RzL21vZHVsZXMvYXV0aC9pbmZyYXN0cnVjdHVyZS9wZXJzaXN0ZW5jZS9BdXRoVXNlclJlcG9zaXRvcnkudGVzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbnZpcm9ubWVudEFycmFuZ2VyIH0gZnJvbSAnQG1pY3Jvay90ZXN0cy9kb21haW4vRW52aXJvbm1lbnRBcnJhbmdlcic7XG5pbXBvcnQgQ29udGFpbmVyIGZyb20gJy4uLy4uLy4uLy4uLy4uL3NyYy9hcHAvQ29udGFpbmVyJztcbmltcG9ydCB7IEF1dGhVc2VyUmVwb3NpdG9yeSB9IGZyb20gJy4uLy4uLy4uLy4uLy4uL3NyYy9tb2R1bGVzL2F1dGgvZG9tYWluL0F1dGhVc2VyUmVwb3NpdG9yeSc7XG5pbXBvcnQgQXV0aFVzZXJNb3RoZXIgZnJvbSAnLi4vLi4vZG9tYWluL0F1dGhVc2VyTW90aGVyJztcblxuY29uc3QgcmVwb3NpdG9yeTogQXV0aFVzZXJSZXBvc2l0b3J5ID0gQ29udGFpbmVyLmdldCgnQXV0aC5kb21haW4uQXV0aFVzZXJSZXBvc2l0b3J5Jyk7XG5jb25zdCBlbnZpcm9ubWVudEFycmFuZ2VyOiBFbnZpcm9ubWVudEFycmFuZ2VyID0gQ29udGFpbmVyLmdldCgnVGVzdC5FbnZpcm9ubWVudEFycmFuZ2VyJyk7XG5cbmJlZm9yZUVhY2goYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IChhd2FpdCBlbnZpcm9ubWVudEFycmFuZ2VyKS5hcnJhbmdlKCk7XG59KTtcblxuYWZ0ZXJBbGwoYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IChhd2FpdCBlbnZpcm9ubWVudEFycmFuZ2VyKS5hcnJhbmdlKCk7XG4gICAgYXdhaXQgKGF3YWl0IGVudmlyb25tZW50QXJyYW5nZXIpLmNsb3NlKCk7XG59KTtcblxuZGVzY3JpYmUoJ0F1dGhVc2VyUmVwb3NpdG9yeScsICgpID0+IHtcbiAgICBkZXNjcmliZSgnI3NhdmUnLCAoKSA9PiB7XG4gICAgICAgIGl0KCdzaG91bGQgc2F2ZSBhIGF1dGggdXNlcicsIGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGF1dGhVc2VyID0gQXV0aFVzZXJNb3RoZXIucmFuZG9tKCk7XG5cbiAgICAgICAgICAgIGF3YWl0IHJlcG9zaXRvcnkuc2F2ZShhdXRoVXNlcik7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufSk7XG4iXSwidmVyc2lvbiI6M30=