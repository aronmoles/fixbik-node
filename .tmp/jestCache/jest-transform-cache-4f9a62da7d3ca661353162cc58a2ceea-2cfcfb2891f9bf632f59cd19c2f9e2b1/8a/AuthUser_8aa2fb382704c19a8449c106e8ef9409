7543d4f89d415d483164cf4ca77ffb2b
"use strict";

/* istanbul ignore next */
function cov_1m3nvydyaq() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUser.ts";
  var hash = "5400dbd99b94c7e5cc8eb0afb0c11e8245f1a517";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUser.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 26
        }
      },
      "4": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 7,
          column: 63
        }
      },
      "5": {
        start: {
          line: 8,
          column: 41
        },
        end: {
          line: 8,
          column: 101
        }
      },
      "6": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 16
        }
      },
      "7": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 21
        }
      },
      "8": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 27
        }
      },
      "9": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "10": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 57
        }
      },
      "11": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "12": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 29,
          column: 9
        }
      },
      "13": {
        start: {
          line: 28,
          column: 12
        },
        end: {
          line: 28,
          column: 65
        }
      },
      "14": {
        start: {
          line: 32,
          column: 0
        },
        end: {
          line: 32,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 59
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 10
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 19
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 30
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 26
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 34
          },
          end: {
            line: 23,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 95
          },
          end: {
            line: 23,
            column: 101
          }
        }, {
          start: {
            line: 23,
            column: 104
          },
          end: {
            line: 23,
            column: 114
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 23,
            column: 34
          },
          end: {
            line: 23,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 34
          },
          end: {
            line: 23,
            column: 75
          }
        }, {
          start: {
            line: 23,
            column: 79
          },
          end: {
            line: 23,
            column: 92
          }
        }],
        line: 23
      },
      "5": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 29,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUser.ts",
      mappings: ";;;;;;AAAA,gEAA6D;AAK7D,sGAA8E;AAI9E,MAAa,QAAS,SAAQ,6BAAa;IACvC,YACa,EAAc,EACd,KAAoB,EACpB,QAA0B,EAC1B,oBAA4D;QAErE,KAAK,EAAE,CAAC;QALC,OAAE,GAAF,EAAE,CAAY;QACd,UAAK,GAAL,KAAK,CAAe;QACpB,aAAQ,GAAR,QAAQ,CAAkB;QAC1B,yBAAoB,GAApB,oBAAoB,CAAwC;IAGzE,CAAC;IAED,YAAY;;QACR,OAAO;YACH,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE;YACnB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YAC/B,oBAAoB,EAAE,MAAA,IAAI,CAAC,oBAAoB,0CAAE,KAAK,EAAE;SAC3D,CAAC;IACN,CAAC;IAED,eAAe,CAAC,QAA0B;QACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE;YACjC,MAAM,IAAI,wCAA8B,EAAE,CAAC;SAC9C;IACL,CAAC;CACJ;AAxBD,4BAwBC",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUser.ts"],
      sourcesContent: ["import { AggregateRoot } from '@microk/common/AggregateRoot';\nimport { Nullable } from '@microk/common/Nullable';\nimport { PrimitivesObject } from '@microk/common/PrimitiveType';\nimport AuthUserEmail from './AuthUserEmail';\nimport AuthUserId from './AuthUserId';\nimport AuthUserIncorrectPasswordError from './AuthUserIncorrectPasswordError';\nimport AuthUserPassword from './AuthUserPassword';\nimport AuthUserRecoverPasswordToken from './AuthUserRecoverPasswordToken';\n\nexport class AuthUser extends AggregateRoot {\n    constructor(\n        readonly id: AuthUserId,\n        readonly email: AuthUserEmail,\n        readonly password: AuthUserPassword,\n        readonly recoverPasswordToken: Nullable<AuthUserRecoverPasswordToken>,\n    ) {\n        super();\n    }\n\n    toPrimitives(): PrimitivesObject {\n        return {\n            id: this.id.value(),\n            email: this.email.value(),\n            password: this.password.value(),\n            recoverPasswordToken: this.recoverPasswordToken?.value(),\n        };\n    }\n\n    isValidPassword(password: AuthUserPassword) {\n        if (!this.password.equals(password)) {\n            throw new AuthUserIncorrectPasswordError();\n        }\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5400dbd99b94c7e5cc8eb0afb0c11e8245f1a517"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1m3nvydyaq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1m3nvydyaq();

var __importDefault =
/* istanbul ignore next */
(cov_1m3nvydyaq().s[0]++,
/* istanbul ignore next */
(cov_1m3nvydyaq().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1m3nvydyaq().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1m3nvydyaq().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1m3nvydyaq().f[0]++;
  cov_1m3nvydyaq().s[1]++;
  return (
    /* istanbul ignore next */
    (cov_1m3nvydyaq().b[2][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1m3nvydyaq().b[2][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_1m3nvydyaq().b[1][0]++, mod) :
    /* istanbul ignore next */
    (cov_1m3nvydyaq().b[1][1]++, {
      "default": mod
    })
  );
}));

/* istanbul ignore next */
cov_1m3nvydyaq().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1m3nvydyaq().s[3]++;
exports.AuthUser = void 0;
const AggregateRoot_1 =
/* istanbul ignore next */
(cov_1m3nvydyaq().s[4]++, require("@microk/common/AggregateRoot"));
const AuthUserIncorrectPasswordError_1 =
/* istanbul ignore next */
(cov_1m3nvydyaq().s[5]++, __importDefault(require("./AuthUserIncorrectPasswordError")));

class AuthUser extends
/* istanbul ignore next */
(AggregateRoot_1.AggregateRoot) {
  constructor(id, email, password, recoverPasswordToken) {
    /* istanbul ignore next */
    cov_1m3nvydyaq().f[1]++;
    cov_1m3nvydyaq().s[6]++;
    super();

    /* istanbul ignore next */
    cov_1m3nvydyaq().s[7]++;
    this.id = id;

    /* istanbul ignore next */
    cov_1m3nvydyaq().s[8]++;
    this.email = email;

    /* istanbul ignore next */
    cov_1m3nvydyaq().s[9]++;
    this.password = password;

    /* istanbul ignore next */
    cov_1m3nvydyaq().s[10]++;
    this.recoverPasswordToken = recoverPasswordToken;
  }

  toPrimitives() {
    /* istanbul ignore next */
    cov_1m3nvydyaq().f[2]++;

    var _a;

    /* istanbul ignore next */
    cov_1m3nvydyaq().s[11]++;
    return {
      id: this.id.value(),
      email: this.email.value(),
      password: this.password.value(),
      recoverPasswordToken:
      /* istanbul ignore next */
      (cov_1m3nvydyaq().b[4][0]++, (_a = this.recoverPasswordToken) === null) ||
      /* istanbul ignore next */
      (cov_1m3nvydyaq().b[4][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_1m3nvydyaq().b[3][0]++, void 0) :
      /* istanbul ignore next */
      (cov_1m3nvydyaq().b[3][1]++, _a.value())
    };
  }

  isValidPassword(password) {
    /* istanbul ignore next */
    cov_1m3nvydyaq().f[3]++;
    cov_1m3nvydyaq().s[12]++;

    if (!this.password.equals(password)) {
      /* istanbul ignore next */
      cov_1m3nvydyaq().b[5][0]++;
      cov_1m3nvydyaq().s[13]++;
      throw new AuthUserIncorrectPasswordError_1.default();
    } else
    /* istanbul ignore next */
    {
      cov_1m3nvydyaq().b[5][1]++;
    }
  }

}

/* istanbul ignore next */
cov_1m3nvydyaq().s[14]++;
exports.AuthUser = AuthUser;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbW9kdWxlcy9hdXRoL2RvbWFpbi9BdXRoVXNlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQks7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWpCTCxNQUFBLGVBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSw4QkFBQSxDQUFBLENBQUE7QUFLQSxNQUFBLGdDQUFBO0FBQUE7QUFBQSwwQkFBQSxlQUFBLENBQUEsT0FBQSxDQUFBLGtDQUFBLENBQUEsQ0FBQSxDQUFBOztBQUlBLE1BQWEsUUFBYjtBQUFBO0FBQUEsQ0FBOEIsZUFBQSxDQUFBLGFBQTlCLEVBQTJDO0FBQ3ZDLEVBQUEsV0FBQSxDQUNhLEVBRGIsRUFFYSxLQUZiLEVBR2EsUUFIYixFQUlhLG9CQUpiLEVBSXlFO0FBQUE7QUFBQTtBQUFBO0FBRXJFOztBQUZxRTtBQUFBO0FBSDVELFNBQUEsRUFBQSxHQUFBLEVBQUE7O0FBRzREO0FBQUE7QUFGNUQsU0FBQSxLQUFBLEdBQUEsS0FBQTs7QUFFNEQ7QUFBQTtBQUQ1RCxTQUFBLFFBQUEsR0FBQSxRQUFBOztBQUM0RDtBQUFBO0FBQTVELFNBQUEsb0JBQUEsR0FBQSxvQkFBQTtBQUdaOztBQUVELEVBQUEsWUFBWSxHQUFBO0FBQUE7QUFBQTs7OztBQUFBO0FBQUE7QUFDUixXQUFPO0FBQ0gsTUFBQSxFQUFFLEVBQUUsS0FBSyxFQUFMLENBQVEsS0FBUixFQUREO0FBRUgsTUFBQSxLQUFLLEVBQUUsS0FBSyxLQUFMLENBQVcsS0FBWCxFQUZKO0FBR0gsTUFBQSxRQUFRLEVBQUUsS0FBSyxRQUFMLENBQWMsS0FBZCxFQUhQO0FBSUgsTUFBQSxvQkFBb0I7QUFBRTtBQUFBLG9DQUFBLEVBQUEsR0FBQSxLQUFLLG9CQUFMLE1BQXlCLElBQXpCO0FBQUE7QUFBQSxtQ0FBeUIsRUFBQSxLQUFBLEtBQUEsQ0FBekI7QUFBQTtBQUFBLG1DQUF5QixLQUFBLENBQXpCO0FBQUE7QUFBQSxtQ0FBeUIsRUFBQSxDQUFFLEtBQUYsRUFBekI7QUFKbkIsS0FBUDtBQU1IOztBQUVELEVBQUEsZUFBZSxDQUFDLFFBQUQsRUFBMkI7QUFBQTtBQUFBO0FBQUE7O0FBQ3RDLFFBQUksQ0FBQyxLQUFLLFFBQUwsQ0FBYyxNQUFkLENBQXFCLFFBQXJCLENBQUwsRUFBcUM7QUFBQTtBQUFBO0FBQUE7QUFDakMsWUFBTSxJQUFJLGdDQUFBLENBQUEsT0FBSixFQUFOO0FBQ0gsS0FGRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBR0g7O0FBdkJzQzs7OztBQUEzQyxPQUFBLENBQUEsUUFBQSxHQUFBLFFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZ2dyZWdhdGVSb290IH0gZnJvbSAnQG1pY3Jvay9jb21tb24vQWdncmVnYXRlUm9vdCc7XG5pbXBvcnQgeyBOdWxsYWJsZSB9IGZyb20gJ0BtaWNyb2svY29tbW9uL051bGxhYmxlJztcbmltcG9ydCB7IFByaW1pdGl2ZXNPYmplY3QgfSBmcm9tICdAbWljcm9rL2NvbW1vbi9QcmltaXRpdmVUeXBlJztcbmltcG9ydCBBdXRoVXNlckVtYWlsIGZyb20gJy4vQXV0aFVzZXJFbWFpbCc7XG5pbXBvcnQgQXV0aFVzZXJJZCBmcm9tICcuL0F1dGhVc2VySWQnO1xuaW1wb3J0IEF1dGhVc2VySW5jb3JyZWN0UGFzc3dvcmRFcnJvciBmcm9tICcuL0F1dGhVc2VySW5jb3JyZWN0UGFzc3dvcmRFcnJvcic7XG5pbXBvcnQgQXV0aFVzZXJQYXNzd29yZCBmcm9tICcuL0F1dGhVc2VyUGFzc3dvcmQnO1xuaW1wb3J0IEF1dGhVc2VyUmVjb3ZlclBhc3N3b3JkVG9rZW4gZnJvbSAnLi9BdXRoVXNlclJlY292ZXJQYXNzd29yZFRva2VuJztcblxuZXhwb3J0IGNsYXNzIEF1dGhVc2VyIGV4dGVuZHMgQWdncmVnYXRlUm9vdCB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHJlYWRvbmx5IGlkOiBBdXRoVXNlcklkLFxuICAgICAgICByZWFkb25seSBlbWFpbDogQXV0aFVzZXJFbWFpbCxcbiAgICAgICAgcmVhZG9ubHkgcGFzc3dvcmQ6IEF1dGhVc2VyUGFzc3dvcmQsXG4gICAgICAgIHJlYWRvbmx5IHJlY292ZXJQYXNzd29yZFRva2VuOiBOdWxsYWJsZTxBdXRoVXNlclJlY292ZXJQYXNzd29yZFRva2VuPixcbiAgICApIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG5cbiAgICB0b1ByaW1pdGl2ZXMoKTogUHJpbWl0aXZlc09iamVjdCB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBpZDogdGhpcy5pZC52YWx1ZSgpLFxuICAgICAgICAgICAgZW1haWw6IHRoaXMuZW1haWwudmFsdWUoKSxcbiAgICAgICAgICAgIHBhc3N3b3JkOiB0aGlzLnBhc3N3b3JkLnZhbHVlKCksXG4gICAgICAgICAgICByZWNvdmVyUGFzc3dvcmRUb2tlbjogdGhpcy5yZWNvdmVyUGFzc3dvcmRUb2tlbj8udmFsdWUoKSxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBpc1ZhbGlkUGFzc3dvcmQocGFzc3dvcmQ6IEF1dGhVc2VyUGFzc3dvcmQpIHtcbiAgICAgICAgaWYgKCF0aGlzLnBhc3N3b3JkLmVxdWFscyhwYXNzd29yZCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBBdXRoVXNlckluY29ycmVjdFBhc3N3b3JkRXJyb3IoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==