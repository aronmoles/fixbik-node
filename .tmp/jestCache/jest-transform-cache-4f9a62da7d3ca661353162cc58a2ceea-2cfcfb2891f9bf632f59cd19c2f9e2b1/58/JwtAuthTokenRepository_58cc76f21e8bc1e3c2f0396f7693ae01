a2450ce7136cb0a1729a8f56d46e5837
"use strict";

/* istanbul ignore next */
function cov_1q9kqrfuut() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/infrastructure/generators/JwtAuthTokenRepository.ts";
  var hash = "288d9d0f19e35887865f07fb2e6c49c3f9377b3f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/infrastructure/generators/JwtAuthTokenRepository.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 6,
          column: 70
        }
      },
      "4": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 63
        }
      },
      "5": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 23
        }
      },
      "6": {
        start: {
          line: 13,
          column: 27
        },
        end: {
          line: 15,
          column: 9
        }
      },
      "7": {
        start: {
          line: 16,
          column: 22
        },
        end: {
          line: 16,
          column: 89
        }
      },
      "8": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 53
        }
      },
      "9": {
        start: {
          line: 20,
          column: 0
        },
        end: {
          line: 20,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 21
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 23
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/infrastructure/generators/JwtAuthTokenRepository.ts",
      mappings: ";;;;;AAGA,uEAA+C;AAG/C,gEAA+B;AAG/B,MAAqB,sBAAsB;IACvC,YACqB,GAAgB;QAAhB,QAAG,GAAH,GAAG,CAAa;IAErC,CAAC;IAED,QAAQ,CAAC,QAAkB;QACvB,MAAM,UAAU,GAAsB;YAClC,UAAU,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE;SACrC,CAAC;QACF,MAAM,KAAK,GAAG,sBAAG,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;QAC/D,OAAO,mBAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACvC,CAAC;CACJ;AAbD,yCAaC",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/infrastructure/generators/JwtAuthTokenRepository.ts"],
      sourcesContent: ["import Env from '@microk/core/domain/Env';\nimport { EnvKey } from '../../../../app/ProcessEnv';\nimport FixBikeJwtPayload from '../../../shared/infrastructure/FixBikeJwtPayload';\nimport AuthToken from '../../domain/AuthToken';\nimport AuthTokenRepository from '../../domain/AuthTokenRepository';\nimport { AuthUser } from '../../domain/AuthUser';\nimport jwt from 'jsonwebtoken';\n\n\nexport default class JwtAuthTokenRepository implements AuthTokenRepository {\n    constructor(\n        private readonly env: Env<EnvKey>,\n    ) {\n    }\n\n    generate(authUser: AuthUser): AuthToken {\n        const jwtPayload: FixBikeJwtPayload = {\n            authUserId: authUser.id.toString(),\n        };\n        const token = jwt.sign(jwtPayload, this.env.get('JWT_SECRET'));\n        return AuthToken.fromString(token);\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "288d9d0f19e35887865f07fb2e6c49c3f9377b3f"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1q9kqrfuut = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1q9kqrfuut();

var __importDefault =
/* istanbul ignore next */
(cov_1q9kqrfuut().s[0]++,
/* istanbul ignore next */
(cov_1q9kqrfuut().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1q9kqrfuut().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1q9kqrfuut().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1q9kqrfuut().f[0]++;
  cov_1q9kqrfuut().s[1]++;
  return (
    /* istanbul ignore next */
    (cov_1q9kqrfuut().b[2][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1q9kqrfuut().b[2][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_1q9kqrfuut().b[1][0]++, mod) :
    /* istanbul ignore next */
    (cov_1q9kqrfuut().b[1][1]++, {
      "default": mod
    })
  );
}));

/* istanbul ignore next */
cov_1q9kqrfuut().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const AuthToken_1 =
/* istanbul ignore next */
(cov_1q9kqrfuut().s[3]++, __importDefault(require("../../domain/AuthToken")));
const jsonwebtoken_1 =
/* istanbul ignore next */
(cov_1q9kqrfuut().s[4]++, __importDefault(require("jsonwebtoken")));

class JwtAuthTokenRepository {
  constructor(env) {
    /* istanbul ignore next */
    cov_1q9kqrfuut().f[1]++;
    cov_1q9kqrfuut().s[5]++;
    this.env = env;
  }

  generate(authUser) {
    /* istanbul ignore next */
    cov_1q9kqrfuut().f[2]++;
    const jwtPayload =
    /* istanbul ignore next */
    (cov_1q9kqrfuut().s[6]++, {
      authUserId: authUser.id.toString()
    });
    const token =
    /* istanbul ignore next */
    (cov_1q9kqrfuut().s[7]++, jsonwebtoken_1.default.sign(jwtPayload, this.env.get('JWT_SECRET')));

    /* istanbul ignore next */
    cov_1q9kqrfuut().s[8]++;
    return AuthToken_1.default.fromString(token);
  }

}

/* istanbul ignore next */
cov_1q9kqrfuut().s[9]++;
exports.default = JwtAuthTokenRepository;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbW9kdWxlcy9hdXRoL2luZnJhc3RydWN0dXJlL2dlbmVyYXRvcnMvSnd0QXV0aFRva2VuUmVwb3NpdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUJROzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWhCUixNQUFBLFdBQUE7QUFBQTtBQUFBLDBCQUFBLGVBQUEsQ0FBQSxPQUFBLENBQUEsd0JBQUEsQ0FBQSxDQUFBLENBQUE7QUFHQSxNQUFBLGNBQUE7QUFBQTtBQUFBLDBCQUFBLGVBQUEsQ0FBQSxPQUFBLENBQUEsY0FBQSxDQUFBLENBQUEsQ0FBQTs7QUFHQSxNQUFxQixzQkFBckIsQ0FBMkM7QUFDdkMsRUFBQSxXQUFBLENBQ3FCLEdBRHJCLEVBQ3FDO0FBQUE7QUFBQTtBQUFBO0FBQWhCLFNBQUEsR0FBQSxHQUFBLEdBQUE7QUFFcEI7O0FBRUQsRUFBQSxRQUFRLENBQUMsUUFBRCxFQUFtQjtBQUFBO0FBQUE7QUFDdkIsVUFBTSxVQUFVO0FBQUE7QUFBQSw4QkFBc0I7QUFDbEMsTUFBQSxVQUFVLEVBQUUsUUFBUSxDQUFDLEVBQVQsQ0FBWSxRQUFaO0FBRHNCLEtBQXRCLENBQWhCO0FBR0EsVUFBTSxLQUFLO0FBQUE7QUFBQSw4QkFBRyxjQUFBLENBQUEsT0FBQSxDQUFJLElBQUosQ0FBUyxVQUFULEVBQXFCLEtBQUssR0FBTCxDQUFTLEdBQVQsQ0FBYSxZQUFiLENBQXJCLENBQUgsQ0FBWDs7QUFKdUI7QUFBQTtBQUt2QixXQUFPLFdBQUEsQ0FBQSxPQUFBLENBQVUsVUFBVixDQUFxQixLQUFyQixDQUFQO0FBQ0g7O0FBWnNDOzs7O0FBQTNDLE9BQUEsQ0FBQSxPQUFBLEdBQUEsc0JBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRW52IGZyb20gJ0BtaWNyb2svY29yZS9kb21haW4vRW52JztcbmltcG9ydCB7IEVudktleSB9IGZyb20gJy4uLy4uLy4uLy4uL2FwcC9Qcm9jZXNzRW52JztcbmltcG9ydCBGaXhCaWtlSnd0UGF5bG9hZCBmcm9tICcuLi8uLi8uLi9zaGFyZWQvaW5mcmFzdHJ1Y3R1cmUvRml4QmlrZUp3dFBheWxvYWQnO1xuaW1wb3J0IEF1dGhUb2tlbiBmcm9tICcuLi8uLi9kb21haW4vQXV0aFRva2VuJztcbmltcG9ydCBBdXRoVG9rZW5SZXBvc2l0b3J5IGZyb20gJy4uLy4uL2RvbWFpbi9BdXRoVG9rZW5SZXBvc2l0b3J5JztcbmltcG9ydCB7IEF1dGhVc2VyIH0gZnJvbSAnLi4vLi4vZG9tYWluL0F1dGhVc2VyJztcbmltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJztcblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBKd3RBdXRoVG9rZW5SZXBvc2l0b3J5IGltcGxlbWVudHMgQXV0aFRva2VuUmVwb3NpdG9yeSB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgZW52OiBFbnY8RW52S2V5PixcbiAgICApIHtcbiAgICB9XG5cbiAgICBnZW5lcmF0ZShhdXRoVXNlcjogQXV0aFVzZXIpOiBBdXRoVG9rZW4ge1xuICAgICAgICBjb25zdCBqd3RQYXlsb2FkOiBGaXhCaWtlSnd0UGF5bG9hZCA9IHtcbiAgICAgICAgICAgIGF1dGhVc2VySWQ6IGF1dGhVc2VyLmlkLnRvU3RyaW5nKCksXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IHRva2VuID0gand0LnNpZ24oand0UGF5bG9hZCwgdGhpcy5lbnYuZ2V0KCdKV1RfU0VDUkVUJykpO1xuICAgICAgICByZXR1cm4gQXV0aFRva2VuLmZyb21TdHJpbmcodG9rZW4pO1xuICAgIH1cbn1cbiJdfQ==