b833a49a21ef50caf20e784e0267e2f5
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Filter = void 0;
const InvalidArgumentError_1 = require("../value-object/InvalidArgumentError");
const FilterField_1 = require("./FilterField");
const FilterOperator_1 = require("./FilterOperator");
const FilterValue_1 = require("./FilterValue");
class Filter {
    constructor(field, operator, value) {
        this.field = field;
        this.operator = operator;
        this.value = value;
    }
    static fromValues(values) {
        const field = values.get('field');
        const operator = values.get('operator');
        const value = values.get('value');
        if (!field || !operator || !value) {
            throw new InvalidArgumentError_1.InvalidArgumentError('The filter is invalid');
        }
        return new Filter(new FilterField_1.FilterField(field), FilterOperator_1.FilterOperator.fromValue(operator), new FilterValue_1.FilterValue(value));
    }
}
exports.Filter = Filter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3NyYy9taWNyb2svY29tbW9uL2NyaXRlcmlhL0ZpbHRlci50cyIsIm1hcHBpbmdzIjoiOzs7QUFBQSwrRUFBNEU7QUFDNUUsK0NBQTRDO0FBQzVDLHFEQUFrRDtBQUNsRCwrQ0FBNEM7QUFFNUMsTUFBYSxNQUFNO0lBS2YsWUFBWSxLQUFrQixFQUFFLFFBQXdCLEVBQUUsS0FBa0I7UUFDeEUsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDdkIsQ0FBQztJQUVELE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBMkI7UUFDekMsTUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNsQyxNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3hDLE1BQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFbEMsSUFBSSxDQUFDLEtBQUssSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLEtBQUssRUFBRTtZQUMvQixNQUFNLElBQUksMkNBQW9CLENBQUMsdUJBQXVCLENBQUMsQ0FBQztTQUMzRDtRQUVELE9BQU8sSUFBSSxNQUFNLENBQUMsSUFBSSx5QkFBVyxDQUFDLEtBQUssQ0FBQyxFQUFFLCtCQUFjLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxFQUFFLElBQUkseUJBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQzFHLENBQUM7Q0FDSjtBQXRCRCx3QkFzQkMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3NyYy9taWNyb2svY29tbW9uL2NyaXRlcmlhL0ZpbHRlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbnZhbGlkQXJndW1lbnRFcnJvciB9IGZyb20gJy4uL3ZhbHVlLW9iamVjdC9JbnZhbGlkQXJndW1lbnRFcnJvcic7XG5pbXBvcnQgeyBGaWx0ZXJGaWVsZCB9IGZyb20gJy4vRmlsdGVyRmllbGQnO1xuaW1wb3J0IHsgRmlsdGVyT3BlcmF0b3IgfSBmcm9tICcuL0ZpbHRlck9wZXJhdG9yJztcbmltcG9ydCB7IEZpbHRlclZhbHVlIH0gZnJvbSAnLi9GaWx0ZXJWYWx1ZSc7XG5cbmV4cG9ydCBjbGFzcyBGaWx0ZXIge1xuICAgIHJlYWRvbmx5IGZpZWxkOiBGaWx0ZXJGaWVsZDtcbiAgICByZWFkb25seSBvcGVyYXRvcjogRmlsdGVyT3BlcmF0b3I7XG4gICAgcmVhZG9ubHkgdmFsdWU6IEZpbHRlclZhbHVlO1xuXG4gICAgY29uc3RydWN0b3IoZmllbGQ6IEZpbHRlckZpZWxkLCBvcGVyYXRvcjogRmlsdGVyT3BlcmF0b3IsIHZhbHVlOiBGaWx0ZXJWYWx1ZSkge1xuICAgICAgICB0aGlzLmZpZWxkID0gZmllbGQ7XG4gICAgICAgIHRoaXMub3BlcmF0b3IgPSBvcGVyYXRvcjtcbiAgICAgICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICAgIH1cblxuICAgIHN0YXRpYyBmcm9tVmFsdWVzKHZhbHVlczogTWFwPHN0cmluZywgc3RyaW5nPik6IEZpbHRlciB7XG4gICAgICAgIGNvbnN0IGZpZWxkID0gdmFsdWVzLmdldCgnZmllbGQnKTtcbiAgICAgICAgY29uc3Qgb3BlcmF0b3IgPSB2YWx1ZXMuZ2V0KCdvcGVyYXRvcicpO1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHZhbHVlcy5nZXQoJ3ZhbHVlJyk7XG5cbiAgICAgICAgaWYgKCFmaWVsZCB8fCAhb3BlcmF0b3IgfHwgIXZhbHVlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgSW52YWxpZEFyZ3VtZW50RXJyb3IoJ1RoZSBmaWx0ZXIgaXMgaW52YWxpZCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG5ldyBGaWx0ZXIobmV3IEZpbHRlckZpZWxkKGZpZWxkKSwgRmlsdGVyT3BlcmF0b3IuZnJvbVZhbHVlKG9wZXJhdG9yKSwgbmV3IEZpbHRlclZhbHVlKHZhbHVlKSk7XG4gICAgfVxufVxuIl0sInZlcnNpb24iOjN9