{"version":3,"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/infrastructure/SetInfoController.ts"],"names":[],"mappingsgCAAA,CAAA,CAAA;AACA,MAAA,YAAA;AAAA;AAAA,2BAAA,OAAA,CAAA,gCAAA,CAAA,CAAA;AAMA,MAAA,gBAAA;AAAA;AAAA,2BAAA,eAAA,CAAA,OAAA,CAAA,wCAAA,CAAA,CAAA,CAAA;;AAEA,MAAqB,iBAArB,CAAsC;AAClC,EAAA,WAAA,CACqB,UADrB,EAC2C;AAAA;AAAA;AAAA;AAAtB,SAAA,UAAA,GAAA,UAAA;AAEpB;;AAED,EAAA,MAAM,GAAA;AAAA;AAAA;AAAA;AACF,WAAO;AACH,MAAA,MAAM,EAAE,YAAA,CAAA,UAAA,CAAW,GADhB;AAEH,MAAA,IAAI,EAAE;AAFH,KAAP;AAIH;;AAEK,EAAA,GAAG,CAAC,GAAD,EAAe,GAAf,EAA4B;AAAA;AAAA;AAAA;;;;;AACjC,YAAM,KAAK,UAAL,CAAgB,QAAhB,CAAyB,IAAI,gBAAA,CAAA,OAAJ,EAAzB,CAAN;;;;AACA,MAAA,GAAG,CAAC,MAAJ,CAAW,YAAA,CAAA,UAAA,CAAW,EAAtB,EAA0B,IAA1B;AACH,K;AAAA;;AAhBiC;;;;AAAtC,OAAA,CAAA,OAAA,GAAA,iBAAA","sourcesContent":["import { HttpMethod } from '@microk/common/http/HttpMethod';\nimport { HttpStatus } from '@microk/common/http/HttpStatus';\nimport Controller from '@microk/core/domain/http/Controller';\nimport { ControllerConfig } from '@microk/core/domain/http/ControllerConfig';\nimport { Request } from '@microk/core/domain/http/Request';\nimport { Response } from '@microk/core/domain/http/Response';\nimport { CommandBus } from '@microk/cqrs/domain/command/CommandBus';\nimport SetInfoCommand from '../application/set-info/SetInfoCommand';\n\nexport default class SetInfoController implements Controller {\n    constructor(\n        private readonly commandBus: CommandBus,\n    ) {\n    }\n\n    config(): ControllerConfig {\n        return {\n            method: HttpMethod.PUT,\n            path: '/',\n        };\n    }\n\n    async run(req: Request, res: Response): Promise<void> {\n        await this.commandBus.dispatch(new SetInfoCommand());\n        res.status(HttpStatus.OK).send();\n    }\n}\n"]}