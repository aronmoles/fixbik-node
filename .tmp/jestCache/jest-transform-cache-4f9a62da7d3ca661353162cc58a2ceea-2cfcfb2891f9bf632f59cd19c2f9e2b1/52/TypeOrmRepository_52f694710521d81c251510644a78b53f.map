{"file":"/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/persistence/infrastructure/typeorm/TypeOrmRepository.ts","mappings":";;;;;;;;;;;;AAGA,MAAsB,iBAAiB;IACnC,YAAoB,OAA4B;QAA5B,YAAO,GAAP,OAAO,CAAqB;IAChD,CAAC;IAIS,MAAM;QACZ,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAEe,UAAU;;YACtB,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;QACnE,CAAC;KAAA;IAEe,OAAO,CAAC,aAAgB;;YACpC,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;YAC3C,MAAM,UAAU,CAAC,IAAI,CAAC,aAAoB,CAAC,CAAC;QAChD,CAAC;KAAA;CACJ;AAlBD,8CAkBC","names":[],"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/persistence/infrastructure/typeorm/TypeOrmRepository.ts"],"sourcesContent":["import { Connection, EntitySchema, Repository } from 'typeorm';\nimport { AggregateRoot } from '../../../common/AggregateRoot';\n\nexport abstract class TypeOrmRepository<T extends AggregateRoot> {\n    constructor(private _client: Promise<Connection>) {\n    }\n\n    protected abstract entitySchema(): EntitySchema<T>;\n\n    protected client(): Promise<Connection> {\n        return this._client;\n    }\n\n    protected async repository(): Promise<Repository<T>> {\n        return (await this._client).getRepository(this.entitySchema());\n    }\n\n    protected async persist(aggregateRoot: T): Promise<void> {\n        const repository = await this.repository();\n        await repository.save(aggregateRoot as any);\n    }\n}\n"],"version":3}