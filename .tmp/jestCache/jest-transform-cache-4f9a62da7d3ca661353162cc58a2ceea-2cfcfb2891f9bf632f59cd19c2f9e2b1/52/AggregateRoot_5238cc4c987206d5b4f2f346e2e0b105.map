{"file":"/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/AggregateRoot.ts","mappings":";;;AAEA,MAAsB,aAAa;IAG/B;QACI,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED,gBAAgB;QACZ,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC/C,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAEvB,OAAO,YAAY,CAAC;IACxB,CAAC;IAED,MAAM,CAAC,KAAkB;QACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;CAGJ;AAnBD,sCAmBC","names":[],"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/AggregateRoot.ts"],"sourcesContent":["import DomainEvent from '../event/domain/DomainEvent';\n\nexport abstract class AggregateRoot {\n    private domainEvents: Array<DomainEvent>;\n\n    constructor() {\n        this.domainEvents = [];\n    }\n\n    pullDomainEvents(): Array<DomainEvent> {\n        const domainEvents = this.domainEvents.slice();\n        this.domainEvents = [];\n\n        return domainEvents;\n    }\n\n    record(event: DomainEvent): void {\n        this.domainEvents.push(event);\n    }\n\n  abstract toPrimitives(): any;\n}\n"],"version":3}