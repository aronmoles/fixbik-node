461c9923bf5e03b8eeec882bbe68d2a8
"use strict";

/* istanbul ignore next */
function cov_1tn9atgyfn() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/application/login/LoginQueryHandler.ts";
  var hash = "03d218d66c76b5d22b8ef820eb45c0ae93bcccf9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/application/login/LoginQueryHandler.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "13": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "14": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "15": {
        start: {
          line: 15,
          column: 23
        },
        end: {
          line: 15,
          column: 72
        }
      },
      "16": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 61
        }
      },
      "17": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 36
        }
      },
      "18": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 41
        }
      },
      "19": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 28,
          column: 11
        }
      },
      "20": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 24,
          column: 86
        }
      },
      "21": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 27,
          column: 14
        }
      },
      "22": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 31,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 11,
            column: 57
          }
        },
        loc: {
          start: {
            line: 11,
            column: 71
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 30
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 18
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 22
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 23,
            column: 47
          },
          end: {
            line: 23,
            column: 48
          }
        },
        loc: {
          start: {
            line: 23,
            column: 60
          },
          end: {
            line: 28,
            column: 9
          }
        },
        line: 23
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 11,
            column: 22
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 27
          }
        }, {
          start: {
            line: 11,
            column: 31
          },
          end: {
            line: 11,
            column: 51
          }
        }, {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      },
      "6": {
        loc: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 12,
            column: 37
          },
          end: {
            line: 12,
            column: 40
          }
        }, {
          start: {
            line: 12,
            column: 43
          },
          end: {
            line: 12,
            column: 61
          }
        }],
        line: 12
      },
      "7": {
        loc: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 15
          }
        }, {
          start: {
            line: 12,
            column: 19
          },
          end: {
            line: 12,
            column: 33
          }
        }],
        line: 12
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/application/login/LoginQueryHandler.ts",
      mappings: ";;;;;;;;;;;;;;AAAA,yEAAsE;AACtE,8DAAsC;AAItC,MAAqB,iBAAkB,SAAQ,2BAA4C;IACvF,YACqB,YAA0B;QAE3C,KAAK,CAAC,oBAAU,CAAC,CAAC;QAFD,iBAAY,GAAZ,YAAY,CAAc;IAG/C,CAAC;IAEK,MAAM,CAAC,KAAiB;;YAC1B,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC3E,OAAO;gBACH,SAAS,EAAE,SAAS,CAAC,QAAQ,EAAE;aAClC,CAAC;QACN,CAAC;KAAA;CACJ;AAbD,oCAaC",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/application/login/LoginQueryHandler.ts"],
      sourcesContent: ["import { QueryHandler } from '@microk/cqrs/domain/query/QueryHandler';\nimport LoginQuery from './LoginQuery';\nimport LoginQueryResponse from './LoginQueryResponse';\nimport LoginService from './LoginService';\n\nexport default class LoginQueryHandler extends QueryHandler<LoginQuery, LoginQueryResponse> {\n    constructor(\n        private readonly loginService: LoginService,\n    ) {\n        super(LoginQuery);\n    }\n\n    async handle(query: LoginQuery): Promise<LoginQueryResponse> {\n        const authToken = await this.loginService.run(query.email, query.password);\n        return {\n            authToken: authToken.toString(),\n        };\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "03d218d66c76b5d22b8ef820eb45c0ae93bcccf9"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1tn9atgyfn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1tn9atgyfn();

var __awaiter =
/* istanbul ignore next */
(cov_1tn9atgyfn().s[0]++,
/* istanbul ignore next */
(cov_1tn9atgyfn().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1tn9atgyfn().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_1tn9atgyfn().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_1tn9atgyfn().f[0]++;

  function adopt(value) {
    /* istanbul ignore next */
    cov_1tn9atgyfn().f[1]++;
    cov_1tn9atgyfn().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_1tn9atgyfn().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_1tn9atgyfn().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_1tn9atgyfn().f[2]++;
      cov_1tn9atgyfn().s[2]++;
      resolve(value);
    }));
  }

  /* istanbul ignore next */
  cov_1tn9atgyfn().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_1tn9atgyfn().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_1tn9atgyfn().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_1tn9atgyfn().f[3]++;

    function fulfilled(value) {
      /* istanbul ignore next */
      cov_1tn9atgyfn().f[4]++;
      cov_1tn9atgyfn().s[4]++;

      try {
        /* istanbul ignore next */
        cov_1tn9atgyfn().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1tn9atgyfn().s[6]++;
        reject(e);
      }
    }

    function rejected(value) {
      /* istanbul ignore next */
      cov_1tn9atgyfn().f[5]++;
      cov_1tn9atgyfn().s[7]++;

      try {
        /* istanbul ignore next */
        cov_1tn9atgyfn().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_1tn9atgyfn().s[9]++;
        reject(e);
      }
    }

    function step(result) {
      /* istanbul ignore next */
      cov_1tn9atgyfn().f[6]++;
      cov_1tn9atgyfn().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_1tn9atgyfn().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_1tn9atgyfn().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }

    /* istanbul ignore next */
    cov_1tn9atgyfn().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_1tn9atgyfn().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_1tn9atgyfn().b[4][1]++, []))).next());
  });
}));

var __importDefault =
/* istanbul ignore next */
(cov_1tn9atgyfn().s[12]++,
/* istanbul ignore next */
(cov_1tn9atgyfn().b[5][0]++, this) &&
/* istanbul ignore next */
(cov_1tn9atgyfn().b[5][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1tn9atgyfn().b[5][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1tn9atgyfn().f[7]++;
  cov_1tn9atgyfn().s[13]++;
  return (
    /* istanbul ignore next */
    (cov_1tn9atgyfn().b[7][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1tn9atgyfn().b[7][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_1tn9atgyfn().b[6][0]++, mod) :
    /* istanbul ignore next */
    (cov_1tn9atgyfn().b[6][1]++, {
      "default": mod
    })
  );
}));

/* istanbul ignore next */
cov_1tn9atgyfn().s[14]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const QueryHandler_1 =
/* istanbul ignore next */
(cov_1tn9atgyfn().s[15]++, require("@microk/cqrs/domain/query/QueryHandler"));
const LoginQuery_1 =
/* istanbul ignore next */
(cov_1tn9atgyfn().s[16]++, __importDefault(require("./LoginQuery")));

class LoginQueryHandler extends
/* istanbul ignore next */
(QueryHandler_1.QueryHandler) {
  constructor(loginService) {
    /* istanbul ignore next */
    cov_1tn9atgyfn().f[8]++;
    cov_1tn9atgyfn().s[17]++;
    super(LoginQuery_1.default);

    /* istanbul ignore next */
    cov_1tn9atgyfn().s[18]++;
    this.loginService = loginService;
  }

  handle(query) {
    /* istanbul ignore next */
    cov_1tn9atgyfn().f[9]++;
    cov_1tn9atgyfn().s[19]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_1tn9atgyfn().f[10]++;
      const authToken =
      /* istanbul ignore next */
      (cov_1tn9atgyfn().s[20]++, yield this.loginService.run(query.email, query.password));

      /* istanbul ignore next */
      cov_1tn9atgyfn().s[21]++;
      return {
        authToken: authToken.toString()
      };
    });
  }

}

/* istanbul ignore next */
cov_1tn9atgyfn().s[22]++;
exports.default = LoginQueryHandler;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbW9kdWxlcy9hdXRoL2FwcGxpY2F0aW9uL2xvZ2luL0xvZ2luUXVlcnlIYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBREEsTUFBQSxjQUFBO0FBQUE7QUFBQSwyQkFBQSxPQUFBLENBQUEsd0NBQUEsQ0FBQSxDQUFBO0FBQ0EsTUFBQSxZQUFBO0FBQUE7QUFBQSwyQkFBQSxlQUFBLENBQUEsT0FBQSxDQUFBLGNBQUEsQ0FBQSxDQUFBLENBQUE7O0FBSUEsTUFBcUIsaUJBQXJCO0FBQUE7QUFBQSxDQUErQyxjQUFBLENBQUEsWUFBL0MsRUFBMkY7QUFDdkYsRUFBQSxXQUFBLENBQ3FCLFlBRHJCLEVBQytDO0FBQUE7QUFBQTtBQUFBO0FBRTNDLFVBQU0sWUFBQSxDQUFBLE9BQU47O0FBRjJDO0FBQUE7QUFBMUIsU0FBQSxZQUFBLEdBQUEsWUFBQTtBQUdwQjs7QUFFSyxFQUFBLE1BQU0sQ0FBQyxLQUFELEVBQWtCO0FBQUE7QUFBQTtBQUFBOzs7O0FBQzFCLFlBQU0sU0FBUztBQUFBO0FBQUEsaUNBQUcsTUFBTSxLQUFLLFlBQUwsQ0FBa0IsR0FBbEIsQ0FBc0IsS0FBSyxDQUFDLEtBQTVCLEVBQW1DLEtBQUssQ0FBQyxRQUF6QyxDQUFULENBQWY7Ozs7QUFDQSxhQUFPO0FBQ0gsUUFBQSxTQUFTLEVBQUUsU0FBUyxDQUFDLFFBQVY7QUFEUixPQUFQO0FBR0gsSztBQUFBOztBQVpzRjs7OztBQUEzRixPQUFBLENBQUEsT0FBQSxHQUFBLGlCQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUXVlcnlIYW5kbGVyIH0gZnJvbSAnQG1pY3Jvay9jcXJzL2RvbWFpbi9xdWVyeS9RdWVyeUhhbmRsZXInO1xuaW1wb3J0IExvZ2luUXVlcnkgZnJvbSAnLi9Mb2dpblF1ZXJ5JztcbmltcG9ydCBMb2dpblF1ZXJ5UmVzcG9uc2UgZnJvbSAnLi9Mb2dpblF1ZXJ5UmVzcG9uc2UnO1xuaW1wb3J0IExvZ2luU2VydmljZSBmcm9tICcuL0xvZ2luU2VydmljZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExvZ2luUXVlcnlIYW5kbGVyIGV4dGVuZHMgUXVlcnlIYW5kbGVyPExvZ2luUXVlcnksIExvZ2luUXVlcnlSZXNwb25zZT4ge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IGxvZ2luU2VydmljZTogTG9naW5TZXJ2aWNlLFxuICAgICkge1xuICAgICAgICBzdXBlcihMb2dpblF1ZXJ5KTtcbiAgICB9XG5cbiAgICBhc3luYyBoYW5kbGUocXVlcnk6IExvZ2luUXVlcnkpOiBQcm9taXNlPExvZ2luUXVlcnlSZXNwb25zZT4ge1xuICAgICAgICBjb25zdCBhdXRoVG9rZW4gPSBhd2FpdCB0aGlzLmxvZ2luU2VydmljZS5ydW4ocXVlcnkuZW1haWwsIHF1ZXJ5LnBhc3N3b3JkKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGF1dGhUb2tlbjogYXV0aFRva2VuLnRvU3RyaW5nKCksXG4gICAgICAgIH07XG4gICAgfVxufVxuIl19