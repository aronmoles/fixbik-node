ff2c59a7c0a13a37ce6b45337fdc24f0
"use strict";

/* istanbul ignore next */
function cov_xtnszf67x() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/infrastructure/controllers/LoginController.ts";
  var hash = "4a7f343ec7cc9838232bfa1dffd8468a3768f67b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/infrastructure/controllers/LoginController.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 22
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "13": {
        start: {
          line: 12,
          column: 4
        },
        end: {
          line: 12,
          column: 62
        }
      },
      "14": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 62
        }
      },
      "15": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 62
        }
      },
      "16": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 62
        }
      },
      "17": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 83
        }
      },
      "18": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "19": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 26,
          column: 10
        }
      },
      "20": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 33,
          column: 11
        }
      },
      "21": {
        start: {
          line: 30,
          column: 31
        },
        end: {
          line: 30,
          column: 68
        }
      },
      "22": {
        start: {
          line: 31,
          column: 39
        },
        end: {
          line: 31,
          column: 74
        }
      },
      "23": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 76
        }
      },
      "24": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 11,
            column: 57
          }
        },
        loc: {
          start: {
            line: 11,
            column: 71
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 11
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 13
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 22
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 18
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 28
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 29,
            column: 47
          },
          end: {
            line: 29,
            column: 48
          }
        },
        loc: {
          start: {
            line: 29,
            column: 60
          },
          end: {
            line: 33,
            column: 9
          }
        },
        line: 29
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 11,
            column: 22
          },
          end: {
            line: 13,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 23
          },
          end: {
            line: 11,
            column: 27
          }
        }, {
          start: {
            line: 11,
            column: 31
          },
          end: {
            line: 11,
            column: 51
          }
        }, {
          start: {
            line: 11,
            column: 56
          },
          end: {
            line: 13,
            column: 1
          }
        }],
        line: 11
      },
      "6": {
        loc: {
          start: {
            line: 12,
            column: 11
          },
          end: {
            line: 12,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 12,
            column: 37
          },
          end: {
            line: 12,
            column: 40
          }
        }, {
          start: {
            line: 12,
            column: 43
          },
          end: {
            line: 12,
            column: 61
          }
        }],
        line: 12
      },
      "7": {
        loc: {
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 12,
            column: 12
          },
          end: {
            line: 12,
            column: 15
          }
        }, {
          start: {
            line: 12,
            column: 19
          },
          end: {
            line: 12,
            column: 33
          }
        }],
        line: 12
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/infrastructure/controllers/LoginController.ts",
      mappings: ";;;;;;;;;;;;;;AAAA,+DAA4D;AAC5D,+DAA4D;AAM5D,oFAA4D;AAG5D,MAAqB,eAAe;IAChC,YACqB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAEvC,CAAC;IAED,MAAM;QACF,OAAO;YACH,IAAI,EAAE,aAAa;YACnB,MAAM,EAAE,uBAAU,CAAC,IAAI;SAC1B,CAAC;IACN,CAAC;IAEK,GAAG,CAAC,GAAY,EAAE,GAAa;;YACjC,MAAM,UAAU,GAAG,oBAAU,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAC/C,MAAM,kBAAkB,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAqB,UAAU,CAAC,CAAC;YACnF,GAAG,CAAC,MAAM,CAAC,uBAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACvD,CAAC;KAAA;CACJ;AAlBD,kCAkBC",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/infrastructure/controllers/LoginController.ts"],
      sourcesContent: ["import { HttpMethod } from '@microk/common/http/HttpMethod';\nimport { HttpStatus } from '@microk/common/http/HttpStatus';\nimport Controller from '@microk/core/domain/http/Controller';\nimport { ControllerConfig } from '@microk/core/domain/http/ControllerConfig';\nimport { Request } from '@microk/core/domain/http/Request';\nimport { Response } from '@microk/core/domain/http/Response';\nimport QueryBus from '@microk/cqrs/domain/query/QueryBus';\nimport LoginQuery from '../../application/login/LoginQuery';\nimport LoginQueryResponse from '../../application/login/LoginQueryResponse';\n\nexport default class LoginController implements Controller {\n    constructor(\n        private readonly queryBus: QueryBus,\n    ) {\n    }\n\n    config(): ControllerConfig {\n        return {\n            path: '/auth/login',\n            method: HttpMethod.POST,\n        };\n    }\n\n    async run(req: Request, res: Response): Promise<void> {\n        const loginQuery = LoginQuery.fromRequest(req);\n        const loginQueryResponse = await this.queryBus.ask<LoginQueryResponse>(loginQuery);\n        res.status(HttpStatus.OK).send(loginQueryResponse);\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4a7f343ec7cc9838232bfa1dffd8468a3768f67b"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_xtnszf67x = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_xtnszf67x();

var __awaiter =
/* istanbul ignore next */
(cov_xtnszf67x().s[0]++,
/* istanbul ignore next */
(cov_xtnszf67x().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_xtnszf67x().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_xtnszf67x().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_xtnszf67x().f[0]++;

  function adopt(value) {
    /* istanbul ignore next */
    cov_xtnszf67x().f[1]++;
    cov_xtnszf67x().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_xtnszf67x().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_xtnszf67x().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_xtnszf67x().f[2]++;
      cov_xtnszf67x().s[2]++;
      resolve(value);
    }));
  }

  /* istanbul ignore next */
  cov_xtnszf67x().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_xtnszf67x().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_xtnszf67x().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_xtnszf67x().f[3]++;

    function fulfilled(value) {
      /* istanbul ignore next */
      cov_xtnszf67x().f[4]++;
      cov_xtnszf67x().s[4]++;

      try {
        /* istanbul ignore next */
        cov_xtnszf67x().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_xtnszf67x().s[6]++;
        reject(e);
      }
    }

    function rejected(value) {
      /* istanbul ignore next */
      cov_xtnszf67x().f[5]++;
      cov_xtnszf67x().s[7]++;

      try {
        /* istanbul ignore next */
        cov_xtnszf67x().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_xtnszf67x().s[9]++;
        reject(e);
      }
    }

    function step(result) {
      /* istanbul ignore next */
      cov_xtnszf67x().f[6]++;
      cov_xtnszf67x().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_xtnszf67x().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_xtnszf67x().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }

    /* istanbul ignore next */
    cov_xtnszf67x().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_xtnszf67x().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_xtnszf67x().b[4][1]++, []))).next());
  });
}));

var __importDefault =
/* istanbul ignore next */
(cov_xtnszf67x().s[12]++,
/* istanbul ignore next */
(cov_xtnszf67x().b[5][0]++, this) &&
/* istanbul ignore next */
(cov_xtnszf67x().b[5][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_xtnszf67x().b[5][2]++, function (mod) {
  /* istanbul ignore next */
  cov_xtnszf67x().f[7]++;
  cov_xtnszf67x().s[13]++;
  return (
    /* istanbul ignore next */
    (cov_xtnszf67x().b[7][0]++, mod) &&
    /* istanbul ignore next */
    (cov_xtnszf67x().b[7][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_xtnszf67x().b[6][0]++, mod) :
    /* istanbul ignore next */
    (cov_xtnszf67x().b[6][1]++, {
      "default": mod
    })
  );
}));

/* istanbul ignore next */
cov_xtnszf67x().s[14]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const HttpMethod_1 =
/* istanbul ignore next */
(cov_xtnszf67x().s[15]++, require("@microk/common/http/HttpMethod"));
const HttpStatus_1 =
/* istanbul ignore next */
(cov_xtnszf67x().s[16]++, require("@microk/common/http/HttpStatus"));
const LoginQuery_1 =
/* istanbul ignore next */
(cov_xtnszf67x().s[17]++, __importDefault(require("../../application/login/LoginQuery")));

class LoginController {
  constructor(queryBus) {
    /* istanbul ignore next */
    cov_xtnszf67x().f[8]++;
    cov_xtnszf67x().s[18]++;
    this.queryBus = queryBus;
  }

  config() {
    /* istanbul ignore next */
    cov_xtnszf67x().f[9]++;
    cov_xtnszf67x().s[19]++;
    return {
      path: '/auth/login',
      method: HttpMethod_1.HttpMethod.POST
    };
  }

  run(req, res) {
    /* istanbul ignore next */
    cov_xtnszf67x().f[10]++;
    cov_xtnszf67x().s[20]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_xtnszf67x().f[11]++;
      const loginQuery =
      /* istanbul ignore next */
      (cov_xtnszf67x().s[21]++, LoginQuery_1.default.fromRequest(req));
      const loginQueryResponse =
      /* istanbul ignore next */
      (cov_xtnszf67x().s[22]++, yield this.queryBus.ask(loginQuery));

      /* istanbul ignore next */
      cov_xtnszf67x().s[23]++;
      res.status(HttpStatus_1.HttpStatus.OK).send(loginQueryResponse);
    });
  }

}

/* istanbul ignore next */
cov_xtnszf67x().s[24]++;
exports.default = LoginController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbW9kdWxlcy9hdXRoL2luZnJhc3RydWN0dXJlL2NvbnRyb2xsZXJzL0xvZ2luQ29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBREEsTUFBQSxZQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsZ0NBQUEsQ0FBQSxDQUFBO0FBQ0EsTUFBQSxZQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsZ0NBQUEsQ0FBQSxDQUFBO0FBTUEsTUFBQSxZQUFBO0FBQUE7QUFBQSwwQkFBQSxlQUFBLENBQUEsT0FBQSxDQUFBLG9DQUFBLENBQUEsQ0FBQSxDQUFBOztBQUdBLE1BQXFCLGVBQXJCLENBQW9DO0FBQ2hDLEVBQUEsV0FBQSxDQUNxQixRQURyQixFQUN1QztBQUFBO0FBQUE7QUFBQTtBQUFsQixTQUFBLFFBQUEsR0FBQSxRQUFBO0FBRXBCOztBQUVELEVBQUEsTUFBTSxHQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0YsV0FBTztBQUNILE1BQUEsSUFBSSxFQUFFLGFBREg7QUFFSCxNQUFBLE1BQU0sRUFBRSxZQUFBLENBQUEsVUFBQSxDQUFXO0FBRmhCLEtBQVA7QUFJSDs7QUFFSyxFQUFBLEdBQUcsQ0FBQyxHQUFELEVBQWUsR0FBZixFQUE0QjtBQUFBO0FBQUE7QUFBQTs7OztBQUNqQyxZQUFNLFVBQVU7QUFBQTtBQUFBLGdDQUFHLFlBQUEsQ0FBQSxPQUFBLENBQVcsV0FBWCxDQUF1QixHQUF2QixDQUFILENBQWhCO0FBQ0EsWUFBTSxrQkFBa0I7QUFBQTtBQUFBLGdDQUFHLE1BQU0sS0FBSyxRQUFMLENBQWMsR0FBZCxDQUFzQyxVQUF0QyxDQUFULENBQXhCOzs7O0FBQ0EsTUFBQSxHQUFHLENBQUMsTUFBSixDQUFXLFlBQUEsQ0FBQSxVQUFBLENBQVcsRUFBdEIsRUFBMEIsSUFBMUIsQ0FBK0Isa0JBQS9CO0FBQ0gsSztBQUFBOztBQWpCK0I7Ozs7QUFBcEMsT0FBQSxDQUFBLE9BQUEsR0FBQSxlQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cE1ldGhvZCB9IGZyb20gJ0BtaWNyb2svY29tbW9uL2h0dHAvSHR0cE1ldGhvZCc7XG5pbXBvcnQgeyBIdHRwU3RhdHVzIH0gZnJvbSAnQG1pY3Jvay9jb21tb24vaHR0cC9IdHRwU3RhdHVzJztcbmltcG9ydCBDb250cm9sbGVyIGZyb20gJ0BtaWNyb2svY29yZS9kb21haW4vaHR0cC9Db250cm9sbGVyJztcbmltcG9ydCB7IENvbnRyb2xsZXJDb25maWcgfSBmcm9tICdAbWljcm9rL2NvcmUvZG9tYWluL2h0dHAvQ29udHJvbGxlckNvbmZpZyc7XG5pbXBvcnQgeyBSZXF1ZXN0IH0gZnJvbSAnQG1pY3Jvay9jb3JlL2RvbWFpbi9odHRwL1JlcXVlc3QnO1xuaW1wb3J0IHsgUmVzcG9uc2UgfSBmcm9tICdAbWljcm9rL2NvcmUvZG9tYWluL2h0dHAvUmVzcG9uc2UnO1xuaW1wb3J0IFF1ZXJ5QnVzIGZyb20gJ0BtaWNyb2svY3Fycy9kb21haW4vcXVlcnkvUXVlcnlCdXMnO1xuaW1wb3J0IExvZ2luUXVlcnkgZnJvbSAnLi4vLi4vYXBwbGljYXRpb24vbG9naW4vTG9naW5RdWVyeSc7XG5pbXBvcnQgTG9naW5RdWVyeVJlc3BvbnNlIGZyb20gJy4uLy4uL2FwcGxpY2F0aW9uL2xvZ2luL0xvZ2luUXVlcnlSZXNwb25zZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExvZ2luQ29udHJvbGxlciBpbXBsZW1lbnRzIENvbnRyb2xsZXIge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IHF1ZXJ5QnVzOiBRdWVyeUJ1cyxcbiAgICApIHtcbiAgICB9XG5cbiAgICBjb25maWcoKTogQ29udHJvbGxlckNvbmZpZyB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBwYXRoOiAnL2F1dGgvbG9naW4nLFxuICAgICAgICAgICAgbWV0aG9kOiBIdHRwTWV0aG9kLlBPU1QsXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgYXN5bmMgcnVuKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICBjb25zdCBsb2dpblF1ZXJ5ID0gTG9naW5RdWVyeS5mcm9tUmVxdWVzdChyZXEpO1xuICAgICAgICBjb25zdCBsb2dpblF1ZXJ5UmVzcG9uc2UgPSBhd2FpdCB0aGlzLnF1ZXJ5QnVzLmFzazxMb2dpblF1ZXJ5UmVzcG9uc2U+KGxvZ2luUXVlcnkpO1xuICAgICAgICByZXMuc3RhdHVzKEh0dHBTdGF0dXMuT0spLnNlbmQobG9naW5RdWVyeVJlc3BvbnNlKTtcbiAgICB9XG59XG4iXX0=