{"version":3,"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/info/InfoService.ts"],"names":[],"mappingseAAA,CAAA,OAAA,CAAA,kCAAA,CAAA,CAAA,CAAA;AAEA,MAAA,OAAA;AAAA;AAAA,2BAAA,OAAA,CAAA,qBAAA,CAAA,CAAA;AACA,MAAA,0BAAA;AAAA;AAAA,2BAAA,eAAA,CAAA,OAAA,CAAA,uCAAA,CAAA,CAAA,CAAA;;AAGA,MAAqB,WAArB,CAAgC;AAC5B,EAAA,WAAA,CAA6B,QAA7B,EAA+C;AAAA;AAAA;AAAA;AAAlB,SAAA,QAAA,GAAA,QAAA;AAC5B;;AAEY,EAAA,MAAM,GAAA;AAAA;AAAA;AAAA;;;;;AACf;AACA,YAAM,CAAA,GAAA,OAAA,CAAA,KAAA,EAAM,IAAN,CAAN;;;;AAEA,WAAK,QAAL,CAAc,OAAd,CAAsB,CAAC,IAAI,0BAAA,CAAA,OAAJ,CAA6B,MAAA,CAAA,OAAA,CAAK,MAAL,EAA7B,CAAD,CAAtB;;;;AAEA,aAAO;AACH,QAAA,IAAI,EAAE,SADH;AAEH,QAAA,OAAO,EAAE;AAFN,OAAP;AAIH,K;AAAA;;AAd2B;;;;AAAhC,OAAA,CAAA,OAAA,GAAA,WAAA","sourcesContent":["import Uuid from '@microk/common/value-object/Uuid';\nimport EventBus from '@microk/event/domain/EventBus';\nimport { sleep } from '@microk/utils/Sleep';\nimport InfoRequestedDomainEvent from '../../domain/InfoRequestedDomainEvent';\nimport { InfoResponse } from './InfoResponse';\n\nexport default class InfoService {\n    constructor(private readonly eventBus: EventBus) {\n    }\n\n    public async invoke(): Promise<InfoResponse> {\n        // throw new NotFoundHttpError('Esto es un error tocho');\n        await sleep(1200)\n\n        this.eventBus.publish([new InfoRequestedDomainEvent(Uuid.create())])\n\n        return {\n            name: 'is-auth',\n            version: '1.0.0',\n        };\n    }\n}\n"]}