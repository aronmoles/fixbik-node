{"version":3,"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/infrastructure/controllers/LoginController.ts"],"names":[],"mappingsgCAAA,CAAA,CAAA;AACA,MAAA,YAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,gCAAA,CAAA,CAAA;AAMA,MAAA,YAAA;AAAA;AAAA,0BAAA,eAAA,CAAA,OAAA,CAAA,oCAAA,CAAA,CAAA,CAAA;;AAGA,MAAqB,eAArB,CAAoC;AAChC,EAAA,WAAA,CACqB,QADrB,EACuC;AAAA;AAAA;AAAA;AAAlB,SAAA,QAAA,GAAA,QAAA;AAEpB;;AAED,EAAA,MAAM,GAAA;AAAA;AAAA;AAAA;AACF,WAAO;AACH,MAAA,IAAI,EAAE,aADH;AAEH,MAAA,MAAM,EAAE,YAAA,CAAA,UAAA,CAAW;AAFhB,KAAP;AAIH;;AAEK,EAAA,GAAG,CAAC,GAAD,EAAe,GAAf,EAA4B;AAAA;AAAA;AAAA;;;;AACjC,YAAM,UAAU;AAAA;AAAA,gCAAG,YAAA,CAAA,OAAA,CAAW,WAAX,CAAuB,GAAvB,CAAH,CAAhB;AACA,YAAM,kBAAkB;AAAA;AAAA,gCAAG,MAAM,KAAK,QAAL,CAAc,GAAd,CAAsC,UAAtC,CAAT,CAAxB;;;;AACA,MAAA,GAAG,CAAC,MAAJ,CAAW,YAAA,CAAA,UAAA,CAAW,EAAtB,EAA0B,IAA1B,CAA+B,kBAA/B;AACH,K;AAAA;;AAjB+B;;;;AAApC,OAAA,CAAA,OAAA,GAAA,eAAA","sourcesContent":["import { HttpMethod } from '@microk/common/http/HttpMethod';\nimport { HttpStatus } from '@microk/common/http/HttpStatus';\nimport Controller from '@microk/core/domain/http/Controller';\nimport { ControllerConfig } from '@microk/core/domain/http/ControllerConfig';\nimport { Request } from '@microk/core/domain/http/Request';\nimport { Response } from '@microk/core/domain/http/Response';\nimport QueryBus from '@microk/cqrs/domain/query/QueryBus';\nimport LoginQuery from '../../application/login/LoginQuery';\nimport LoginQueryResponse from '../../application/login/LoginQueryResponse';\n\nexport default class LoginController implements Controller {\n    constructor(\n        private readonly queryBus: QueryBus,\n    ) {\n    }\n\n    config(): ControllerConfig {\n        return {\n            path: '/auth/login',\n            method: HttpMethod.POST,\n        };\n    }\n\n    async run(req: Request, res: Response): Promise<void> {\n        const loginQuery = LoginQuery.fromRequest(req);\n        const loginQueryResponse = await this.queryBus.ask<LoginQueryResponse>(loginQuery);\n        res.status(HttpStatus.OK).send(loginQueryResponse);\n    }\n}\n"]}