d2989781bfa4e144c5639d171b16acc0
"use strict";

/* istanbul ignore next */
function cov_gzuqsxndq() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/infrastructure/HttpErrorMiddleware.ts";
  var hash = "e119ced285220bd946473f934dd50176764eb503";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/infrastructure/HttpErrorMiddleware.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 6,
          column: 75
        }
      },
      "4": {
        start: {
          line: 7,
          column: 21
        },
        end: {
          line: 7,
          column: 60
        }
      },
      "5": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 29
        }
      },
      "6": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 53
        }
      },
      "7": {
        start: {
          line: 14,
          column: 27
        },
        end: {
          line: 14,
          column: 124
        }
      },
      "8": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 19,
          column: 11
        }
      },
      "9": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "10": {
        start: {
          line: 23,
          column: 0
        },
        end: {
          line: 23,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 24
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 33
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 14,
            column: 27
          },
          end: {
            line: 14,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 66
          },
          end: {
            line: 14,
            column: 76
          }
        }, {
          start: {
            line: 14,
            column: 79
          },
          end: {
            line: 14,
            column: 124
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/infrastructure/HttpErrorMiddleware.ts",
      mappings: ";;;;;AAAA,4EAAoD;AACpD,6DAA0D;AAM1D,MAAqB,mBAAmB;IACpC,YACqB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAChC,CAAC;IAEJ,KAAK,CAAC,KAAY,EAAE,GAAY,EAAE,GAAa,EAAE,IAAyB;QACtE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QAC7C,MAAM,UAAU,GAAG,KAAK,YAAY,mBAAS,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,uBAAU,CAAC,qBAAqB,CAAC;QAC9F,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC;YACxB,MAAM,EAAE;gBACJ,KAAK,EAAE,KAAK,CAAC,OAAO;aACvB;SACJ,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,CAAC;IAChB,CAAC;CACJ;AAfD,sCAeC",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/infrastructure/HttpErrorMiddleware.ts"],
      sourcesContent: ["import HttpError from '../../common/http/HttpError';\nimport { HttpStatus } from '../../common/http/HttpStatus';\nimport Logger from '../domain/Logger';\nimport { ErrorMiddleware, ErrorMiddlewareNext } from '../domain/ErrorMiddleware';\nimport { Request } from '../domain/http/Request';\nimport { Response } from '../domain/http/Response';\n\nexport default class HttpErrorMiddleware implements ErrorMiddleware {\n    constructor(\n        private readonly logger: Logger,\n    ) {}\n\n    apply(error: Error, req: Request, res: Response, next: ErrorMiddlewareNext): void {\n        this.logger.error(`Error: ${error.message}`);\n        const statusCode = error instanceof HttpError ? error.code : HttpStatus.INTERNAL_SERVER_ERROR;\n        res.status(statusCode).send({\n            errors: {\n                title: error.message,\n            },\n        });\n        next(error);\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e119ced285220bd946473f934dd50176764eb503"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_gzuqsxndq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_gzuqsxndq();

var __importDefault =
/* istanbul ignore next */
(cov_gzuqsxndq().s[0]++,
/* istanbul ignore next */
(cov_gzuqsxndq().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_gzuqsxndq().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_gzuqsxndq().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_gzuqsxndq().f[0]++;
  cov_gzuqsxndq().s[1]++;
  return (
    /* istanbul ignore next */
    (cov_gzuqsxndq().b[2][0]++, mod) &&
    /* istanbul ignore next */
    (cov_gzuqsxndq().b[2][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_gzuqsxndq().b[1][0]++, mod) :
    /* istanbul ignore next */
    (cov_gzuqsxndq().b[1][1]++, {
      "default": mod
    })
  );
}));

/* istanbul ignore next */
cov_gzuqsxndq().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const HttpError_1 =
/* istanbul ignore next */
(cov_gzuqsxndq().s[3]++, __importDefault(require("../../common/http/HttpError")));
const HttpStatus_1 =
/* istanbul ignore next */
(cov_gzuqsxndq().s[4]++, require("../../common/http/HttpStatus"));

class HttpErrorMiddleware {
  constructor(logger) {
    /* istanbul ignore next */
    cov_gzuqsxndq().f[1]++;
    cov_gzuqsxndq().s[5]++;
    this.logger = logger;
  }

  apply(error, req, res, next) {
    /* istanbul ignore next */
    cov_gzuqsxndq().f[2]++;
    cov_gzuqsxndq().s[6]++;
    this.logger.error(`Error: ${error.message}`);
    const statusCode =
    /* istanbul ignore next */
    (cov_gzuqsxndq().s[7]++, error instanceof HttpError_1.default ?
    /* istanbul ignore next */
    (cov_gzuqsxndq().b[3][0]++, error.code) :
    /* istanbul ignore next */
    (cov_gzuqsxndq().b[3][1]++, HttpStatus_1.HttpStatus.INTERNAL_SERVER_ERROR));

    /* istanbul ignore next */
    cov_gzuqsxndq().s[8]++;
    res.status(statusCode).send({
      errors: {
        title: error.message
      }
    });

    /* istanbul ignore next */
    cov_gzuqsxndq().s[9]++;
    next(error);
  }

}

/* istanbul ignore next */
cov_gzuqsxndq().s[10]++;
exports.default = HttpErrorMiddleware;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbWljcm9rL2NvcmUvaW5mcmFzdHJ1Y3R1cmUvSHR0cEVycm9yTWlkZGxld2FyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0JZOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWhCWixNQUFBLFdBQUE7QUFBQTtBQUFBLHlCQUFBLGVBQUEsQ0FBQSxPQUFBLENBQUEsNkJBQUEsQ0FBQSxDQUFBLENBQUE7QUFDQSxNQUFBLFlBQUE7QUFBQTtBQUFBLHlCQUFBLE9BQUEsQ0FBQSw4QkFBQSxDQUFBLENBQUE7O0FBTUEsTUFBcUIsbUJBQXJCLENBQXdDO0FBQ3BDLEVBQUEsV0FBQSxDQUNxQixNQURyQixFQUNtQztBQUFBO0FBQUE7QUFBQTtBQUFkLFNBQUEsTUFBQSxHQUFBLE1BQUE7QUFDakI7O0FBRUosRUFBQSxLQUFLLENBQUMsS0FBRCxFQUFlLEdBQWYsRUFBNkIsR0FBN0IsRUFBNEMsSUFBNUMsRUFBcUU7QUFBQTtBQUFBO0FBQUE7QUFDdEUsU0FBSyxNQUFMLENBQVksS0FBWixDQUFrQixVQUFVLEtBQUssQ0FBQyxPQUFPLEVBQXpDO0FBQ0EsVUFBTSxVQUFVO0FBQUE7QUFBQSw2QkFBRyxLQUFLLFlBQVksV0FBQSxDQUFBLE9BQWpCO0FBQUE7QUFBQSxnQ0FBNkIsS0FBSyxDQUFDLElBQW5DO0FBQUE7QUFBQSxnQ0FBMEMsWUFBQSxDQUFBLFVBQUEsQ0FBVyxxQkFBckQsQ0FBSCxDQUFoQjs7QUFGc0U7QUFBQTtBQUd0RSxJQUFBLEdBQUcsQ0FBQyxNQUFKLENBQVcsVUFBWCxFQUF1QixJQUF2QixDQUE0QjtBQUN4QixNQUFBLE1BQU0sRUFBRTtBQUNKLFFBQUEsS0FBSyxFQUFFLEtBQUssQ0FBQztBQURUO0FBRGdCLEtBQTVCOztBQUhzRTtBQUFBO0FBUXRFLElBQUEsSUFBSSxDQUFDLEtBQUQsQ0FBSjtBQUNIOztBQWRtQzs7OztBQUF4QyxPQUFBLENBQUEsT0FBQSxHQUFBLG1CQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEh0dHBFcnJvciBmcm9tICcuLi8uLi9jb21tb24vaHR0cC9IdHRwRXJyb3InO1xuaW1wb3J0IHsgSHR0cFN0YXR1cyB9IGZyb20gJy4uLy4uL2NvbW1vbi9odHRwL0h0dHBTdGF0dXMnO1xuaW1wb3J0IExvZ2dlciBmcm9tICcuLi9kb21haW4vTG9nZ2VyJztcbmltcG9ydCB7IEVycm9yTWlkZGxld2FyZSwgRXJyb3JNaWRkbGV3YXJlTmV4dCB9IGZyb20gJy4uL2RvbWFpbi9FcnJvck1pZGRsZXdhcmUnO1xuaW1wb3J0IHsgUmVxdWVzdCB9IGZyb20gJy4uL2RvbWFpbi9odHRwL1JlcXVlc3QnO1xuaW1wb3J0IHsgUmVzcG9uc2UgfSBmcm9tICcuLi9kb21haW4vaHR0cC9SZXNwb25zZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEh0dHBFcnJvck1pZGRsZXdhcmUgaW1wbGVtZW50cyBFcnJvck1pZGRsZXdhcmUge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IGxvZ2dlcjogTG9nZ2VyLFxuICAgICkge31cblxuICAgIGFwcGx5KGVycm9yOiBFcnJvciwgcmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlLCBuZXh0OiBFcnJvck1pZGRsZXdhcmVOZXh0KTogdm9pZCB7XG4gICAgICAgIHRoaXMubG9nZ2VyLmVycm9yKGBFcnJvcjogJHtlcnJvci5tZXNzYWdlfWApO1xuICAgICAgICBjb25zdCBzdGF0dXNDb2RlID0gZXJyb3IgaW5zdGFuY2VvZiBIdHRwRXJyb3IgPyBlcnJvci5jb2RlIDogSHR0cFN0YXR1cy5JTlRFUk5BTF9TRVJWRVJfRVJST1I7XG4gICAgICAgIHJlcy5zdGF0dXMoc3RhdHVzQ29kZSkuc2VuZCh7XG4gICAgICAgICAgICBlcnJvcnM6IHtcbiAgICAgICAgICAgICAgICB0aXRsZTogZXJyb3IubWVzc2FnZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICBuZXh0KGVycm9yKTtcbiAgICB9XG59XG4iXX0=