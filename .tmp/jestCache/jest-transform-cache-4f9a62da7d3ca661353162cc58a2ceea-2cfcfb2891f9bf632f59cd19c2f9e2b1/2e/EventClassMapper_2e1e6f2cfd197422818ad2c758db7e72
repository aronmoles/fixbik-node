4cf2b292a46533cd0ccf83c91ef3ee75
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventClassMapper = void 0;
class EventClassMapper {
    constructor(mapping) {
        this.mapping = mapping.reduce(this.eventsExtractor(), new Map());
    }
    eventsExtractor() {
        return (map, subscriber) => {
            subscriber.subscribedTo().forEach((domainEventClass) => {
                map.set(domainEventClass.EVENT_NAME.value(), domainEventClass);
            });
            return map;
        };
    }
    for(name) {
        const domainEvent = this.mapping.get(name);
        if (!domainEvent) {
            return undefined;
        }
        return domainEvent;
    }
}
exports.EventClassMapper = EventClassMapper;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3NyYy9taWNyb2svZXZlbnQvaW5mcmFzdHJ1Y3R1cmUvRXZlbnRDbGFzc01hcHBlci50cyIsIm1hcHBpbmdzIjoiOzs7QUFNQSxNQUFhLGdCQUFnQjtJQUd6QixZQUFZLE9BQXVDO1FBQy9DLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFLEVBQUUsSUFBSSxHQUFHLEVBQTRCLENBQUMsQ0FBQztJQUMvRixDQUFDO0lBRU8sZUFBZTtRQUNuQixPQUFPLENBQUMsR0FBWSxFQUFFLFVBQXdDLEVBQUUsRUFBRTtZQUM5RCxVQUFVLENBQUMsWUFBWSxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsZ0JBQWdCLEVBQUUsRUFBRTtnQkFDbkQsR0FBRyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztZQUNuRSxDQUFDLENBQUMsQ0FBQztZQUNILE9BQU8sR0FBRyxDQUFDO1FBQ2YsQ0FBQyxDQUFDO0lBQ04sQ0FBQztJQUVELEdBQUcsQ0FBQyxJQUFZO1FBQ1osTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFM0MsSUFBSSxDQUFDLFdBQVcsRUFBRTtZQUNkLE9BQU8sU0FBUyxDQUFDO1NBQ3BCO1FBRUQsT0FBTyxXQUFXLENBQUM7SUFDdkIsQ0FBQztDQUNKO0FBekJELDRDQXlCQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvY3VhdHJvb2NoZW50YS9NYWdpY1Nob3BwZXIvbWFnaWNzaG9wcGVyLW5vZGUvc3JjL21pY3Jvay9ldmVudC9pbmZyYXN0cnVjdHVyZS9FdmVudENsYXNzTWFwcGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9wdGlvbmFsIH0gZnJvbSAnLi4vLi4vY29tbW9uL09wdGlvbmFsJztcbmltcG9ydCBEb21haW5FdmVudCwgeyBEb21haW5FdmVudENsYXNzIH0gZnJvbSAnLi4vZG9tYWluL0RvbWFpbkV2ZW50JztcbmltcG9ydCBFdmVudFN1YnNjcmliZXIgZnJvbSAnLi4vZG9tYWluL0V2ZW50U3Vic2NyaWJlcic7XG5cbnR5cGUgTWFwcGluZyA9IE1hcDxzdHJpbmcsIERvbWFpbkV2ZW50Q2xhc3M+O1xuXG5leHBvcnQgY2xhc3MgRXZlbnRDbGFzc01hcHBlciB7XG4gICAgcHJpdmF0ZSBtYXBwaW5nOiBNYXBwaW5nO1xuXG4gICAgY29uc3RydWN0b3IobWFwcGluZzogRXZlbnRTdWJzY3JpYmVyPERvbWFpbkV2ZW50PltdKSB7XG4gICAgICAgIHRoaXMubWFwcGluZyA9IG1hcHBpbmcucmVkdWNlKHRoaXMuZXZlbnRzRXh0cmFjdG9yKCksIG5ldyBNYXA8c3RyaW5nLCBEb21haW5FdmVudENsYXNzPigpKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGV2ZW50c0V4dHJhY3RvcigpIHtcbiAgICAgICAgcmV0dXJuIChtYXA6IE1hcHBpbmcsIHN1YnNjcmliZXI6IEV2ZW50U3Vic2NyaWJlcjxEb21haW5FdmVudD4pID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXIuc3Vic2NyaWJlZFRvKCkuZm9yRWFjaCgoZG9tYWluRXZlbnRDbGFzcykgPT4ge1xuICAgICAgICAgICAgICAgIG1hcC5zZXQoZG9tYWluRXZlbnRDbGFzcy5FVkVOVF9OQU1FLnZhbHVlKCksIGRvbWFpbkV2ZW50Q2xhc3MpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gbWFwO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIGZvcihuYW1lOiBzdHJpbmcpOiBPcHRpb25hbDxEb21haW5FdmVudENsYXNzPiB7XG4gICAgICAgIGNvbnN0IGRvbWFpbkV2ZW50ID0gdGhpcy5tYXBwaW5nLmdldChuYW1lKTtcblxuICAgICAgICBpZiAoIWRvbWFpbkV2ZW50KSB7XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGRvbWFpbkV2ZW50O1xuICAgIH1cbn1cbiJdLCJ2ZXJzaW9uIjozfQ==