ea054934a96016b4cb3652131f8476df
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Container_1 = __importDefault(require("../../../../../src/app/Container"));
const AuthUserMother_1 = __importDefault(require("../../domain/AuthUserMother"));
const repository = Container_1.default.get('Auth.domain.AuthTokenRepository');
describe('AuthTokenRepository', () => {
    describe('#generate', () => {
        it('should generate a new auth token', () => __awaiter(void 0, void 0, void 0, function* () {
            const authUser = AuthUserMother_1.default.random();
            const authToken = yield repository.generate(authUser);
            expect(authToken).toBeDefined();
        }));
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3Rlc3RzL21vZHVsZXMvYXV0aC9pbmZyYXN0cnVjdHVyZS9nZW5lcmF0b3JzL0p3dEF1dGhUb2tlbkdlbmVyYXRvci50ZXN0LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEsaUZBQXlEO0FBRXpELGlGQUF5RDtBQUV6RCxNQUFNLFVBQVUsR0FBd0IsbUJBQVMsQ0FBQyxHQUFHLENBQUMsaUNBQWlDLENBQUMsQ0FBQztBQUV6RixRQUFRLENBQUMscUJBQXFCLEVBQUUsR0FBRyxFQUFFO0lBQ2pDLFFBQVEsQ0FBQyxXQUFXLEVBQUUsR0FBRyxFQUFFO1FBQ3ZCLEVBQUUsQ0FBQyxrQ0FBa0MsRUFBRSxHQUFTLEVBQUU7WUFDOUMsTUFBTSxRQUFRLEdBQUcsd0JBQWMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUV6QyxNQUFNLFNBQVMsR0FBRyxNQUFNLFVBQVUsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7WUFFdEQsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3BDLENBQUMsQ0FBQSxDQUFDLENBQUM7SUFDUCxDQUFDLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS90ZXN0cy9tb2R1bGVzL2F1dGgvaW5mcmFzdHJ1Y3R1cmUvZ2VuZXJhdG9ycy9Kd3RBdXRoVG9rZW5HZW5lcmF0b3IudGVzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29udGFpbmVyIGZyb20gJy4uLy4uLy4uLy4uLy4uL3NyYy9hcHAvQ29udGFpbmVyJztcbmltcG9ydCBBdXRoVG9rZW5SZXBvc2l0b3J5IGZyb20gJy4uLy4uLy4uLy4uLy4uL3NyYy9tb2R1bGVzL2F1dGgvZG9tYWluL0F1dGhUb2tlblJlcG9zaXRvcnknO1xuaW1wb3J0IEF1dGhVc2VyTW90aGVyIGZyb20gJy4uLy4uL2RvbWFpbi9BdXRoVXNlck1vdGhlcic7XG5cbmNvbnN0IHJlcG9zaXRvcnk6IEF1dGhUb2tlblJlcG9zaXRvcnkgPSBDb250YWluZXIuZ2V0KCdBdXRoLmRvbWFpbi5BdXRoVG9rZW5SZXBvc2l0b3J5Jyk7XG5cbmRlc2NyaWJlKCdBdXRoVG9rZW5SZXBvc2l0b3J5JywgKCkgPT4ge1xuICAgIGRlc2NyaWJlKCcjZ2VuZXJhdGUnLCAoKSA9PiB7XG4gICAgICAgIGl0KCdzaG91bGQgZ2VuZXJhdGUgYSBuZXcgYXV0aCB0b2tlbicsIGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGF1dGhVc2VyID0gQXV0aFVzZXJNb3RoZXIucmFuZG9tKCk7XG5cbiAgICAgICAgICAgIGNvbnN0IGF1dGhUb2tlbiA9IGF3YWl0IHJlcG9zaXRvcnkuZ2VuZXJhdGUoYXV0aFVzZXIpO1xuXG4gICAgICAgICAgICBleHBlY3QoYXV0aFRva2VuKS50b0JlRGVmaW5lZCgpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn0pO1xuIl0sInZlcnNpb24iOjN9