{"version":3,"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/infrastructure/InfoController.ts"],"names":[],"mappingsgCAAA,CAAA,CAAA;AACA,MAAA,YAAA;AAAA;AAAA,2BAAA,OAAA,CAAA,gCAAA,CAAA,CAAA;AAMA,MAAA,WAAA;AAAA;AAAA,2BAAA,eAAA,CAAA,OAAA,CAAA,+BAAA,CAAA,CAAA,CAAA;;AAGA,MAAqB,cAArB,CAAmC;AAC/B,EAAA,WAAA,CACoB,QADpB,EACsC;AAAA;AAAA;AAAA;AAAlB,SAAA,QAAA,GAAA,QAAA;AAEnB;;AAED,EAAA,MAAM,GAAA;AAAA;AAAA;AAAA;AACF,WAAO;AACH,MAAA,MAAM,EAAE,YAAA,CAAA,UAAA,CAAW,GADhB;AAEH,MAAA,IAAI,EAAE;AAFH,KAAP;AAIH;;AAEK,EAAA,GAAG,CAAC,GAAD,EAAe,GAAf,EAA4B;AAAA;AAAA;AAAA;;;;AACjC,YAAM,IAAI;AAAA;AAAA,iCAAG,MAAM,KAAK,QAAL,CAAc,GAAd,CAAgC,IAAI,WAAA,CAAA,OAAJ,EAAhC,CAAT,CAAV;;;;AACA,MAAA,GAAG,CAAC,MAAJ,CAAW,YAAA,CAAA,UAAA,CAAW,EAAtB,EAA0B,IAA1B,CAA+B,IAA/B;AACH,K;AAAA;;AAhB8B;;;;AAAnC,OAAA,CAAA,OAAA,GAAA,cAAA","sourcesContent":["import { HttpMethod } from '@microk/common/http/HttpMethod';\nimport { HttpStatus } from '@microk/common/http/HttpStatus';\nimport Controller from '@microk/core/domain/http/Controller';\nimport { ControllerConfig } from '@microk/core/domain/http/ControllerConfig';\nimport { Request } from '@microk/core/domain/http/Request';\nimport { Response } from '@microk/core/domain/http/Response';\nimport QueryBus from '@microk/cqrs/domain/query/QueryBus';\nimport InfoQuery from '../application/info/InfoQuery';\nimport { InfoResponse } from '../application/info/InfoResponse';\n\nexport default class InfoController implements Controller {\n    constructor(\n       private readonly queryBus: QueryBus,\n    ) {\n    }\n\n    config(): ControllerConfig {\n        return {\n            method: HttpMethod.GET,\n            path: '/',\n        };\n    }\n\n    async run(req: Request, res: Response): Promise<void> {\n        const data = await this.queryBus.ask<InfoResponse>(new InfoQuery());\n        res.status(HttpStatus.OK).send(data);\n    }\n}\n"]}