dd1c87ffee78c72b1d96124f81ed5f80
"use strict";

/* istanbul ignore next */
function cov_1a6m8u6ptq() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/EmailValueObject.ts";
  var hash = "1b0fe6a9092efd1bdb6e69f62004b01ae74eb861";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/EmailValueObject.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 28
        },
        end: {
          line: 6,
          column: 84
        }
      },
      "4": {
        start: {
          line: 7,
          column: 28
        },
        end: {
          line: 7,
          column: 75
        }
      },
      "5": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 21
        }
      },
      "6": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 39
        }
      },
      "7": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 16,
          column: 9
        }
      },
      "8": {
        start: {
          line: 15,
          column: 12
        },
        end: {
          line: 15,
          column: 57
        }
      },
      "9": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 23,
          column: 161
        }
      },
      "10": {
        start: {
          line: 26,
          column: 0
        },
        end: {
          line: 26,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 23
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 30
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 13
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 24
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 18
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 16,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 8
          },
          end: {
            line: 16,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/EmailValueObject.ts",
      mappings: ";;;;;AAAA,qFAAkF;AAClF,4EAAoD;AAEpD,MAAqB,gBAAiB,SAAQ,qCAAiB;IAC3D,YAAY,KAAa;QACrB,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAEO,kBAAkB,CAAC,KAAa;QACpC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;YAC3B,MAAM,IAAI,2BAAiB,CAAC,KAAK,CAAC,CAAA;SACrC;IACL,CAAC;IAEO,YAAY,CAAC,KAAa;QAC9B,OAAO,MAAM,CAAC,KAAK,CAAC;aACf,WAAW,EAAE;aACb,KAAK;QACF,8DAA8D;QAC9D,uJAAuJ,CAC1J,CAAC;IACV,CAAC;CACJ;AApBD,mCAoBC",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/EmailValueObject.ts"],
      sourcesContent: ["import { StringValueObject } from '@microk/common/value-object/StringValueObject';\nimport InvalidEmailError from './InvalidEmailError';\n\nexport default class EmailValueObject extends StringValueObject {\n    constructor(email: string) {\n        super(email);\n        this.ensureIsValidEmail(email);\n    }\n\n    private ensureIsValidEmail(email: string) {\n        if (!this.isValidEmail(email)) {\n            throw new InvalidEmailError(email)\n        }\n    }\n\n    private isValidEmail(email: string) {\n        return String(email)\n            .toLowerCase()\n            .match(\n                // eslint-disable-next-line max-len,prefer-named-capture-group\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            );\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1b0fe6a9092efd1bdb6e69f62004b01ae74eb861"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1a6m8u6ptq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1a6m8u6ptq();

var __importDefault =
/* istanbul ignore next */
(cov_1a6m8u6ptq().s[0]++,
/* istanbul ignore next */
(cov_1a6m8u6ptq().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1a6m8u6ptq().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1a6m8u6ptq().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1a6m8u6ptq().f[0]++;
  cov_1a6m8u6ptq().s[1]++;
  return (
    /* istanbul ignore next */
    (cov_1a6m8u6ptq().b[2][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1a6m8u6ptq().b[2][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_1a6m8u6ptq().b[1][0]++, mod) :
    /* istanbul ignore next */
    (cov_1a6m8u6ptq().b[1][1]++, {
      "default": mod
    })
  );
}));

/* istanbul ignore next */
cov_1a6m8u6ptq().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const StringValueObject_1 =
/* istanbul ignore next */
(cov_1a6m8u6ptq().s[3]++, require("@microk/common/value-object/StringValueObject"));
const InvalidEmailError_1 =
/* istanbul ignore next */
(cov_1a6m8u6ptq().s[4]++, __importDefault(require("./InvalidEmailError")));

class EmailValueObject extends
/* istanbul ignore next */
(StringValueObject_1.StringValueObject) {
  constructor(email) {
    /* istanbul ignore next */
    cov_1a6m8u6ptq().f[1]++;
    cov_1a6m8u6ptq().s[5]++;
    super(email);

    /* istanbul ignore next */
    cov_1a6m8u6ptq().s[6]++;
    this.ensureIsValidEmail(email);
  }

  ensureIsValidEmail(email) {
    /* istanbul ignore next */
    cov_1a6m8u6ptq().f[2]++;
    cov_1a6m8u6ptq().s[7]++;

    if (!this.isValidEmail(email)) {
      /* istanbul ignore next */
      cov_1a6m8u6ptq().b[3][0]++;
      cov_1a6m8u6ptq().s[8]++;
      throw new InvalidEmailError_1.default(email);
    } else
    /* istanbul ignore next */
    {
      cov_1a6m8u6ptq().b[3][1]++;
    }
  }

  isValidEmail(email) {
    /* istanbul ignore next */
    cov_1a6m8u6ptq().f[3]++;
    cov_1a6m8u6ptq().s[9]++;
    return String(email).toLowerCase().match( // eslint-disable-next-line max-len,prefer-named-capture-group
    /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/);
  }

}

/* istanbul ignore next */
cov_1a6m8u6ptq().s[10]++;
exports.default = EmailValueObject;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbWljcm9rL2NvbW1vbi92YWx1ZS1vYmplY3QvRW1haWxWYWx1ZU9iamVjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVlTOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVpULE1BQUEsbUJBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSwrQ0FBQSxDQUFBLENBQUE7QUFDQSxNQUFBLG1CQUFBO0FBQUE7QUFBQSwwQkFBQSxlQUFBLENBQUEsT0FBQSxDQUFBLHFCQUFBLENBQUEsQ0FBQSxDQUFBOztBQUVBLE1BQXFCLGdCQUFyQjtBQUFBO0FBQUEsQ0FBOEMsbUJBQUEsQ0FBQSxpQkFBOUMsRUFBK0Q7QUFDM0QsRUFBQSxXQUFBLENBQVksS0FBWixFQUF5QjtBQUFBO0FBQUE7QUFBQTtBQUNyQixVQUFNLEtBQU47O0FBRHFCO0FBQUE7QUFFckIsU0FBSyxrQkFBTCxDQUF3QixLQUF4QjtBQUNIOztBQUVPLEVBQUEsa0JBQWtCLENBQUMsS0FBRCxFQUFjO0FBQUE7QUFBQTtBQUFBOztBQUNwQyxRQUFJLENBQUMsS0FBSyxZQUFMLENBQWtCLEtBQWxCLENBQUwsRUFBK0I7QUFBQTtBQUFBO0FBQUE7QUFDM0IsWUFBTSxJQUFJLG1CQUFBLENBQUEsT0FBSixDQUFzQixLQUF0QixDQUFOO0FBQ0gsS0FGRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBR0g7O0FBRU8sRUFBQSxZQUFZLENBQUMsS0FBRCxFQUFjO0FBQUE7QUFBQTtBQUFBO0FBQzlCLFdBQU8sTUFBTSxDQUFDLEtBQUQsQ0FBTixDQUNGLFdBREUsR0FFRixLQUZFLEVBR0M7QUFDQSwySkFKRCxDQUFQO0FBTUg7O0FBbkIwRDs7OztBQUEvRCxPQUFBLENBQUEsT0FBQSxHQUFBLGdCQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RyaW5nVmFsdWVPYmplY3QgfSBmcm9tICdAbWljcm9rL2NvbW1vbi92YWx1ZS1vYmplY3QvU3RyaW5nVmFsdWVPYmplY3QnO1xuaW1wb3J0IEludmFsaWRFbWFpbEVycm9yIGZyb20gJy4vSW52YWxpZEVtYWlsRXJyb3InO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFbWFpbFZhbHVlT2JqZWN0IGV4dGVuZHMgU3RyaW5nVmFsdWVPYmplY3Qge1xuICAgIGNvbnN0cnVjdG9yKGVtYWlsOiBzdHJpbmcpIHtcbiAgICAgICAgc3VwZXIoZW1haWwpO1xuICAgICAgICB0aGlzLmVuc3VyZUlzVmFsaWRFbWFpbChlbWFpbCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBlbnN1cmVJc1ZhbGlkRW1haWwoZW1haWw6IHN0cmluZykge1xuICAgICAgICBpZiAoIXRoaXMuaXNWYWxpZEVtYWlsKGVtYWlsKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEludmFsaWRFbWFpbEVycm9yKGVtYWlsKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBpc1ZhbGlkRW1haWwoZW1haWw6IHN0cmluZykge1xuICAgICAgICByZXR1cm4gU3RyaW5nKGVtYWlsKVxuICAgICAgICAgICAgLnRvTG93ZXJDYXNlKClcbiAgICAgICAgICAgIC5tYXRjaChcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbWF4LWxlbixwcmVmZXItbmFtZWQtY2FwdHVyZS1ncm91cFxuICAgICAgICAgICAgICAgIC9eKChbXjw+KClbXFxdXFxcXC4sOzpcXHNAXCJdKyhcXC5bXjw+KClbXFxdXFxcXC4sOzpcXHNAXCJdKykqKXwoXCIuK1wiKSlAKChcXFtbMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM31cXC5bMC05XXsxLDN9XFxdKXwoKFthLXpBLVpcXC0wLTldK1xcLikrW2EtekEtWl17Mix9KSkkL1xuICAgICAgICAgICAgKTtcbiAgICB9XG59XG4iXX0=