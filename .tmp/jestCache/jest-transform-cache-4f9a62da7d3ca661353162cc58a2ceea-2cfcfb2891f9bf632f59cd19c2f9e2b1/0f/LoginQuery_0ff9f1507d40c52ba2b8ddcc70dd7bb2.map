{"version":3,"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/application/login/LoginQuery.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkByB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlBzB,MAAA,WAAA;AAAA;AAAA,yBAAA,eAAA,CAAA,OAAA,CAAA,kCAAA,CAAA,CAAA,CAAA;AACA,MAAA,aAAA;AAAA;AAAA,yBAAA,OAAA,CAAA,oCAAA,CAAA,CAAA;AACA,MAAA,oBAAA;AAAA;AAAA,yBAAA,eAAA,CAAA,OAAA,CAAA,gDAAA,CAAA,CAAA,CAAA;AAEA,MAAA,OAAA;AAAA;AAAA,yBAAA,eAAA,CAAA,OAAA,CAAA,iCAAA,CAAA,CAAA,CAAA;AACA,MAAA,eAAA;AAAA;AAAA,yBAAA,eAAA,CAAA,OAAA,CAAA,4BAAA,CAAA,CAAA,CAAA;AACA,MAAA,kBAAA;AAAA;AAAA,yBAAA,eAAA,CAAA,OAAA,CAAA,+BAAA,CAAA,CAAA,CAAA;;AAEA,MAAqB,UAArB;AAAA;AAAA,CAAwC,OAAA,CAAA,OAAxC,EAA6C;AAQzC,EAAA,WAAA,CACqB,MADrB,EAEqB,SAFrB,EAEgD;AAAA;AAAA;AAAA;AAE5C,UACI,WAAA,CAAA,OAAA,CAAU,MAAV,EADJ,EAEI,oBAAA,CAAA,OAAA,CAAmB,MAAnB,CAA0B,OAA1B,EAAmC,MAAnC,EAA2C,aAAA,CAAA,WAAA,CAAY,KAAvD,CAFJ;;AAF4C;AAAA;AAD3B,SAAA,MAAA,GAAA,MAAA;;AAC2B;AAAA;AAA3B,SAAA,SAAA,GAAA,SAAA;AAMpB;;AAfiB,SAAX,WAAW,CAAC,GAAD,EAAa;AAAA;AAAA;AAAA;AAC3B,WAAO,IAAI,UAAJ,CACH,IAAI,eAAA,CAAA,OAAJ,CAAkB,GAAG,CAAC,IAAJ,CAAS,KAA3B,CADG,EAEH,IAAI,kBAAA,CAAA,OAAJ,CAAqB,GAAG,CAAC,IAAJ,CAAS,QAA9B,CAFG,CAAP;AAIH;;AAYQ,MAAL,KAAK,GAAA;AAAA;AAAA;AAAA;AACL,WAAO,KAAK,MAAZ;AACH;;AAEW,MAAR,QAAQ,GAAA;AAAA;AAAA;AAAA;AACR,WAAO,KAAK,SAAZ;AACH;;AAxBwC;;;;AAA7C,OAAA,CAAA,OAAA,GAAA,UAAA","sourcesContent":["import MessageId from '@microk/common/message/MessageId';\nimport { MessageType } from '@microk/common/message/MessageType';\nimport MessageNameFactory from '@microk/common/value-object/MessageNameFactory';\nimport { Request } from '@microk/core/domain/http/Request';\nimport Query from '@microk/cqrs/domain/query/Query';\nimport AuthUserEmail from '../../domain/AuthUserEmail';\nimport AuthUserPassword from '../../domain/AuthUserPassword';\n\nexport default class LoginQuery extends Query {\n    static fromRequest(req: Request): LoginQuery {\n        return new LoginQuery(\n            new AuthUserEmail(req.body.email),\n            new AuthUserPassword(req.body.password),\n        )\n    }\n\n    constructor(\n        private readonly _email: AuthUserEmail,\n        private readonly _password: AuthUserPassword,\n    ) {\n        super(\n            MessageId.create(),\n            MessageNameFactory.create('login', 'auth', MessageType.QUERY),\n        );\n    }\n\n    get email(): AuthUserEmail {\n        return this._email;\n    }\n\n    get password(): AuthUserPassword {\n        return this._password;\n    }\n}\n"]}