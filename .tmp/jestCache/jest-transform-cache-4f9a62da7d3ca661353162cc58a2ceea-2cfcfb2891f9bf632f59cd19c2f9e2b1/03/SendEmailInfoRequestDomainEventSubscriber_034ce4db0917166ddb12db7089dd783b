ed4c07004f4daf6280e29d0090301996
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const EventSubscriber_1 = __importDefault(require("@microk/event/domain/EventSubscriber"));
const InfoRequestedDomainEvent_1 = __importDefault(require("../../domain/InfoRequestedDomainEvent"));
class SendEmailInfoRequestDomainEventSubscriber extends EventSubscriber_1.default {
    constructor(sendEmailService, commandBus) {
        super(InfoRequestedDomainEvent_1.default);
        this.sendEmailService = sendEmailService;
        this.commandBus = commandBus;
    }
    dispatch(event) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.sendEmailService.invoke();
        });
    }
}
exports.default = SendEmailInfoRequestDomainEventSubscriber;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3NyYy9tb2R1bGVzL2luZm8vYXBwbGljYXRpb24vc2VuZC1lbWFpbC9TZW5kRW1haWxJbmZvUmVxdWVzdERvbWFpbkV2ZW50U3Vic2NyaWJlci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUNBLDJGQUFtRTtBQUNuRSxxR0FBNkU7QUFHN0UsTUFBcUIseUNBQTBDLFNBQVEseUJBQXlDO0lBQzVHLFlBQ3FCLGdCQUFrQyxFQUNsQyxVQUFzQjtRQUV2QyxLQUFLLENBQUMsa0NBQXdCLENBQUMsQ0FBQztRQUhmLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFDbEMsZUFBVSxHQUFWLFVBQVUsQ0FBWTtJQUczQyxDQUFDO0lBRUssUUFBUSxDQUFDLEtBQStCOztZQUMxQyxNQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUN6QyxDQUFDO0tBQUE7Q0FDSjtBQVhELDREQVdDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbW9kdWxlcy9pbmZvL2FwcGxpY2F0aW9uL3NlbmQtZW1haWwvU2VuZEVtYWlsSW5mb1JlcXVlc3REb21haW5FdmVudFN1YnNjcmliZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbWFuZEJ1cyB9IGZyb20gJ0BtaWNyb2svY3Fycy9kb21haW4vY29tbWFuZC9Db21tYW5kQnVzJztcbmltcG9ydCBFdmVudFN1YnNjcmliZXIgZnJvbSAnQG1pY3Jvay9ldmVudC9kb21haW4vRXZlbnRTdWJzY3JpYmVyJztcbmltcG9ydCBJbmZvUmVxdWVzdGVkRG9tYWluRXZlbnQgZnJvbSAnLi4vLi4vZG9tYWluL0luZm9SZXF1ZXN0ZWREb21haW5FdmVudCc7XG5pbXBvcnQgU2VuZEVtYWlsU2VydmljZSBmcm9tICcuL1NlbmRFbWFpbFNlcnZpY2UnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZW5kRW1haWxJbmZvUmVxdWVzdERvbWFpbkV2ZW50U3Vic2NyaWJlciBleHRlbmRzIEV2ZW50U3Vic2NyaWJlcjxJbmZvUmVxdWVzdGVkRG9tYWluRXZlbnQ+IHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBzZW5kRW1haWxTZXJ2aWNlOiBTZW5kRW1haWxTZXJ2aWNlLFxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IGNvbW1hbmRCdXM6IENvbW1hbmRCdXMsXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKEluZm9SZXF1ZXN0ZWREb21haW5FdmVudCk7XG4gICAgfVxuXG4gICAgYXN5bmMgZGlzcGF0Y2goZXZlbnQ6IEluZm9SZXF1ZXN0ZWREb21haW5FdmVudCk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICBhd2FpdCB0aGlzLnNlbmRFbWFpbFNlcnZpY2UuaW52b2tlKCk7XG4gICAgfVxufVxuIl0sInZlcnNpb24iOjN9