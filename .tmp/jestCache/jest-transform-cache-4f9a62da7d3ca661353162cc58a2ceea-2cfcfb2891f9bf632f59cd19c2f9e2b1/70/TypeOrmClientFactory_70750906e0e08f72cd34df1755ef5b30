121f3d39e0315ceddf04584f039e06c9
"use strict";

/* istanbul ignore next */
function cov_746c5727s() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/persistence/infrastructure/typeorm/TypeOrmClientFactory.ts";
  var hash = "0af46e6e7520efd207ac3ea636e539f1cac14b2d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/persistence/infrastructure/typeorm/TypeOrmClientFactory.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "14": {
        start: {
          line: 13,
          column: 18
        },
        end: {
          line: 13,
          column: 36
        }
      },
      "15": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 42,
          column: 11
        }
      },
      "16": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 41,
          column: 13
        }
      },
      "17": {
        start: {
          line: 18,
          column: 35
        },
        end: {
          line: 34,
          column: 18
        }
      },
      "18": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 34
        }
      },
      "19": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 44
        }
      },
      "20": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 54
        }
      },
      "21": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 45,
          column: 52
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 32
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 15
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 16,
            column: 47
          },
          end: {
            line: 16,
            column: 48
          }
        },
        loc: {
          start: {
            line: 16,
            column: 60
          },
          end: {
            line: 42,
            column: 9
          }
        },
        line: 16
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/persistence/infrastructure/typeorm/TypeOrmClientFactory.ts",
      mappings: ";;;;;;;;;;;;AAAA,qCAAsE;AAGtE,MAAa,oBAAoB;IAC7B,MAAM,CAAO,YAAY,CAAC,MAAqB;;YAC3C,IAAI;gBACA,MAAM,UAAU,GAAG,MAAM,IAAA,0BAAgB,EAAC;oBACtC,IAAI,EAAE,OAAO;oBACb,IAAI,EAAE,MAAM,CAAC,IAAI;oBACjB,IAAI,EAAE,MAAM,CAAC,IAAI;oBACjB,QAAQ,EAAE,MAAM,CAAC,QAAQ;oBACzB,QAAQ,EAAE,MAAM,CAAC,QAAQ;oBACzB,QAAQ,EAAE,MAAM,CAAC,QAAQ;oBACzB,oCAAoC;oBACpC,QAAQ,EAAE,CAAC,GAAG,SAAS,yEAAyE,CAAC;oBACjG,WAAW,EAAE,KAAK;oBAClB,OAAO,EAAE,KAAK;oBACd,mBAAmB,EAAE,YAAY;oBACjC,UAAU,EAAE,CAAC,gBAAgB,CAAC;oBAC9B,GAAG,EAAE;wBACD,aAAa,EAAE,WAAW;qBAC7B;iBACJ,CAAC,CAAC;gBAEH,OAAO,UAAU,CAAC;aACrB;YAAC,OAAO,KAAK,EAAE;gBACZ,sCAAsC;gBACtC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;gBAC5B,OAAO,IAAA,uBAAa,GAAE,CAAC;aAC1B;QACL,CAAC;KAAA;CACJ;AA5BD,oDA4BC",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/persistence/infrastructure/typeorm/TypeOrmClientFactory.ts"],
      sourcesContent: ["import { Connection, createConnection, getConnection } from 'typeorm';\nimport { TypeOrmConfig } from './TypeOrmConfig';\n\nexport class TypeOrmClientFactory {\n    static async createClient(config: TypeOrmConfig): Promise<Connection> {\n        try {\n            const connection = await createConnection({\n                type: 'mysql',\n                host: config.host,\n                port: config.port,\n                username: config.username,\n                password: config.password,\n                database: config.database,\n                // eslint-disable-next-line no-undef\n                entities: [`${__dirname}/../../../../../src/**/**/infrastructure/persistence/typeorm/*{.js,.ts}`],\n                synchronize: false,\n                logging: false,\n                migrationsTableName: 'migrations',\n                migrations: ['migration/*.js'],\n                cli: {\n                    migrationsDir: 'migration',\n                },\n            });\n\n            return connection;\n        } catch (error) {\n            // eslint-disable-next-line no-console\n            console.log('error', error);\n            return getConnection();\n        }\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0af46e6e7520efd207ac3ea636e539f1cac14b2d"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_746c5727s = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_746c5727s();

var __awaiter =
/* istanbul ignore next */
(cov_746c5727s().s[0]++,
/* istanbul ignore next */
(cov_746c5727s().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_746c5727s().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_746c5727s().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_746c5727s().f[0]++;

  function adopt(value) {
    /* istanbul ignore next */
    cov_746c5727s().f[1]++;
    cov_746c5727s().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_746c5727s().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_746c5727s().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_746c5727s().f[2]++;
      cov_746c5727s().s[2]++;
      resolve(value);
    }));
  }

  /* istanbul ignore next */
  cov_746c5727s().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_746c5727s().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_746c5727s().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_746c5727s().f[3]++;

    function fulfilled(value) {
      /* istanbul ignore next */
      cov_746c5727s().f[4]++;
      cov_746c5727s().s[4]++;

      try {
        /* istanbul ignore next */
        cov_746c5727s().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_746c5727s().s[6]++;
        reject(e);
      }
    }

    function rejected(value) {
      /* istanbul ignore next */
      cov_746c5727s().f[5]++;
      cov_746c5727s().s[7]++;

      try {
        /* istanbul ignore next */
        cov_746c5727s().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_746c5727s().s[9]++;
        reject(e);
      }
    }

    function step(result) {
      /* istanbul ignore next */
      cov_746c5727s().f[6]++;
      cov_746c5727s().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_746c5727s().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_746c5727s().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }

    /* istanbul ignore next */
    cov_746c5727s().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_746c5727s().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_746c5727s().b[4][1]++, []))).next());
  });
}));

/* istanbul ignore next */
cov_746c5727s().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_746c5727s().s[13]++;
exports.TypeOrmClientFactory = void 0;
const typeorm_1 =
/* istanbul ignore next */
(cov_746c5727s().s[14]++, require("typeorm"));

class TypeOrmClientFactory {
  static createClient(config) {
    /* istanbul ignore next */
    cov_746c5727s().f[7]++;
    cov_746c5727s().s[15]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_746c5727s().f[8]++;
      cov_746c5727s().s[16]++;

      try {
        const connection =
        /* istanbul ignore next */
        (cov_746c5727s().s[17]++, yield (0, typeorm_1.createConnection)({
          type: 'mysql',
          host: config.host,
          port: config.port,
          username: config.username,
          password: config.password,
          database: config.database,
          // eslint-disable-next-line no-undef
          entities: [`${__dirname}/../../../../../src/**/**/infrastructure/persistence/typeorm/*{.js,.ts}`],
          synchronize: false,
          logging: false,
          migrationsTableName: 'migrations',
          migrations: ['migration/*.js'],
          cli: {
            migrationsDir: 'migration'
          }
        }));

        /* istanbul ignore next */
        cov_746c5727s().s[18]++;
        return connection;
      } catch (error) {
        /* istanbul ignore next */
        cov_746c5727s().s[19]++;
        // eslint-disable-next-line no-console
        console.log('error', error);

        /* istanbul ignore next */
        cov_746c5727s().s[20]++;
        return (0, typeorm_1.getConnection)();
      }
    });
  }

}

/* istanbul ignore next */
cov_746c5727s().s[21]++;
exports.TypeOrmClientFactory = TypeOrmClientFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbWljcm9rL3BlcnNpc3RlbmNlL2luZnJhc3RydWN0dXJlL3R5cGVvcm0vVHlwZU9ybUNsaWVudEZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxNQUFBLFNBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxTQUFBLENBQUEsQ0FBQTs7QUFHQSxNQUFhLG9CQUFiLENBQWlDO0FBQ0osU0FBWixZQUFZLENBQUMsTUFBRCxFQUFzQjtBQUFBO0FBQUE7QUFBQTs7Ozs7O0FBQzNDLFVBQUk7QUFDQSxjQUFNLFVBQVU7QUFBQTtBQUFBLGtDQUFHLE1BQU0sQ0FBQSxHQUFBLFNBQUEsQ0FBQSxnQkFBQSxFQUFpQjtBQUN0QyxVQUFBLElBQUksRUFBRSxPQURnQztBQUV0QyxVQUFBLElBQUksRUFBRSxNQUFNLENBQUMsSUFGeUI7QUFHdEMsVUFBQSxJQUFJLEVBQUUsTUFBTSxDQUFDLElBSHlCO0FBSXRDLFVBQUEsUUFBUSxFQUFFLE1BQU0sQ0FBQyxRQUpxQjtBQUt0QyxVQUFBLFFBQVEsRUFBRSxNQUFNLENBQUMsUUFMcUI7QUFNdEMsVUFBQSxRQUFRLEVBQUUsTUFBTSxDQUFDLFFBTnFCO0FBT3RDO0FBQ0EsVUFBQSxRQUFRLEVBQUUsQ0FBQyxHQUFHLFNBQVMseUVBQWIsQ0FSNEI7QUFTdEMsVUFBQSxXQUFXLEVBQUUsS0FUeUI7QUFVdEMsVUFBQSxPQUFPLEVBQUUsS0FWNkI7QUFXdEMsVUFBQSxtQkFBbUIsRUFBRSxZQVhpQjtBQVl0QyxVQUFBLFVBQVUsRUFBRSxDQUFDLGdCQUFELENBWjBCO0FBYXRDLFVBQUEsR0FBRyxFQUFFO0FBQ0QsWUFBQSxhQUFhLEVBQUU7QUFEZDtBQWJpQyxTQUFqQixDQUFULENBQWhCOztBQURBO0FBQUE7QUFtQkEsZUFBTyxVQUFQO0FBQ0gsT0FwQkQsQ0FvQkUsT0FBTyxLQUFQLEVBQWM7QUFBQTtBQUFBO0FBQ1o7QUFDQSxRQUFBLE9BQU8sQ0FBQyxHQUFSLENBQVksT0FBWixFQUFxQixLQUFyQjs7QUFGWTtBQUFBO0FBR1osZUFBTyxDQUFBLEdBQUEsU0FBQSxDQUFBLGFBQUEsR0FBUDtBQUNIO0FBQ0osSztBQUFBOztBQTNCNEI7Ozs7QUFBakMsT0FBQSxDQUFBLG9CQUFBLEdBQUEsb0JBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25uZWN0aW9uLCBjcmVhdGVDb25uZWN0aW9uLCBnZXRDb25uZWN0aW9uIH0gZnJvbSAndHlwZW9ybSc7XG5pbXBvcnQgeyBUeXBlT3JtQ29uZmlnIH0gZnJvbSAnLi9UeXBlT3JtQ29uZmlnJztcblxuZXhwb3J0IGNsYXNzIFR5cGVPcm1DbGllbnRGYWN0b3J5IHtcbiAgICBzdGF0aWMgYXN5bmMgY3JlYXRlQ2xpZW50KGNvbmZpZzogVHlwZU9ybUNvbmZpZyk6IFByb21pc2U8Q29ubmVjdGlvbj4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgY29ubmVjdGlvbiA9IGF3YWl0IGNyZWF0ZUNvbm5lY3Rpb24oe1xuICAgICAgICAgICAgICAgIHR5cGU6ICdteXNxbCcsXG4gICAgICAgICAgICAgICAgaG9zdDogY29uZmlnLmhvc3QsXG4gICAgICAgICAgICAgICAgcG9ydDogY29uZmlnLnBvcnQsXG4gICAgICAgICAgICAgICAgdXNlcm5hbWU6IGNvbmZpZy51c2VybmFtZSxcbiAgICAgICAgICAgICAgICBwYXNzd29yZDogY29uZmlnLnBhc3N3b3JkLFxuICAgICAgICAgICAgICAgIGRhdGFiYXNlOiBjb25maWcuZGF0YWJhc2UsXG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gICAgICAgICAgICAgICAgZW50aXRpZXM6IFtgJHtfX2Rpcm5hbWV9Ly4uLy4uLy4uLy4uLy4uL3NyYy8qKi8qKi9pbmZyYXN0cnVjdHVyZS9wZXJzaXN0ZW5jZS90eXBlb3JtLyp7LmpzLC50c31gXSxcbiAgICAgICAgICAgICAgICBzeW5jaHJvbml6ZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgbG9nZ2luZzogZmFsc2UsXG4gICAgICAgICAgICAgICAgbWlncmF0aW9uc1RhYmxlTmFtZTogJ21pZ3JhdGlvbnMnLFxuICAgICAgICAgICAgICAgIG1pZ3JhdGlvbnM6IFsnbWlncmF0aW9uLyouanMnXSxcbiAgICAgICAgICAgICAgICBjbGk6IHtcbiAgICAgICAgICAgICAgICAgICAgbWlncmF0aW9uc0RpcjogJ21pZ3JhdGlvbicsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICByZXR1cm4gY29ubmVjdGlvbjtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnZXJyb3InLCBlcnJvcik7XG4gICAgICAgICAgICByZXR1cm4gZ2V0Q29ubmVjdGlvbigpO1xuICAgICAgICB9XG4gICAgfVxufVxuIl19