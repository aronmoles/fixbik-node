{"version":3,"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/persistence/infrastructure/typeorm/TypeOrmClientFactory.ts"],"names":[],"mappingsa,oBAAb,CAAiC;AACJ,SAAZ,YAAY,CAAC,MAAD,EAAsB;AAAA;AAAA;AAAA;;;;;;AAC3C,UAAI;AACA,cAAM,UAAU;AAAA;AAAA,kCAAG,MAAM,CAAA,GAAA,SAAA,CAAA,gBAAA,EAAiB;AACtC,UAAA,IAAI,EAAE,OADgC;AAEtC,UAAA,IAAI,EAAE,MAAM,CAAC,IAFyB;AAGtC,UAAA,IAAI,EAAE,MAAM,CAAC,IAHyB;AAItC,UAAA,QAAQ,EAAE,MAAM,CAAC,QAJqB;AAKtC,UAAA,QAAQ,EAAE,MAAM,CAAC,QALqB;AAMtC,UAAA,QAAQ,EAAE,MAAM,CAAC,QANqB;AAOtC;AACA,UAAA,QAAQ,EAAE,CAAC,GAAG,SAAS,yEAAb,CAR4B;AAStC,UAAA,WAAW,EAAE,KATyB;AAUtC,UAAA,OAAO,EAAE,KAV6B;AAWtC,UAAA,mBAAmB,EAAE,YAXiB;AAYtC,UAAA,UAAU,EAAE,CAAC,gBAAD,CAZ0B;AAatC,UAAA,GAAG,EAAE;AACD,YAAA,aAAa,EAAE;AADd;AAbiC,SAAjB,CAAT,CAAhB;;AADA;AAAA;AAmBA,eAAO,UAAP;AACH,OApBD,CAoBE,OAAO,KAAP,EAAc;AAAA;AAAA;AACZ;AACA,QAAA,OAAO,CAAC,GAAR,CAAY,OAAZ,EAAqB,KAArB;;AAFY;AAAA;AAGZ,eAAO,CAAA,GAAA,SAAA,CAAA,aAAA,GAAP;AACH;AACJ,K;AAAA;;AA3B4B;;;;AAAjC,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourcesContent":["import { Connection, createConnection, getConnection } from 'typeorm';\nimport { TypeOrmConfig } from './TypeOrmConfig';\n\nexport class TypeOrmClientFactory {\n    static async createClient(config: TypeOrmConfig): Promise<Connection> {\n        try {\n            const connection = await createConnection({\n                type: 'mysql',\n                host: config.host,\n                port: config.port,\n                username: config.username,\n                password: config.password,\n                database: config.database,\n                // eslint-disable-next-line no-undef\n                entities: [`${__dirname}/../../../../../src/**/**/infrastructure/persistence/typeorm/*{.js,.ts}`],\n                synchronize: false,\n                logging: false,\n                migrationsTableName: 'migrations',\n                migrations: ['migration/*.js'],\n                cli: {\n                    migrationsDir: 'migration',\n                },\n            });\n\n            return connection;\n        } catch (error) {\n            // eslint-disable-next-line no-console\n            console.log('error', error);\n            return getConnection();\n        }\n    }\n}\n"]}