e2cad8ebd2306657f9db7e881f5e1b22
"use strict";

/* istanbul ignore next */
function cov_upcmpkzyb() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts";
  var hash = "fbe50c596430bddb466383765ca40f11c5e0198c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 5,
          column: 8
        },
        end: {
          line: 5,
          column: 27
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 26
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 4
          },
          end: {
            line: 4,
            column: 5
          }
        },
        loc: {
          start: {
            line: 4,
            column: 28
          },
          end: {
            line: 6,
            column: 5
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 4,
            column: 24
          },
          end: {
            line: 4,
            column: 26
          }
        }],
        line: 4
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0]
    },
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts",
      mappings: ";;AASA,MAAqB,WAAW;IAC5B,YACqB,QAAyB,EAAE;QAA3B,UAAK,GAAL,KAAK,CAAsB;IAC7C,CAAC;IAEJ,WAAW;QACP,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;CACJ;AARD,8BAQC",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts"],
      sourcesContent: ["import { PrimitivesObject, PrimitiveType } from '../PrimitiveType';\nimport Serializable from '../Serializable';\n\ntype MessageMetaType = {\n    correlationId?: string,\n    replyTo?: string,\n    [key: string]: PrimitiveType,\n}\n\nexport default class MessageMeta implements Serializable {\n    constructor(\n        private readonly value: MessageMetaType = {},\n    ) {}\n\n    toPrimitive(): PrimitivesObject {\n        return this.value;\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fbe50c596430bddb466383765ca40f11c5e0198c"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_upcmpkzyb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_upcmpkzyb();
cov_upcmpkzyb().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

class MessageMeta {
  constructor(value =
  /* istanbul ignore next */
  (cov_upcmpkzyb().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_upcmpkzyb().f[0]++;
    cov_upcmpkzyb().s[1]++;
    this.value = value;
  }

  toPrimitive() {
    /* istanbul ignore next */
    cov_upcmpkzyb().f[1]++;
    cov_upcmpkzyb().s[2]++;
    return this.value;
  }

}

/* istanbul ignore next */
cov_upcmpkzyb().s[3]++;
exports.default = MessageMeta;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbWljcm9rL2NvbW1vbi9tZXNzYWdlL01lc3NhZ2VNZXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVNBLE1BQXFCLFdBQXJCLENBQWdDO0FBQzVCLEVBQUEsV0FBQSxDQUNxQixLQUFBO0FBQUE7QUFBQSw4QkFBeUIsRUFBekIsQ0FEckIsRUFDZ0Q7QUFBQTtBQUFBO0FBQUE7QUFBM0IsU0FBQSxLQUFBLEdBQUEsS0FBQTtBQUNqQjs7QUFFSixFQUFBLFdBQVcsR0FBQTtBQUFBO0FBQUE7QUFBQTtBQUNQLFdBQU8sS0FBSyxLQUFaO0FBQ0g7O0FBUDJCOzs7O0FBQWhDLE9BQUEsQ0FBQSxPQUFBLEdBQUEsV0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaW1pdGl2ZXNPYmplY3QsIFByaW1pdGl2ZVR5cGUgfSBmcm9tICcuLi9QcmltaXRpdmVUeXBlJztcbmltcG9ydCBTZXJpYWxpemFibGUgZnJvbSAnLi4vU2VyaWFsaXphYmxlJztcblxudHlwZSBNZXNzYWdlTWV0YVR5cGUgPSB7XG4gICAgY29ycmVsYXRpb25JZD86IHN0cmluZyxcbiAgICByZXBseVRvPzogc3RyaW5nLFxuICAgIFtrZXk6IHN0cmluZ106IFByaW1pdGl2ZVR5cGUsXG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1lc3NhZ2VNZXRhIGltcGxlbWVudHMgU2VyaWFsaXphYmxlIHtcbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSB2YWx1ZTogTWVzc2FnZU1ldGFUeXBlID0ge30sXG4gICAgKSB7fVxuXG4gICAgdG9QcmltaXRpdmUoKTogUHJpbWl0aXZlc09iamVjdCB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlO1xuICAgIH1cbn1cbiJdfQ==