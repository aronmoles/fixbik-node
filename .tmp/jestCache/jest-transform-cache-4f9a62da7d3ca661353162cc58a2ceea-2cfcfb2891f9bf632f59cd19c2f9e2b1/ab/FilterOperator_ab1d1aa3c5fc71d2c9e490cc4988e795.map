{"version":3,"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/criteria/FilterOperator.ts"],"names":[],"mappingsiBAAA;AAAA;AAAA,0BAAA,eAAA,CAAA,OAAA,CAAA,iCAAA,CAAA,CAAA,CAAA;AACA,MAAA,sBAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,sCAAA,CAAA,CAAA;AAEA,IAAY,QAAZ;;;;;AAAA,CAAA,UAAY,QAAZ,EAAoB;AAAA;AAAA;AAAA;AAClB,EAAA,QAAA,CAAA,OAAA,CAAA,GAAA,GAAA;;AADkB;AAAA;AAElB,EAAA,QAAA,CAAA,WAAA,CAAA,GAAA,IAAA;;AAFkB;AAAA;AAGlB,EAAA,QAAA,CAAA,IAAA,CAAA,GAAA,GAAA;;AAHkB;AAAA;AAIlB,EAAA,QAAA,CAAA,aAAA,CAAA,GAAA,IAAA;;AAJkB;AAAA;AAKlB,EAAA,QAAA,CAAA,IAAA,CAAA,GAAA,GAAA;;AALkB;AAAA;AAMlB,EAAA,QAAA,CAAA,aAAA,CAAA,GAAA,IAAA;;AANkB;AAAA;AAOlB,EAAA,QAAA,CAAA,MAAA,CAAA,GAAA,MAAA,CAPkB,CAQlB;AACA;AACD,CAVD,EAAY,QAAQ;AAAR;AAAA,6BAAA,OAAA,CAAA,QAAA;AAAA;AAAA,6BAAA,OAAA,CAAA,QAAA,GAAQ,EAAR,CAAZ;;AAYA,MAAa,cAAb;AAAA;AAAA,CAAoC,iBAAA,CAAA,OAApC,EAA6D;AAC7C,SAAL,KAAK,GAAA;AAAA;AAAA;AAAA;AACR,WAAO,KAAK,SAAL,CAAe,QAAQ,CAAC,KAAxB,CAAP;AACH;;AAEe,SAAT,SAAS,CAAC,KAAD,EAAc;AAAA;AAAA;AAAA;;AAC1B,YAAQ,KAAR;AACI,WAAK,QAAQ,CAAC,KAAd;AAAA;AAAA;AAAA;AACI,eAAO,IAAI,cAAJ,CAAmB,QAAQ,CAAC,KAA5B,CAAP;;AACJ,WAAK,QAAQ,CAAC,SAAd;AAAA;AAAA;AAAA;AACI,eAAO,IAAI,cAAJ,CAAmB,QAAQ,CAAC,SAA5B,CAAP;;AACJ,WAAK,QAAQ,CAAC,EAAd;AAAA;AAAA;AAAA;AACI,eAAO,IAAI,cAAJ,CAAmB,QAAQ,CAAC,EAA5B,CAAP;;AACJ,WAAK,QAAQ,CAAC,WAAd;AAAA;AAAA;AAAA;AACI,eAAO,IAAI,cAAJ,CAAmB,QAAQ,CAAC,WAA5B,CAAP;;AACJ,WAAK,QAAQ,CAAC,EAAd;AAAA;AAAA;AAAA;AACI,eAAO,IAAI,cAAJ,CAAmB,QAAQ,CAAC,EAA5B,CAAP;;AACJ,WAAK,QAAQ,CAAC,WAAd;AAAA;AAAA;AAAA;AACI,eAAO,IAAI,cAAJ,CAAmB,QAAQ,CAAC,WAA5B,CAAP;;AACJ,WAAK,QAAQ,CAAC,IAAd;AAAA;AAAA;AAAA;AACI,eAAO,IAAI,cAAJ,CAAmB,QAAQ,CAAC,IAA5B,CAAP;AACJ;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAAA;AACI,cAAM,IAAI,sBAAA,CAAA,oBAAJ,CAAyB,uBAAuB,KAAK,aAArD,CAAN;AApBR;AAsBH;;AAED,EAAA,WAAA,CAAY,KAAZ,EAA2B;AAAA;AAAA;AAAA;AACvB,UAAM,KAAN,EAAa,MAAM,CAAC,MAAP,CAAc,QAAd,CAAb;AACH;;AAES,EAAA,yBAAyB,CAAC,KAAD,EAAgB;AAAA;AAAA;AAAA;AAC/C,UAAM,IAAI,sBAAA,CAAA,oBAAJ,CAAyB,uBAAuB,KAAK,aAArD,CAAN;AACH;;AApCwD;;;;AAA7D,OAAA,CAAA,cAAA,GAAA,cAAA","sourcesContent":["import EnumValueObject from '../value-object/EnumValueObject';\nimport { InvalidArgumentError } from '../value-object/InvalidArgumentError';\n\nexport enum Operator {\n  EQUAL = '=',\n  NOT_EQUAL = '!=',\n  GT = '>',\n  GT_OR_EQUAL = '>=',\n  LT = '<',\n  LT_OR_EQUAL = '<=',\n  LIKE = 'LIKE',\n  // CONTAINS = 'CONTAINS',\n  // NOT_CONTAINS = 'NOT_CONTAINS',\n}\n\nexport class FilterOperator extends EnumValueObject<Operator> {\n    static equal() {\n        return this.fromValue(Operator.EQUAL);\n    }\n\n    static fromValue(value: string): FilterOperator {\n        switch (value) {\n            case Operator.EQUAL:\n                return new FilterOperator(Operator.EQUAL);\n            case Operator.NOT_EQUAL:\n                return new FilterOperator(Operator.NOT_EQUAL);\n            case Operator.GT:\n                return new FilterOperator(Operator.GT);\n            case Operator.GT_OR_EQUAL:\n                return new FilterOperator(Operator.GT_OR_EQUAL);\n            case Operator.LT:\n                return new FilterOperator(Operator.LT);\n            case Operator.LT_OR_EQUAL:\n                return new FilterOperator(Operator.LT_OR_EQUAL);\n            case Operator.LIKE:\n                return new FilterOperator(Operator.LIKE);\n            // case Operator.CONTAINS:\n            //     return new FilterOperator(Operator.CONTAINS);\n            // case Operator.NOT_CONTAINS:\n            //     return new FilterOperator(Operator.NOT_CONTAINS);\n            default:\n                throw new InvalidArgumentError(`The filter operator ${value} is invalid`);\n        }\n    }\n\n    constructor(value: Operator) {\n        super(value, Object.values(Operator));\n    }\n\n    protected throwErrorForInvalidValue(value: Operator): void {\n        throw new InvalidArgumentError(`The filter operator ${value} is invalid`);\n    }\n}\n"]}