{"version":3,"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/utils/TimeBusMiddleware.ts"],"names":[],"mappingsqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALrB,MAAA,aAAA;AAAA;AAAA,2BAAA,eAAA,CAAA,OAAA,CAAA,+BAAA,CAAA,CAAA,CAAA;;AAKA,MAAqB,iBAArB,CAAsC;AAClC,EAAA,WAAA,CAA6B,MAA7B,EAA2C;AAAA;AAAA;AAAA;AAAd,SAAA,MAAA,GAAA,MAAA;AAAkB;;AAEzC,EAAA,GAAG,CAAC,OAAD,EAAmB,IAAnB,EAA2C;AAAA;AAAA;AAAA;;;;AAChD,YAAM,cAAc;AAAA;AAAA,iCAAG,IAAI,CAAC,GAAL,EAAH,CAApB;AACA,YAAM,GAAG;AAAA;AAAA,iCAAG,MAAM,IAAI,EAAb,CAAT;AACA,YAAM,YAAY;AAAA;AAAA,iCAAG,IAAI,CAAC,GAAL,EAAH,CAAlB;AAEA,YAAM,IAAI;AAAA;AAAA,iCAAG,YAAY,GAAG,cAAlB,CAAV;;;;AACA,MAAA,OAAO,CAAC,IAAR,CAAa,GAAb,CAAiB,aAAA,CAAA,OAAA,CAAY,IAAZ,CAAiB,IAAlC,EAAwC,IAAxC;;;;AACA,WAAK,MAAL,CAAY,IAAZ,CAAiB,GAAG,OAAO,CAAC,IAAR,CAAa,KAAb,EAAoB,IAAI,YAAY,GAAG,cAAc,IAAzE;;;;AAEA,aAAO,GAAP;AACH,K;AAAA;;AAbiC;;;;AAAtC,OAAA,CAAA,OAAA,GAAA,iBAAA","sourcesContent":["import MessageMeta from '../common/message/MessageMeta';\nimport WrapperExecutor from '../core/domain/WrapperExecutor';\nimport Logger from '../core/domain/Logger';\nimport Message from '../common/message/Message';\n\nexport default class TimeBusMiddleware implements WrapperExecutor<Message, any> {\n    constructor(private readonly logger: Logger) {}\n\n    async run(message: Message, next: () => Promise<any>): Promise<any> {\n        const startTimestamp = Date.now();\n        const res = await next();\n        const endTimestamp = Date.now();\n\n        const time = endTimestamp - startTimestamp;\n        message.meta.set(MessageMeta.KEYS.TIME, time);\n        this.logger.info(`${message.name.value()} ${endTimestamp - startTimestamp}ms`);\n\n        return res;\n    }\n}\n"]}