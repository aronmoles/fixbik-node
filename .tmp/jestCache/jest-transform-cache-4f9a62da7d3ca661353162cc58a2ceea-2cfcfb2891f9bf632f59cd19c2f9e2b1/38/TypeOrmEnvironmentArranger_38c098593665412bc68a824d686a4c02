f2220737522eb8c98757da3d394ef38e
"use strict";

/* istanbul ignore next */
function cov_d24sgjkel() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/tests/infrastructure/typeorm/TypeOrmEnvironmentArranger.ts";
  var hash = "52295519b47001b0f32a57a245b7218f30a841fa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/tests/infrastructure/typeorm/TypeOrmEnvironmentArranger.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 16
        },
        end: {
          line: 10,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 28
        },
        end: {
          line: 3,
          column: 110
        }
      },
      "2": {
        start: {
          line: 3,
          column: 91
        },
        end: {
          line: 3,
          column: 106
        }
      },
      "3": {
        start: {
          line: 4,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "4": {
        start: {
          line: 5,
          column: 36
        },
        end: {
          line: 5,
          column: 97
        }
      },
      "5": {
        start: {
          line: 5,
          column: 42
        },
        end: {
          line: 5,
          column: 70
        }
      },
      "6": {
        start: {
          line: 5,
          column: 85
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "7": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 100
        }
      },
      "8": {
        start: {
          line: 6,
          column: 41
        },
        end: {
          line: 6,
          column: 73
        }
      },
      "9": {
        start: {
          line: 6,
          column: 88
        },
        end: {
          line: 6,
          column: 98
        }
      },
      "10": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 116
        }
      },
      "11": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "12": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 62
        }
      },
      "13": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 44
        }
      },
      "14": {
        start: {
          line: 13,
          column: 30
        },
        end: {
          line: 13,
          column: 73
        }
      },
      "15": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 16
        }
      },
      "16": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 31
        }
      },
      "17": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 22,
          column: 11
        }
      },
      "18": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 39
        }
      },
      "19": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 36,
          column: 11
        }
      },
      "20": {
        start: {
          line: 26,
          column: 29
        },
        end: {
          line: 26,
          column: 50
        }
      },
      "21": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 35,
          column: 13
        }
      },
      "22": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 31,
          column: 17
        }
      },
      "23": {
        start: {
          line: 29,
          column: 39
        },
        end: {
          line: 29,
          column: 87
        }
      },
      "24": {
        start: {
          line: 30,
          column: 20
        },
        end: {
          line: 30,
          column: 82
        }
      },
      "25": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 75
        }
      },
      "26": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 41,
          column: 11
        }
      },
      "27": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 57
        }
      },
      "28": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 28
        }
      },
      "29": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 49,
          column: 11
        }
      },
      "30": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 49
        }
      },
      "31": {
        start: {
          line: 52,
          column: 0
        },
        end: {
          line: 52,
          column: 64
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 2,
            column: 45
          }
        },
        loc: {
          start: {
            line: 2,
            column: 89
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "adopt",
        decl: {
          start: {
            line: 3,
            column: 13
          },
          end: {
            line: 3,
            column: 18
          }
        },
        loc: {
          start: {
            line: 3,
            column: 26
          },
          end: {
            line: 3,
            column: 112
          }
        },
        line: 3
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 3,
            column: 70
          },
          end: {
            line: 3,
            column: 71
          }
        },
        loc: {
          start: {
            line: 3,
            column: 89
          },
          end: {
            line: 3,
            column: 108
          }
        },
        line: 3
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 63
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 4
      },
      "4": {
        name: "fulfilled",
        decl: {
          start: {
            line: 5,
            column: 17
          },
          end: {
            line: 5,
            column: 26
          }
        },
        loc: {
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 99
          }
        },
        line: 5
      },
      "5": {
        name: "rejected",
        decl: {
          start: {
            line: 6,
            column: 17
          },
          end: {
            line: 6,
            column: 25
          }
        },
        loc: {
          start: {
            line: 6,
            column: 33
          },
          end: {
            line: 6,
            column: 102
          }
        },
        line: 6
      },
      "6": {
        name: "step",
        decl: {
          start: {
            line: 7,
            column: 17
          },
          end: {
            line: 7,
            column: 21
          }
        },
        loc: {
          start: {
            line: 7,
            column: 30
          },
          end: {
            line: 7,
            column: 118
          }
        },
        line: 7
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 15
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 14
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 19
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 20,
            column: 47
          },
          end: {
            line: 20,
            column: 48
          }
        },
        loc: {
          start: {
            line: 20,
            column: 60
          },
          end: {
            line: 22,
            column: 9
          }
        },
        line: 20
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 20
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 24
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 25,
            column: 47
          },
          end: {
            line: 25,
            column: 48
          }
        },
        loc: {
          start: {
            line: 25,
            column: 60
          },
          end: {
            line: 36,
            column: 9
          }
        },
        line: 25
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        loc: {
          start: {
            line: 38,
            column: 15
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 38
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 39,
            column: 47
          },
          end: {
            line: 39,
            column: 48
          }
        },
        loc: {
          start: {
            line: 39,
            column: 60
          },
          end: {
            line: 41,
            column: 9
          }
        },
        line: 39
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        loc: {
          start: {
            line: 43,
            column: 13
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 43
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 46
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 47,
            column: 47
          },
          end: {
            line: 47,
            column: 48
          }
        },
        loc: {
          start: {
            line: 47,
            column: 60
          },
          end: {
            line: 49,
            column: 9
          }
        },
        line: 47
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 16
          },
          end: {
            line: 10,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 17
          },
          end: {
            line: 2,
            column: 21
          }
        }, {
          start: {
            line: 2,
            column: 25
          },
          end: {
            line: 2,
            column: 39
          }
        }, {
          start: {
            line: 2,
            column: 44
          },
          end: {
            line: 10,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 35
          },
          end: {
            line: 3,
            column: 109
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 56
          },
          end: {
            line: 3,
            column: 61
          }
        }, {
          start: {
            line: 3,
            column: 64
          },
          end: {
            line: 3,
            column: 109
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 17
          }
        }, {
          start: {
            line: 4,
            column: 22
          },
          end: {
            line: 4,
            column: 33
          }
        }],
        line: 4
      },
      "3": {
        loc: {
          start: {
            line: 7,
            column: 32
          },
          end: {
            line: 7,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 7,
            column: 46
          },
          end: {
            line: 7,
            column: 67
          }
        }, {
          start: {
            line: 7,
            column: 70
          },
          end: {
            line: 7,
            column: 115
          }
        }],
        line: 7
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 51
          },
          end: {
            line: 8,
            column: 61
          }
        }, {
          start: {
            line: 8,
            column: 65
          },
          end: {
            line: 8,
            column: 67
          }
        }],
        line: 8
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/tests/infrastructure/typeorm/TypeOrmEnvironmentArranger.ts",
      mappings: ";;;;;;;;;;;;AACA,0EAAuE;AAEvE,MAAa,0BAA2B,SAAQ,yCAAmB;IAC/D,YAAoB,OAA4B;QAC5C,KAAK,EAAE,CAAC;QADQ,YAAO,GAAP,OAAO,CAAqB;IAEhD,CAAC;IAEY,OAAO;;YAChB,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC;QAC/B,CAAC;KAAA;IAEe,aAAa;;YACzB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;YAEvC,IAAI;gBACA,KAAK,MAAM,MAAM,IAAI,QAAQ,EAAE;oBAC3B,MAAM,UAAU,GAAG,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;oBACpE,MAAM,UAAU,CAAC,KAAK,CAAC,kBAAkB,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC;iBACjE;aACJ;YAAC,OAAO,KAAK,EAAE;gBACZ,MAAM,IAAI,KAAK,CAAC,kCAAkC,KAAK,EAAE,CAAC,CAAC;aAC9D;QACL,CAAC;KAAA;IAEa,QAAQ;;YAClB,OAAO,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,eAAe,CAAC;QACjD,CAAC;KAAA;IAES,MAAM;QACZ,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAEY,KAAK;;YACd,OAAO,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;QACzC,CAAC;KAAA;CACJ;AAjCD,gEAiCC",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/tests/infrastructure/typeorm/TypeOrmEnvironmentArranger.ts"],
      sourcesContent: ["import { Connection, EntityMetadata } from 'typeorm';\nimport { EnvironmentArranger } from '../../domain/EnvironmentArranger';\n\nexport class TypeOrmEnvironmentArranger extends EnvironmentArranger {\n    constructor(private _client: Promise<Connection>) {\n        super();\n    }\n\n    public async arrange(): Promise<void> {\n        await this.cleanDatabase();\n    }\n\n    protected async cleanDatabase(): Promise<void> {\n        const entities = await this.entities();\n\n        try {\n            for (const entity of entities) {\n                const repository = (await this.client()).getRepository(entity.name);\n                await repository.query(`TRUNCATE TABLE ${entity.tableName};`);\n            }\n        } catch (error) {\n            throw new Error(`Unable to clean test database: ${error}`);\n        }\n    }\n\n    private async entities(): Promise<EntityMetadata[]> {\n        return (await this.client()).entityMetadatas;\n    }\n\n    protected client(): Promise<Connection> {\n        return this._client;\n    }\n\n    public async close(): Promise<void> {\n        return (await this.client()).close();\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "52295519b47001b0f32a57a245b7218f30a841fa"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_d24sgjkel = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_d24sgjkel();

var __awaiter =
/* istanbul ignore next */
(cov_d24sgjkel().s[0]++,
/* istanbul ignore next */
(cov_d24sgjkel().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_d24sgjkel().b[0][1]++, this.__awaiter) ||
/* istanbul ignore next */
(cov_d24sgjkel().b[0][2]++, function (thisArg, _arguments, P, generator) {
  /* istanbul ignore next */
  cov_d24sgjkel().f[0]++;

  function adopt(value) {
    /* istanbul ignore next */
    cov_d24sgjkel().f[1]++;
    cov_d24sgjkel().s[1]++;
    return value instanceof P ?
    /* istanbul ignore next */
    (cov_d24sgjkel().b[1][0]++, value) :
    /* istanbul ignore next */
    (cov_d24sgjkel().b[1][1]++, new P(function (resolve) {
      /* istanbul ignore next */
      cov_d24sgjkel().f[2]++;
      cov_d24sgjkel().s[2]++;
      resolve(value);
    }));
  }

  /* istanbul ignore next */
  cov_d24sgjkel().s[3]++;
  return new (
  /* istanbul ignore next */
  (cov_d24sgjkel().b[2][0]++, P) ||
  /* istanbul ignore next */
  (cov_d24sgjkel().b[2][1]++, P = Promise))(function (resolve, reject) {
    /* istanbul ignore next */
    cov_d24sgjkel().f[3]++;

    function fulfilled(value) {
      /* istanbul ignore next */
      cov_d24sgjkel().f[4]++;
      cov_d24sgjkel().s[4]++;

      try {
        /* istanbul ignore next */
        cov_d24sgjkel().s[5]++;
        step(generator.next(value));
      } catch (e) {
        /* istanbul ignore next */
        cov_d24sgjkel().s[6]++;
        reject(e);
      }
    }

    function rejected(value) {
      /* istanbul ignore next */
      cov_d24sgjkel().f[5]++;
      cov_d24sgjkel().s[7]++;

      try {
        /* istanbul ignore next */
        cov_d24sgjkel().s[8]++;
        step(generator["throw"](value));
      } catch (e) {
        /* istanbul ignore next */
        cov_d24sgjkel().s[9]++;
        reject(e);
      }
    }

    function step(result) {
      /* istanbul ignore next */
      cov_d24sgjkel().f[6]++;
      cov_d24sgjkel().s[10]++;
      result.done ?
      /* istanbul ignore next */
      (cov_d24sgjkel().b[3][0]++, resolve(result.value)) :
      /* istanbul ignore next */
      (cov_d24sgjkel().b[3][1]++, adopt(result.value).then(fulfilled, rejected));
    }

    /* istanbul ignore next */
    cov_d24sgjkel().s[11]++;
    step((generator = generator.apply(thisArg,
    /* istanbul ignore next */
    (cov_d24sgjkel().b[4][0]++, _arguments) ||
    /* istanbul ignore next */
    (cov_d24sgjkel().b[4][1]++, []))).next());
  });
}));

/* istanbul ignore next */
cov_d24sgjkel().s[12]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_d24sgjkel().s[13]++;
exports.TypeOrmEnvironmentArranger = void 0;
const EnvironmentArranger_1 =
/* istanbul ignore next */
(cov_d24sgjkel().s[14]++, require("../../domain/EnvironmentArranger"));

class TypeOrmEnvironmentArranger extends
/* istanbul ignore next */
(EnvironmentArranger_1.EnvironmentArranger) {
  constructor(_client) {
    /* istanbul ignore next */
    cov_d24sgjkel().f[7]++;
    cov_d24sgjkel().s[15]++;
    super();

    /* istanbul ignore next */
    cov_d24sgjkel().s[16]++;
    this._client = _client;
  }

  arrange() {
    /* istanbul ignore next */
    cov_d24sgjkel().f[8]++;
    cov_d24sgjkel().s[17]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_d24sgjkel().f[9]++;
      cov_d24sgjkel().s[18]++;
      yield this.cleanDatabase();
    });
  }

  cleanDatabase() {
    /* istanbul ignore next */
    cov_d24sgjkel().f[10]++;
    cov_d24sgjkel().s[19]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_d24sgjkel().f[11]++;
      const entities =
      /* istanbul ignore next */
      (cov_d24sgjkel().s[20]++, yield this.entities());

      /* istanbul ignore next */
      cov_d24sgjkel().s[21]++;

      try {
        /* istanbul ignore next */
        cov_d24sgjkel().s[22]++;

        for (const entity of entities) {
          const repository =
          /* istanbul ignore next */
          (cov_d24sgjkel().s[23]++, (yield this.client()).getRepository(entity.name));

          /* istanbul ignore next */
          cov_d24sgjkel().s[24]++;
          yield repository.query(`TRUNCATE TABLE ${entity.tableName};`);
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_d24sgjkel().s[25]++;
        throw new Error(`Unable to clean test database: ${error}`);
      }
    });
  }

  entities() {
    /* istanbul ignore next */
    cov_d24sgjkel().f[12]++;
    cov_d24sgjkel().s[26]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_d24sgjkel().f[13]++;
      cov_d24sgjkel().s[27]++;
      return (yield this.client()).entityMetadatas;
    });
  }

  client() {
    /* istanbul ignore next */
    cov_d24sgjkel().f[14]++;
    cov_d24sgjkel().s[28]++;
    return this._client;
  }

  close() {
    /* istanbul ignore next */
    cov_d24sgjkel().f[15]++;
    cov_d24sgjkel().s[29]++;
    return __awaiter(this, void 0, void 0, function* () {
      /* istanbul ignore next */
      cov_d24sgjkel().f[16]++;
      cov_d24sgjkel().s[30]++;
      return (yield this.client()).close();
    });
  }

}

/* istanbul ignore next */
cov_d24sgjkel().s[31]++;
exports.TypeOrmEnvironmentArranger = TypeOrmEnvironmentArranger;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbWljcm9rL3Rlc3RzL2luZnJhc3RydWN0dXJlL3R5cGVvcm0vVHlwZU9ybUVudmlyb25tZW50QXJyYW5nZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUtROzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUpSLE1BQUEscUJBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxrQ0FBQSxDQUFBLENBQUE7O0FBRUEsTUFBYSwwQkFBYjtBQUFBO0FBQUEsQ0FBZ0QscUJBQUEsQ0FBQSxtQkFBaEQsRUFBbUU7QUFDL0QsRUFBQSxXQUFBLENBQW9CLE9BQXBCLEVBQWdEO0FBQUE7QUFBQTtBQUFBO0FBQzVDOztBQUQ0QztBQUFBO0FBQTVCLFNBQUEsT0FBQSxHQUFBLE9BQUE7QUFFbkI7O0FBRVksRUFBQSxPQUFPLEdBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7O0FBQ2hCLFlBQU0sS0FBSyxhQUFMLEVBQU47QUFDSCxLO0FBQUE7O0FBRWUsRUFBQSxhQUFhLEdBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7QUFDekIsWUFBTSxRQUFRO0FBQUE7QUFBQSxnQ0FBRyxNQUFNLEtBQUssUUFBTCxFQUFULENBQWQ7Ozs7O0FBRUEsVUFBSTtBQUFBO0FBQUE7O0FBQ0EsYUFBSyxNQUFNLE1BQVgsSUFBcUIsUUFBckIsRUFBK0I7QUFDM0IsZ0JBQU0sVUFBVTtBQUFBO0FBQUEsb0NBQUcsQ0FBQyxNQUFNLEtBQUssTUFBTCxFQUFQLEVBQXNCLGFBQXRCLENBQW9DLE1BQU0sQ0FBQyxJQUEzQyxDQUFILENBQWhCOztBQUQyQjtBQUFBO0FBRTNCLGdCQUFNLFVBQVUsQ0FBQyxLQUFYLENBQWlCLGtCQUFrQixNQUFNLENBQUMsU0FBUyxHQUFuRCxDQUFOO0FBQ0g7QUFDSixPQUxELENBS0UsT0FBTyxLQUFQLEVBQWM7QUFBQTtBQUFBO0FBQ1osY0FBTSxJQUFJLEtBQUosQ0FBVSxrQ0FBa0MsS0FBSyxFQUFqRCxDQUFOO0FBQ0g7QUFDSixLO0FBQUE7O0FBRWEsRUFBQSxRQUFRLEdBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7O0FBQ2xCLGFBQU8sQ0FBQyxNQUFNLEtBQUssTUFBTCxFQUFQLEVBQXNCLGVBQTdCO0FBQ0gsSztBQUFBOztBQUVTLEVBQUEsTUFBTSxHQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ1osV0FBTyxLQUFLLE9BQVo7QUFDSDs7QUFFWSxFQUFBLEtBQUssR0FBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7QUFDZCxhQUFPLENBQUMsTUFBTSxLQUFLLE1BQUwsRUFBUCxFQUFzQixLQUF0QixFQUFQO0FBQ0gsSztBQUFBOztBQWhDOEQ7Ozs7QUFBbkUsT0FBQSxDQUFBLDBCQUFBLEdBQUEsMEJBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb25uZWN0aW9uLCBFbnRpdHlNZXRhZGF0YSB9IGZyb20gJ3R5cGVvcm0nO1xuaW1wb3J0IHsgRW52aXJvbm1lbnRBcnJhbmdlciB9IGZyb20gJy4uLy4uL2RvbWFpbi9FbnZpcm9ubWVudEFycmFuZ2VyJztcblxuZXhwb3J0IGNsYXNzIFR5cGVPcm1FbnZpcm9ubWVudEFycmFuZ2VyIGV4dGVuZHMgRW52aXJvbm1lbnRBcnJhbmdlciB7XG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBfY2xpZW50OiBQcm9taXNlPENvbm5lY3Rpb24+KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuXG4gICAgcHVibGljIGFzeW5jIGFycmFuZ2UoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIGF3YWl0IHRoaXMuY2xlYW5EYXRhYmFzZSgpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBhc3luYyBjbGVhbkRhdGFiYXNlKCk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICBjb25zdCBlbnRpdGllcyA9IGF3YWl0IHRoaXMuZW50aXRpZXMoKTtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBlbnRpdHkgb2YgZW50aXRpZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXBvc2l0b3J5ID0gKGF3YWl0IHRoaXMuY2xpZW50KCkpLmdldFJlcG9zaXRvcnkoZW50aXR5Lm5hbWUpO1xuICAgICAgICAgICAgICAgIGF3YWl0IHJlcG9zaXRvcnkucXVlcnkoYFRSVU5DQVRFIFRBQkxFICR7ZW50aXR5LnRhYmxlTmFtZX07YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuYWJsZSB0byBjbGVhbiB0ZXN0IGRhdGFiYXNlOiAke2Vycm9yfWApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBhc3luYyBlbnRpdGllcygpOiBQcm9taXNlPEVudGl0eU1ldGFkYXRhW10+IHtcbiAgICAgICAgcmV0dXJuIChhd2FpdCB0aGlzLmNsaWVudCgpKS5lbnRpdHlNZXRhZGF0YXM7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIGNsaWVudCgpOiBQcm9taXNlPENvbm5lY3Rpb24+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudDtcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgY2xvc2UoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIHJldHVybiAoYXdhaXQgdGhpcy5jbGllbnQoKSkuY2xvc2UoKTtcbiAgICB9XG59XG4iXX0=