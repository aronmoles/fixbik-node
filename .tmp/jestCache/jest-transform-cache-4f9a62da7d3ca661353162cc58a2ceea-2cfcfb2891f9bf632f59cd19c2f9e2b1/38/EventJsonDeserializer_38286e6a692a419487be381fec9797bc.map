{"version":3,"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/infrastructure/EventJsonDeserializer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBS;;;;;;;;;;;;;;;;;;AAhBT,MAAa,qBAAb,CAAkC;AAG9B,EAAA,WAAA,CAAY,OAAZ,EAAqC;AAAA;AAAA;AAAA;AACjC,SAAK,OAAL,GAAe,OAAf;AACH;;AAED,EAAA,WAAW,CAAC,WAAD,EAAoB;AAAA;AAAA;AAC3B,UAAM,KAAK;AAAA;AAAA,6BAAG,IAAI,CAAC,KAAL,CAAW,WAAX,CAAH,CAAX;AACA,UAAM,SAAS;AAAA;AAAA,6BAAG,KAAK,CAAC,IAAT,CAAf;AACA,UAAM,SAAS;AAAA;AAAA,6BAAG,KAAK,CAAC,IAAT,CAAf;AACA,UAAM,SAAS;AAAA;AAAA,6BAAG,SAAS,CAAC,IAAb,CAAf;AACA,UAAM,UAAU;AAAA;AAAA,6BAAG,KAAK,OAAL,CAAa,GAAb,CAAiB,SAAjB,CAAH,CAAhB;;AAL2B;AAAA;;AAO3B,QAAI,CAAC,UAAL,EAAiB;AAAA;AAAA;AAAA;AACb,aAAO,SAAP;AACH,KAFD;AAAA;AAAA;AAAA;AAAA;;AAP2B;AAW3B,WAAO,UAAU,CAAC,cAAX,CAA0B;AAC7B,MAAA,EAAE,EAAE,SAAS,CAAC,EADe;AAE7B,MAAA,IAAI,EAAE,SAAS,CAAC,IAFa;AAG7B,MAAA,IAAI,EAAE,SAAS,CAAC,IAHa;AAI7B,MAAA,WAAW,EAAE,SAAS,CAAC,WAJM;AAK7B,MAAA,UAAU,EAAE,SAAS,CAAC,UALO;AAM7B,MAAA;AAN6B,KAA1B,CAAP;AAQH;;AA1B6B;;;;AAAlC,OAAA,CAAA,qBAAA,GAAA,qBAAA","sourcesContent":["import DomainEvent from '../domain/DomainEvent';\nimport EventDeserializer from '../domain/EventDeserializer';\nimport { EventClassMapper } from './EventClassMapper';\nimport { Optional } from '../../common/Optional';\n\nexport class EventJsonDeserializer implements EventDeserializer {\n    private mapping: EventClassMapper;\n\n    constructor(mapping: EventClassMapper) {\n        this.mapping = mapping;\n    }\n\n    deserialize(eventString: string): Optional<DomainEvent> {\n        const event = JSON.parse(eventString);\n        const eventData = event.data;\n        const eventMeta = event.meta;\n        const eventName = eventData.name;\n        const eventClass = this.mapping.for(eventName);\n\n        if (!eventClass) {\n            return undefined;\n        }\n\n        return eventClass.fromPrimitives({\n            id: eventData.id,\n            name: eventData.name,\n            type: eventData.type,\n            aggregateId: eventData.aggregateId,\n            occurredOn: eventData.occurredOn,\n            eventMeta,\n        });\n    }\n}\n"]}