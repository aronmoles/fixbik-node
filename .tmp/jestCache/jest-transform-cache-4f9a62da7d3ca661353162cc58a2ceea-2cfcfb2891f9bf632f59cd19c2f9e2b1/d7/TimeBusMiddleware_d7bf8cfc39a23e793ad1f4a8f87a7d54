3d66a5429bb0f9a576221a30f551edff
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const MessageMeta_1 = __importDefault(require("../common/message/MessageMeta"));
class TimeBusMiddleware {
    constructor(logger) {
        this.logger = logger;
    }
    run(message, next) {
        return __awaiter(this, void 0, void 0, function* () {
            const startTimestamp = Date.now();
            const res = yield next();
            const endTimestamp = Date.now();
            const time = endTimestamp - startTimestamp;
            message.meta.set(MessageMeta_1.default.KEYS.TIME, time);
            this.logger.info(`${message.name.value()} ${endTimestamp - startTimestamp}ms`);
            return res;
        });
    }
}
exports.default = TimeBusMiddleware;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3NyYy9taWNyb2svdXRpbHMvVGltZUJ1c01pZGRsZXdhcmUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQSxnRkFBd0Q7QUFLeEQsTUFBcUIsaUJBQWlCO0lBQ2xDLFlBQTZCLE1BQWM7UUFBZCxXQUFNLEdBQU4sTUFBTSxDQUFRO0lBQUcsQ0FBQztJQUV6QyxHQUFHLENBQUMsT0FBZ0IsRUFBRSxJQUF3Qjs7WUFDaEQsTUFBTSxjQUFjLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBQ2xDLE1BQU0sR0FBRyxHQUFHLE1BQU0sSUFBSSxFQUFFLENBQUM7WUFDekIsTUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1lBRWhDLE1BQU0sSUFBSSxHQUFHLFlBQVksR0FBRyxjQUFjLENBQUM7WUFDM0MsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMscUJBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQzlDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxZQUFZLEdBQUcsY0FBYyxJQUFJLENBQUMsQ0FBQztZQUUvRSxPQUFPLEdBQUcsQ0FBQztRQUNmLENBQUM7S0FBQTtDQUNKO0FBZEQsb0NBY0MiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3NyYy9taWNyb2svdXRpbHMvVGltZUJ1c01pZGRsZXdhcmUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1lc3NhZ2VNZXRhIGZyb20gJy4uL2NvbW1vbi9tZXNzYWdlL01lc3NhZ2VNZXRhJztcbmltcG9ydCBXcmFwcGVyRXhlY3V0b3IgZnJvbSAnLi4vY29yZS9kb21haW4vV3JhcHBlckV4ZWN1dG9yJztcbmltcG9ydCBMb2dnZXIgZnJvbSAnLi4vY29yZS9kb21haW4vTG9nZ2VyJztcbmltcG9ydCBNZXNzYWdlIGZyb20gJy4uL2NvbW1vbi9tZXNzYWdlL01lc3NhZ2UnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUaW1lQnVzTWlkZGxld2FyZSBpbXBsZW1lbnRzIFdyYXBwZXJFeGVjdXRvcjxNZXNzYWdlLCBhbnk+IHtcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlYWRvbmx5IGxvZ2dlcjogTG9nZ2VyKSB7fVxuXG4gICAgYXN5bmMgcnVuKG1lc3NhZ2U6IE1lc3NhZ2UsIG5leHQ6ICgpID0+IFByb21pc2U8YW55Pik6IFByb21pc2U8YW55PiB7XG4gICAgICAgIGNvbnN0IHN0YXJ0VGltZXN0YW1wID0gRGF0ZS5ub3coKTtcbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgbmV4dCgpO1xuICAgICAgICBjb25zdCBlbmRUaW1lc3RhbXAgPSBEYXRlLm5vdygpO1xuXG4gICAgICAgIGNvbnN0IHRpbWUgPSBlbmRUaW1lc3RhbXAgLSBzdGFydFRpbWVzdGFtcDtcbiAgICAgICAgbWVzc2FnZS5tZXRhLnNldChNZXNzYWdlTWV0YS5LRVlTLlRJTUUsIHRpbWUpO1xuICAgICAgICB0aGlzLmxvZ2dlci5pbmZvKGAke21lc3NhZ2UubmFtZS52YWx1ZSgpfSAke2VuZFRpbWVzdGFtcCAtIHN0YXJ0VGltZXN0YW1wfW1zYCk7XG5cbiAgICAgICAgcmV0dXJuIHJlcztcbiAgICB9XG59XG4iXSwidmVyc2lvbiI6M30=