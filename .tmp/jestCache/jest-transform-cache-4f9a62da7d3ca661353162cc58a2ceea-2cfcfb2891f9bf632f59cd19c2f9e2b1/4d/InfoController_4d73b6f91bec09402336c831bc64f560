7bdf86de7db65073d22d4ead0f33e9f5
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const HttpMethod_1 = require("@microk/common/http/HttpMethod");
const HttpStatus_1 = require("@microk/common/http/HttpStatus");
const InfoQuery_1 = __importDefault(require("../application/info/InfoQuery"));
class InfoController {
    constructor(queryBus) {
        this.queryBus = queryBus;
    }
    config() {
        return {
            method: HttpMethod_1.HttpMethod.GET,
            path: '/',
        };
    }
    run(req, res) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = yield this.queryBus.ask(new InfoQuery_1.default());
            res.status(HttpStatus_1.HttpStatus.OK).send(data);
        });
    }
}
exports.default = InfoController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3NyYy9tb2R1bGVzL2luZm8vaW5mcmFzdHJ1Y3R1cmUvSW5mb0NvbnRyb2xsZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQSwrREFBNEQ7QUFDNUQsK0RBQTREO0FBTTVELDhFQUFzRDtBQUd0RCxNQUFxQixjQUFjO0lBQy9CLFlBQ29CLFFBQWtCO1FBQWxCLGFBQVEsR0FBUixRQUFRLENBQVU7SUFFdEMsQ0FBQztJQUVELE1BQU07UUFDRixPQUFPO1lBQ0gsTUFBTSxFQUFFLHVCQUFVLENBQUMsR0FBRztZQUN0QixJQUFJLEVBQUUsR0FBRztTQUNaLENBQUM7SUFDTixDQUFDO0lBRUssR0FBRyxDQUFDLEdBQVksRUFBRSxHQUFhOztZQUNqQyxNQUFNLElBQUksR0FBRyxNQUFNLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFlLElBQUksbUJBQVMsRUFBRSxDQUFDLENBQUM7WUFDcEUsR0FBRyxDQUFDLE1BQU0sQ0FBQyx1QkFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN6QyxDQUFDO0tBQUE7Q0FDSjtBQWpCRCxpQ0FpQkMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3NyYy9tb2R1bGVzL2luZm8vaW5mcmFzdHJ1Y3R1cmUvSW5mb0NvbnRyb2xsZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cE1ldGhvZCB9IGZyb20gJ0BtaWNyb2svY29tbW9uL2h0dHAvSHR0cE1ldGhvZCc7XG5pbXBvcnQgeyBIdHRwU3RhdHVzIH0gZnJvbSAnQG1pY3Jvay9jb21tb24vaHR0cC9IdHRwU3RhdHVzJztcbmltcG9ydCBDb250cm9sbGVyIGZyb20gJ0BtaWNyb2svY29yZS9kb21haW4vaHR0cC9Db250cm9sbGVyJztcbmltcG9ydCB7IENvbnRyb2xsZXJDb25maWcgfSBmcm9tICdAbWljcm9rL2NvcmUvZG9tYWluL2h0dHAvQ29udHJvbGxlckNvbmZpZyc7XG5pbXBvcnQgeyBSZXF1ZXN0IH0gZnJvbSAnQG1pY3Jvay9jb3JlL2RvbWFpbi9odHRwL1JlcXVlc3QnO1xuaW1wb3J0IHsgUmVzcG9uc2UgfSBmcm9tICdAbWljcm9rL2NvcmUvZG9tYWluL2h0dHAvUmVzcG9uc2UnO1xuaW1wb3J0IFF1ZXJ5QnVzIGZyb20gJ0BtaWNyb2svY3Fycy9kb21haW4vcXVlcnkvUXVlcnlCdXMnO1xuaW1wb3J0IEluZm9RdWVyeSBmcm9tICcuLi9hcHBsaWNhdGlvbi9pbmZvL0luZm9RdWVyeSc7XG5pbXBvcnQgeyBJbmZvUmVzcG9uc2UgfSBmcm9tICcuLi9hcHBsaWNhdGlvbi9pbmZvL0luZm9SZXNwb25zZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEluZm9Db250cm9sbGVyIGltcGxlbWVudHMgQ29udHJvbGxlciB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgcHJpdmF0ZSByZWFkb25seSBxdWVyeUJ1czogUXVlcnlCdXMsXG4gICAgKSB7XG4gICAgfVxuXG4gICAgY29uZmlnKCk6IENvbnRyb2xsZXJDb25maWcge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbWV0aG9kOiBIdHRwTWV0aG9kLkdFVCxcbiAgICAgICAgICAgIHBhdGg6ICcvJyxcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBhc3luYyBydW4ocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnF1ZXJ5QnVzLmFzazxJbmZvUmVzcG9uc2U+KG5ldyBJbmZvUXVlcnkoKSk7XG4gICAgICAgIHJlcy5zdGF0dXMoSHR0cFN0YXR1cy5PSykuc2VuZChkYXRhKTtcbiAgICB9XG59XG4iXSwidmVyc2lvbiI6M30=