6049e1624ccca55bdc608eef0b88b8c6
"use strict";

/* istanbul ignore next */
function cov_22ipc1bxji() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/criteria/Criteria.ts";
  var hash = "27c45aa5780364deafee67497edbf7dd370dcd10";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/criteria/Criteria.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 26
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 58
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 31
        }
      },
      "4": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 27
        }
      },
      "5": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 27
        }
      },
      "6": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 29
        }
      },
      "7": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 47
        }
      },
      "8": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 107
        }
      },
      "9": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 51
        }
      },
      "10": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 22,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 47
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 17
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 16,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 16,
            column: 58
          }
        }, {
          start: {
            line: 16,
            column: 62
          },
          end: {
            line: 16,
            column: 106
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 25
          }
        }, {
          start: {
            line: 19,
            column: 29
          },
          end: {
            line: 19,
            column: 50
          }
        }],
        line: 19
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/criteria/Criteria.ts",
      mappings: ";;;AAAA,2DAAoE;AAIpE,MAAa,QAAQ;IAMjB,YAAY,OAAgB,EAAE,KAAY,EAAE,KAAc,EAAE,MAAe;QACvE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAEM,UAAU;QACb,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;IAC3C,CAAC;IAED,aAAa;QACT,OAAO,CAAC,IAAA,yBAAiB,EAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAA,yBAAiB,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7E,CAAC;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IAC/C,CAAC;CACJ;AAxBD,4BAwBC",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/criteria/Criteria.ts"],
      sourcesContent: ["import { isNullOrUndefined } from '../../core/infrastructure/Utils';\nimport { Filters } from './Filters';\nimport { Order } from './Order';\n\nexport class Criteria {\n    readonly filters: Filters;\n    readonly order: Order;\n    readonly limit?: number;\n    readonly offset?: number;\n\n    constructor(filters: Filters, order: Order, limit?: number, offset?: number) {\n        this.filters = filters;\n        this.order = order;\n        this.limit = limit;\n        this.offset = offset;\n    }\n\n    public hasFilters(): boolean {\n        return this.filters.filters.length > 0;\n    }\n\n    hasPagination(): boolean {\n        return !isNullOrUndefined(this.limit) && !isNullOrUndefined(this.offset);\n    }\n\n    hasOrder(): boolean {\n        return this.order && this.order.hasOrder();\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "27c45aa5780364deafee67497edbf7dd370dcd10"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_22ipc1bxji = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_22ipc1bxji();
cov_22ipc1bxji().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_22ipc1bxji().s[1]++;
exports.Criteria = void 0;
const Utils_1 =
/* istanbul ignore next */
(cov_22ipc1bxji().s[2]++, require("../../core/infrastructure/Utils"));

class Criteria {
  constructor(filters, order, limit, offset) {
    /* istanbul ignore next */
    cov_22ipc1bxji().f[0]++;
    cov_22ipc1bxji().s[3]++;
    this.filters = filters;

    /* istanbul ignore next */
    cov_22ipc1bxji().s[4]++;
    this.order = order;

    /* istanbul ignore next */
    cov_22ipc1bxji().s[5]++;
    this.limit = limit;

    /* istanbul ignore next */
    cov_22ipc1bxji().s[6]++;
    this.offset = offset;
  }

  hasFilters() {
    /* istanbul ignore next */
    cov_22ipc1bxji().f[1]++;
    cov_22ipc1bxji().s[7]++;
    return this.filters.filters.length > 0;
  }

  hasPagination() {
    /* istanbul ignore next */
    cov_22ipc1bxji().f[2]++;
    cov_22ipc1bxji().s[8]++;
    return (
      /* istanbul ignore next */
      (cov_22ipc1bxji().b[0][0]++, !(0, Utils_1.isNullOrUndefined)(this.limit)) &&
      /* istanbul ignore next */
      (cov_22ipc1bxji().b[0][1]++, !(0, Utils_1.isNullOrUndefined)(this.offset))
    );
  }

  hasOrder() {
    /* istanbul ignore next */
    cov_22ipc1bxji().f[3]++;
    cov_22ipc1bxji().s[9]++;
    return (
      /* istanbul ignore next */
      (cov_22ipc1bxji().b[1][0]++, this.order) &&
      /* istanbul ignore next */
      (cov_22ipc1bxji().b[1][1]++, this.order.hasOrder())
    );
  }

}

/* istanbul ignore next */
cov_22ipc1bxji().s[10]++;
exports.Criteria = Criteria;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbWljcm9rL2NvbW1vbi9jcml0ZXJpYS9Dcml0ZXJpYS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQlE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdEJSLE1BQUEsT0FBQTtBQUFBO0FBQUEsMEJBQUEsT0FBQSxDQUFBLGlDQUFBLENBQUEsQ0FBQTs7QUFJQSxNQUFhLFFBQWIsQ0FBcUI7QUFNakIsRUFBQSxXQUFBLENBQVksT0FBWixFQUE4QixLQUE5QixFQUE0QyxLQUE1QyxFQUE0RCxNQUE1RCxFQUEyRTtBQUFBO0FBQUE7QUFBQTtBQUN2RSxTQUFLLE9BQUwsR0FBZSxPQUFmOztBQUR1RTtBQUFBO0FBRXZFLFNBQUssS0FBTCxHQUFhLEtBQWI7O0FBRnVFO0FBQUE7QUFHdkUsU0FBSyxLQUFMLEdBQWEsS0FBYjs7QUFIdUU7QUFBQTtBQUl2RSxTQUFLLE1BQUwsR0FBYyxNQUFkO0FBQ0g7O0FBRU0sRUFBQSxVQUFVLEdBQUE7QUFBQTtBQUFBO0FBQUE7QUFDYixXQUFPLEtBQUssT0FBTCxDQUFhLE9BQWIsQ0FBcUIsTUFBckIsR0FBOEIsQ0FBckM7QUFDSDs7QUFFRCxFQUFBLGFBQWEsR0FBQTtBQUFBO0FBQUE7QUFBQTtBQUNULFdBQU87QUFBQTtBQUFBLG9DQUFDLENBQUEsR0FBQSxPQUFBLENBQUEsaUJBQUEsRUFBa0IsS0FBSyxLQUF2QixDQUFEO0FBQUE7QUFBQSxtQ0FBa0MsQ0FBQyxDQUFBLEdBQUEsT0FBQSxDQUFBLGlCQUFBLEVBQWtCLEtBQUssTUFBdkIsQ0FBbkM7QUFBUDtBQUNIOztBQUVELEVBQUEsUUFBUSxHQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0osV0FBTztBQUFBO0FBQUEsd0NBQUssS0FBTDtBQUFBO0FBQUEsbUNBQWMsS0FBSyxLQUFMLENBQVcsUUFBWCxFQUFkO0FBQVA7QUFDSDs7QUF2QmdCOzs7O0FBQXJCLE9BQUEsQ0FBQSxRQUFBLEdBQUEsUUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzTnVsbE9yVW5kZWZpbmVkIH0gZnJvbSAnLi4vLi4vY29yZS9pbmZyYXN0cnVjdHVyZS9VdGlscyc7XG5pbXBvcnQgeyBGaWx0ZXJzIH0gZnJvbSAnLi9GaWx0ZXJzJztcbmltcG9ydCB7IE9yZGVyIH0gZnJvbSAnLi9PcmRlcic7XG5cbmV4cG9ydCBjbGFzcyBDcml0ZXJpYSB7XG4gICAgcmVhZG9ubHkgZmlsdGVyczogRmlsdGVycztcbiAgICByZWFkb25seSBvcmRlcjogT3JkZXI7XG4gICAgcmVhZG9ubHkgbGltaXQ/OiBudW1iZXI7XG4gICAgcmVhZG9ubHkgb2Zmc2V0PzogbnVtYmVyO1xuXG4gICAgY29uc3RydWN0b3IoZmlsdGVyczogRmlsdGVycywgb3JkZXI6IE9yZGVyLCBsaW1pdD86IG51bWJlciwgb2Zmc2V0PzogbnVtYmVyKSB7XG4gICAgICAgIHRoaXMuZmlsdGVycyA9IGZpbHRlcnM7XG4gICAgICAgIHRoaXMub3JkZXIgPSBvcmRlcjtcbiAgICAgICAgdGhpcy5saW1pdCA9IGxpbWl0O1xuICAgICAgICB0aGlzLm9mZnNldCA9IG9mZnNldDtcbiAgICB9XG5cbiAgICBwdWJsaWMgaGFzRmlsdGVycygpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlsdGVycy5maWx0ZXJzLmxlbmd0aCA+IDA7XG4gICAgfVxuXG4gICAgaGFzUGFnaW5hdGlvbigpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuICFpc051bGxPclVuZGVmaW5lZCh0aGlzLmxpbWl0KSAmJiAhaXNOdWxsT3JVbmRlZmluZWQodGhpcy5vZmZzZXQpO1xuICAgIH1cblxuICAgIGhhc09yZGVyKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5vcmRlciAmJiB0aGlzLm9yZGVyLmhhc09yZGVyKCk7XG4gICAgfVxufVxuIl19