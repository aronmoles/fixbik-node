{"file":"/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/docs/openapi/consumers/GetOnlyComments.ts","mappings":";;;AAAA,MAAM,IAAI,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC;AAE5C,sDAAsD;AACtD,MAAM,gBAAgB,GAAG,+DAA+D,CAAC;AACzF,MAAM,UAAU,GAAG,KAAK,CAAC;AAEzB,MAAM,WAAW,GAAG,CAAC,IAAI,EAAE,EAAE;IACzB,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;IAC9C,IAAI,QAAQ,EAAE;QACV,MAAM,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;QAC/E,OAAO,cAAc,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;KAC1D;IACD,OAAO,EAAE,CAAC;AACd,CAAC,CAAC;AAEK,MAAM,eAAe,GAAG,CAAC,eAAyB,EAAE,EAAE,EAAE;IAC3D,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;QAC9B,OAAO,EAAE,CAAC;KACb;IACD,MAAM,QAAQ,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE;QAC1C,MAAM,cAAc,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;QACtC,OAAO,WAAW,CAAC,cAAc,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IACH,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AAC1F,CAAC,CAAC;AATW,QAAA,eAAe,mBAS1B","names":[],"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/docs/openapi/consumers/GetOnlyComments.ts"],"sourcesContent":["const flat = (array) => [].concat(...array);\n\n// eslint-disable-next-line prefer-named-capture-group\nconst COMMENTS_PATTERN = /((\\/\\*\\*+[\\s\\S]*?\\*\\/)|(\\/\\*+.*\\*\\/)|^\\/\\/.*?[\\r\\n])[\\r\\n]*/gm;\nconst BREAK_LINE = /\\n/g;\n\nconst getComments = (text) => {\n    const comments = text.match(COMMENTS_PATTERN);\n    if (comments) {\n        const filterComments = comments.filter((comment) => comment.match(BREAK_LINE));\n        return filterComments.map((comment) => comment.trim());\n    }\n    return [];\n};\n\nexport const getOnlyComments = (fileContents: string[] = []) => {\n    if (!Array.isArray(fileContents)) {\n        return [];\n    }\n    const comments = fileContents.map((comment) => {\n        const trimedComments = comment.trim();\n        return getComments(trimedComments);\n    });\n    return flat(comments).filter((comment) => (comment[0] === '/' && comment[1] !== '/'));\n};\n"],"version":3}