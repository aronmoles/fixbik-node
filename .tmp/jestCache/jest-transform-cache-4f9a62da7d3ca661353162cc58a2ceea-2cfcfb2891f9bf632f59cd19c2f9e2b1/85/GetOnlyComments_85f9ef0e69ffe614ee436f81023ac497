89e872250397db6711e890c8e8dba71c
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOnlyComments = void 0;
const flat = (array) => [].concat(...array);
// eslint-disable-next-line prefer-named-capture-group
const COMMENTS_PATTERN = /((\/\*\*+[\s\S]*?\*\/)|(\/\*+.*\*\/)|^\/\/.*?[\r\n])[\r\n]*/gm;
const BREAK_LINE = /\n/g;
const getComments = (text) => {
    const comments = text.match(COMMENTS_PATTERN);
    if (comments) {
        const filterComments = comments.filter((comment) => comment.match(BREAK_LINE));
        return filterComments.map((comment) => comment.trim());
    }
    return [];
};
const getOnlyComments = (fileContents = []) => {
    if (!Array.isArray(fileContents)) {
        return [];
    }
    const comments = fileContents.map((comment) => {
        const trimedComments = comment.trim();
        return getComments(trimedComments);
    });
    return flat(comments).filter((comment) => (comment[0] === '/' && comment[1] !== '/'));
};
exports.getOnlyComments = getOnlyComments;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3NyYy9taWNyb2svZG9jcy9vcGVuYXBpL2NvbnN1bWVycy9HZXRPbmx5Q29tbWVudHMudHMiLCJtYXBwaW5ncyI6Ijs7O0FBQUEsTUFBTSxJQUFJLEdBQUcsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQztBQUU1QyxzREFBc0Q7QUFDdEQsTUFBTSxnQkFBZ0IsR0FBRywrREFBK0QsQ0FBQztBQUN6RixNQUFNLFVBQVUsR0FBRyxLQUFLLENBQUM7QUFFekIsTUFBTSxXQUFXLEdBQUcsQ0FBQyxJQUFJLEVBQUUsRUFBRTtJQUN6QixNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDOUMsSUFBSSxRQUFRLEVBQUU7UUFDVixNQUFNLGNBQWMsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7UUFDL0UsT0FBTyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztLQUMxRDtJQUNELE9BQU8sRUFBRSxDQUFDO0FBQ2QsQ0FBQyxDQUFDO0FBRUssTUFBTSxlQUFlLEdBQUcsQ0FBQyxlQUF5QixFQUFFLEVBQUUsRUFBRTtJQUMzRCxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsRUFBRTtRQUM5QixPQUFPLEVBQUUsQ0FBQztLQUNiO0lBQ0QsTUFBTSxRQUFRLEdBQUcsWUFBWSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFO1FBQzFDLE1BQU0sY0FBYyxHQUFHLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUN0QyxPQUFPLFdBQVcsQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUN2QyxDQUFDLENBQUMsQ0FBQztJQUNILE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQzFGLENBQUMsQ0FBQztBQVRXLFFBQUEsZUFBZSxtQkFTMUIiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3NyYy9taWNyb2svZG9jcy9vcGVuYXBpL2NvbnN1bWVycy9HZXRPbmx5Q29tbWVudHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZmxhdCA9IChhcnJheSkgPT4gW10uY29uY2F0KC4uLmFycmF5KTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1uYW1lZC1jYXB0dXJlLWdyb3VwXG5jb25zdCBDT01NRU5UU19QQVRURVJOID0gLygoXFwvXFwqXFwqK1tcXHNcXFNdKj9cXCpcXC8pfChcXC9cXCorLipcXCpcXC8pfF5cXC9cXC8uKj9bXFxyXFxuXSlbXFxyXFxuXSovZ207XG5jb25zdCBCUkVBS19MSU5FID0gL1xcbi9nO1xuXG5jb25zdCBnZXRDb21tZW50cyA9ICh0ZXh0KSA9PiB7XG4gICAgY29uc3QgY29tbWVudHMgPSB0ZXh0Lm1hdGNoKENPTU1FTlRTX1BBVFRFUk4pO1xuICAgIGlmIChjb21tZW50cykge1xuICAgICAgICBjb25zdCBmaWx0ZXJDb21tZW50cyA9IGNvbW1lbnRzLmZpbHRlcigoY29tbWVudCkgPT4gY29tbWVudC5tYXRjaChCUkVBS19MSU5FKSk7XG4gICAgICAgIHJldHVybiBmaWx0ZXJDb21tZW50cy5tYXAoKGNvbW1lbnQpID0+IGNvbW1lbnQudHJpbSgpKTtcbiAgICB9XG4gICAgcmV0dXJuIFtdO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldE9ubHlDb21tZW50cyA9IChmaWxlQ29udGVudHM6IHN0cmluZ1tdID0gW10pID0+IHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoZmlsZUNvbnRlbnRzKSkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIGNvbnN0IGNvbW1lbnRzID0gZmlsZUNvbnRlbnRzLm1hcCgoY29tbWVudCkgPT4ge1xuICAgICAgICBjb25zdCB0cmltZWRDb21tZW50cyA9IGNvbW1lbnQudHJpbSgpO1xuICAgICAgICByZXR1cm4gZ2V0Q29tbWVudHModHJpbWVkQ29tbWVudHMpO1xuICAgIH0pO1xuICAgIHJldHVybiBmbGF0KGNvbW1lbnRzKS5maWx0ZXIoKGNvbW1lbnQpID0+IChjb21tZW50WzBdID09PSAnLycgJiYgY29tbWVudFsxXSAhPT0gJy8nKSk7XG59O1xuIl0sInZlcnNpb24iOjN9