{"file":"/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/application/login/LoginQueryHandler.ts","mappings":";;;;;;;;;;;;;;AAAA,yEAAsE;AACtE,8DAAsC;AAItC,MAAqB,iBAAkB,SAAQ,2BAA4C;IACvF,YACqB,YAA0B;QAE3C,KAAK,CAAC,oBAAU,CAAC,CAAC;QAFD,iBAAY,GAAZ,YAAY,CAAc;IAG/C,CAAC;IAEK,MAAM,CAAC,KAAiB;;YAC1B,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC3E,OAAO;gBACH,SAAS,EAAE,SAAS,CAAC,QAAQ,EAAE;aAClC,CAAC;QACN,CAAC;KAAA;CACJ;AAbD,oCAaC","names":[],"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/application/login/LoginQueryHandler.ts"],"sourcesContent":["import { QueryHandler } from '@microk/cqrs/domain/query/QueryHandler';\nimport LoginQuery from './LoginQuery';\nimport LoginQueryResponse from './LoginQueryResponse';\nimport LoginService from './LoginService';\n\nexport default class LoginQueryHandler extends QueryHandler<LoginQuery, LoginQueryResponse> {\n    constructor(\n        private readonly loginService: LoginService,\n    ) {\n        super(LoginQuery);\n    }\n\n    async handle(query: LoginQuery): Promise<LoginQueryResponse> {\n        const authToken = await this.loginService.run(query.email, query.password);\n        return {\n            authToken: authToken.toString(),\n        };\n    }\n}\n"],"version":3}