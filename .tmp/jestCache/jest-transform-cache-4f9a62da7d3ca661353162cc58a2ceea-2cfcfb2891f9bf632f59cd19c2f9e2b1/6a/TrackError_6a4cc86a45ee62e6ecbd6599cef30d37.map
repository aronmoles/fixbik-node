{"version":3,"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/error/TrackError.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAtBL,MAAA,YAAA;AAAA;AAAA,0BAAA,OAAA,CAAA,iCAAA,CAAA,CAAA;AAEA,MAAA,WAAA;AAAA;AAAA,0BAAA,eAAA,CAAA,OAAA,CAAA,gCAAA,CAAA,CAAA,CAAA;;AAEA,MAAa,UAAb,CAAuB;AAWnB,EAAA,WAAA,CACqB,UADrB,EAEqB,IAFrB,EAGqB,OAHrB,EAIqB,UAJrB,EAKqB,KALrB,EAKkC;AAAA;AAAA;AAAA;AAJb,SAAA,UAAA,GAAA,UAAA;;AAIa;AAAA;AAHb,SAAA,IAAA,GAAA,IAAA;;AAGa;AAAA;AAFb,SAAA,OAAA,GAAA,OAAA;;AAEa;AAAA;AADb,SAAA,UAAA,GAAA,UAAA;;AACa;AAAA;AAAb,SAAA,KAAA,GAAA,KAAA;AAEpB;;AAjBe,SAAT,SAAS,CAAC,KAAD,EAAa;AAAA;AAAA;AAAA;AACzB,WAAO,IAAI,UAAJ,CACH,IAAI,IAAJ,EADG,EAEH,KAAK,CAAC,WAAN,CAAkB,IAFf,EAGH,KAAK,CAAC,OAHH,EAIH,KAAK,YAAY,WAAA,CAAA,OAAjB;AAAA;AAAA,iCAA6B,KAAK,CAAC,IAAnC;AAAA;AAAA,iCAA0C,YAAA,CAAA,UAAA,CAAW,qBAArD,CAJG,EAKH,KAAK,CAAC,KALH,CAAP;AAOH;;AAWM,EAAA,YAAY,GAAA;AAAA;AAAA;AAAA;AACf,WAAO;AACH,MAAA,UAAU,EAAE,KAAK,UAAL,CAAgB,WAAhB,EADT;AAEH,MAAA,IAAI,EAAE,KAAK,IAFR;AAGH,MAAA,OAAO,EAAE,KAAK,OAHX;AAIH,MAAA,UAAU,EAAE,KAAK,UAJd;AAKH,MAAA,KAAK,EAAE,KAAK;AALT,KAAP;AAOH;;AA5BkB;;;;AAAvB,OAAA,CAAA,UAAA,GAAA,UAAA","sourcesContent":["import { HttpStatus } from '../../../common/http/HttpStatus';\nimport { PrimitiveType } from '../../../common/PrimitiveType';\nimport HttpError from '../../../common/http/HttpError';\n\nexport class TrackError {\n    static fromError(error: Error): TrackError {\n        return new TrackError(\n            new Date(),\n            error.constructor.name,\n            error.message,\n            error instanceof HttpError ? error.code : HttpStatus.INTERNAL_SERVER_ERROR,\n            error.stack,\n        )\n    }\n\n    private constructor(\n        private readonly occurredOn: Date,\n        private readonly name: string,\n        private readonly message: string,\n        private readonly httpStatus: HttpStatus,\n        private readonly stack: string,\n    ) {\n    }\n\n    public toPrimitives(): Record<string, PrimitiveType> {\n        return {\n            occurredOn: this.occurredOn.toISOString(),\n            name: this.name,\n            message: this.message,\n            httpStatus: this.httpStatus,\n            stack: this.stack,\n        }\n    }\n}\n"]}