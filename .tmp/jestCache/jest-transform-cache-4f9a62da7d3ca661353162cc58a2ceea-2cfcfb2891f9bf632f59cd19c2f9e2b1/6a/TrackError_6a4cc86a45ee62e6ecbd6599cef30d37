70d24278cefb4421b923518e4cd28a0d
"use strict";

/* istanbul ignore next */
function cov_1a9sagmpb7() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/error/TrackError.ts";
  var hash = "19abbb09ad3bcf6fef77d9c995f77e6564b27939";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/error/TrackError.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 28
        }
      },
      "4": {
        start: {
          line: 7,
          column: 21
        },
        end: {
          line: 7,
          column: 63
        }
      },
      "5": {
        start: {
          line: 8,
          column: 20
        },
        end: {
          line: 8,
          column: 78
        }
      },
      "6": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 37
        }
      },
      "7": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 25
        }
      },
      "8": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "9": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 37
        }
      },
      "10": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 27
        }
      },
      "11": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 193
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 27,
          column: 10
        }
      },
      "13": {
        start: {
          line: 30,
          column: 0
        },
        end: {
          line: 30,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 5
          }
        },
        loc: {
          start: {
            line: 10,
            column: 62
          },
          end: {
            line: 16,
            column: 5
          }
        },
        line: 10
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 5
          }
        },
        loc: {
          start: {
            line: 17,
            column: 28
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 19
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 20
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 18,
            column: 81
          },
          end: {
            line: 18,
            column: 178
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 120
          },
          end: {
            line: 18,
            column: 130
          }
        }, {
          start: {
            line: 18,
            column: 133
          },
          end: {
            line: 18,
            column: 178
          }
        }],
        line: 18
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/error/TrackError.ts",
      mappings: ";;;;;;AAAA,gEAA6D;AAE7D,+EAAuD;AAEvD,MAAa,UAAU;IAWnB,YACqB,UAAgB,EAChB,IAAY,EACZ,OAAe,EACf,UAAsB,EACtB,KAAa;QAJb,eAAU,GAAV,UAAU,CAAM;QAChB,SAAI,GAAJ,IAAI,CAAQ;QACZ,YAAO,GAAP,OAAO,CAAQ;QACf,eAAU,GAAV,UAAU,CAAY;QACtB,UAAK,GAAL,KAAK,CAAQ;IAElC,CAAC;IAjBD,MAAM,CAAC,SAAS,CAAC,KAAY;QACzB,OAAO,IAAI,UAAU,CACjB,IAAI,IAAI,EAAE,EACV,KAAK,CAAC,WAAW,CAAC,IAAI,EACtB,KAAK,CAAC,OAAO,EACb,KAAK,YAAY,mBAAS,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,uBAAU,CAAC,qBAAqB,EAC1E,KAAK,CAAC,KAAK,CACd,CAAA;IACL,CAAC;IAWM,YAAY;QACf,OAAO;YACH,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE;YACzC,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,KAAK,EAAE,IAAI,CAAC,KAAK;SACpB,CAAA;IACL,CAAC;CACJ;AA7BD,gCA6BC",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/error/TrackError.ts"],
      sourcesContent: ["import { HttpStatus } from '../../../common/http/HttpStatus';\nimport { PrimitiveType } from '../../../common/PrimitiveType';\nimport HttpError from '../../../common/http/HttpError';\n\nexport class TrackError {\n    static fromError(error: Error): TrackError {\n        return new TrackError(\n            new Date(),\n            error.constructor.name,\n            error.message,\n            error instanceof HttpError ? error.code : HttpStatus.INTERNAL_SERVER_ERROR,\n            error.stack,\n        )\n    }\n\n    private constructor(\n        private readonly occurredOn: Date,\n        private readonly name: string,\n        private readonly message: string,\n        private readonly httpStatus: HttpStatus,\n        private readonly stack: string,\n    ) {\n    }\n\n    public toPrimitives(): Record<string, PrimitiveType> {\n        return {\n            occurredOn: this.occurredOn.toISOString(),\n            name: this.name,\n            message: this.message,\n            httpStatus: this.httpStatus,\n            stack: this.stack,\n        }\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "19abbb09ad3bcf6fef77d9c995f77e6564b27939"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1a9sagmpb7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1a9sagmpb7();

var __importDefault =
/* istanbul ignore next */
(cov_1a9sagmpb7().s[0]++,
/* istanbul ignore next */
(cov_1a9sagmpb7().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1a9sagmpb7().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1a9sagmpb7().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1a9sagmpb7().f[0]++;
  cov_1a9sagmpb7().s[1]++;
  return (
    /* istanbul ignore next */
    (cov_1a9sagmpb7().b[2][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1a9sagmpb7().b[2][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_1a9sagmpb7().b[1][0]++, mod) :
    /* istanbul ignore next */
    (cov_1a9sagmpb7().b[1][1]++, {
      "default": mod
    })
  );
}));

/* istanbul ignore next */
cov_1a9sagmpb7().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_1a9sagmpb7().s[3]++;
exports.TrackError = void 0;
const HttpStatus_1 =
/* istanbul ignore next */
(cov_1a9sagmpb7().s[4]++, require("../../../common/http/HttpStatus"));
const HttpError_1 =
/* istanbul ignore next */
(cov_1a9sagmpb7().s[5]++, __importDefault(require("../../../common/http/HttpError")));

class TrackError {
  constructor(occurredOn, name, message, httpStatus, stack) {
    /* istanbul ignore next */
    cov_1a9sagmpb7().f[1]++;
    cov_1a9sagmpb7().s[6]++;
    this.occurredOn = occurredOn;

    /* istanbul ignore next */
    cov_1a9sagmpb7().s[7]++;
    this.name = name;

    /* istanbul ignore next */
    cov_1a9sagmpb7().s[8]++;
    this.message = message;

    /* istanbul ignore next */
    cov_1a9sagmpb7().s[9]++;
    this.httpStatus = httpStatus;

    /* istanbul ignore next */
    cov_1a9sagmpb7().s[10]++;
    this.stack = stack;
  }

  static fromError(error) {
    /* istanbul ignore next */
    cov_1a9sagmpb7().f[2]++;
    cov_1a9sagmpb7().s[11]++;
    return new TrackError(new Date(), error.constructor.name, error.message, error instanceof HttpError_1.default ?
    /* istanbul ignore next */
    (cov_1a9sagmpb7().b[3][0]++, error.code) :
    /* istanbul ignore next */
    (cov_1a9sagmpb7().b[3][1]++, HttpStatus_1.HttpStatus.INTERNAL_SERVER_ERROR), error.stack);
  }

  toPrimitives() {
    /* istanbul ignore next */
    cov_1a9sagmpb7().f[3]++;
    cov_1a9sagmpb7().s[12]++;
    return {
      occurredOn: this.occurredOn.toISOString(),
      name: this.name,
      message: this.message,
      httpStatus: this.httpStatus,
      stack: this.stack
    };
  }

}

/* istanbul ignore next */
cov_1a9sagmpb7().s[13]++;
exports.TrackError = TrackError;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbWljcm9rL2NvcmUvZG9tYWluL2Vycm9yL1RyYWNrRXJyb3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQks7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXRCTCxNQUFBLFlBQUE7QUFBQTtBQUFBLDBCQUFBLE9BQUEsQ0FBQSxpQ0FBQSxDQUFBLENBQUE7QUFFQSxNQUFBLFdBQUE7QUFBQTtBQUFBLDBCQUFBLGVBQUEsQ0FBQSxPQUFBLENBQUEsZ0NBQUEsQ0FBQSxDQUFBLENBQUE7O0FBRUEsTUFBYSxVQUFiLENBQXVCO0FBV25CLEVBQUEsV0FBQSxDQUNxQixVQURyQixFQUVxQixJQUZyQixFQUdxQixPQUhyQixFQUlxQixVQUpyQixFQUtxQixLQUxyQixFQUtrQztBQUFBO0FBQUE7QUFBQTtBQUpiLFNBQUEsVUFBQSxHQUFBLFVBQUE7O0FBSWE7QUFBQTtBQUhiLFNBQUEsSUFBQSxHQUFBLElBQUE7O0FBR2E7QUFBQTtBQUZiLFNBQUEsT0FBQSxHQUFBLE9BQUE7O0FBRWE7QUFBQTtBQURiLFNBQUEsVUFBQSxHQUFBLFVBQUE7O0FBQ2E7QUFBQTtBQUFiLFNBQUEsS0FBQSxHQUFBLEtBQUE7QUFFcEI7O0FBakJlLFNBQVQsU0FBUyxDQUFDLEtBQUQsRUFBYTtBQUFBO0FBQUE7QUFBQTtBQUN6QixXQUFPLElBQUksVUFBSixDQUNILElBQUksSUFBSixFQURHLEVBRUgsS0FBSyxDQUFDLFdBQU4sQ0FBa0IsSUFGZixFQUdILEtBQUssQ0FBQyxPQUhILEVBSUgsS0FBSyxZQUFZLFdBQUEsQ0FBQSxPQUFqQjtBQUFBO0FBQUEsaUNBQTZCLEtBQUssQ0FBQyxJQUFuQztBQUFBO0FBQUEsaUNBQTBDLFlBQUEsQ0FBQSxVQUFBLENBQVcscUJBQXJELENBSkcsRUFLSCxLQUFLLENBQUMsS0FMSCxDQUFQO0FBT0g7O0FBV00sRUFBQSxZQUFZLEdBQUE7QUFBQTtBQUFBO0FBQUE7QUFDZixXQUFPO0FBQ0gsTUFBQSxVQUFVLEVBQUUsS0FBSyxVQUFMLENBQWdCLFdBQWhCLEVBRFQ7QUFFSCxNQUFBLElBQUksRUFBRSxLQUFLLElBRlI7QUFHSCxNQUFBLE9BQU8sRUFBRSxLQUFLLE9BSFg7QUFJSCxNQUFBLFVBQVUsRUFBRSxLQUFLLFVBSmQ7QUFLSCxNQUFBLEtBQUssRUFBRSxLQUFLO0FBTFQsS0FBUDtBQU9IOztBQTVCa0I7Ozs7QUFBdkIsT0FBQSxDQUFBLFVBQUEsR0FBQSxVQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cFN0YXR1cyB9IGZyb20gJy4uLy4uLy4uL2NvbW1vbi9odHRwL0h0dHBTdGF0dXMnO1xuaW1wb3J0IHsgUHJpbWl0aXZlVHlwZSB9IGZyb20gJy4uLy4uLy4uL2NvbW1vbi9QcmltaXRpdmVUeXBlJztcbmltcG9ydCBIdHRwRXJyb3IgZnJvbSAnLi4vLi4vLi4vY29tbW9uL2h0dHAvSHR0cEVycm9yJztcblxuZXhwb3J0IGNsYXNzIFRyYWNrRXJyb3Ige1xuICAgIHN0YXRpYyBmcm9tRXJyb3IoZXJyb3I6IEVycm9yKTogVHJhY2tFcnJvciB7XG4gICAgICAgIHJldHVybiBuZXcgVHJhY2tFcnJvcihcbiAgICAgICAgICAgIG5ldyBEYXRlKCksXG4gICAgICAgICAgICBlcnJvci5jb25zdHJ1Y3Rvci5uYW1lLFxuICAgICAgICAgICAgZXJyb3IubWVzc2FnZSxcbiAgICAgICAgICAgIGVycm9yIGluc3RhbmNlb2YgSHR0cEVycm9yID8gZXJyb3IuY29kZSA6IEh0dHBTdGF0dXMuSU5URVJOQUxfU0VSVkVSX0VSUk9SLFxuICAgICAgICAgICAgZXJyb3Iuc3RhY2ssXG4gICAgICAgIClcbiAgICB9XG5cbiAgICBwcml2YXRlIGNvbnN0cnVjdG9yKFxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IG9jY3VycmVkT246IERhdGUsXG4gICAgICAgIHByaXZhdGUgcmVhZG9ubHkgbmFtZTogc3RyaW5nLFxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IG1lc3NhZ2U6IHN0cmluZyxcbiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBodHRwU3RhdHVzOiBIdHRwU3RhdHVzLFxuICAgICAgICBwcml2YXRlIHJlYWRvbmx5IHN0YWNrOiBzdHJpbmcsXG4gICAgKSB7XG4gICAgfVxuXG4gICAgcHVibGljIHRvUHJpbWl0aXZlcygpOiBSZWNvcmQ8c3RyaW5nLCBQcmltaXRpdmVUeXBlPiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBvY2N1cnJlZE9uOiB0aGlzLm9jY3VycmVkT24udG9JU09TdHJpbmcoKSxcbiAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZSxcbiAgICAgICAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZSxcbiAgICAgICAgICAgIGh0dHBTdGF0dXM6IHRoaXMuaHR0cFN0YXR1cyxcbiAgICAgICAgICAgIHN0YWNrOiB0aGlzLnN0YWNrLFxuICAgICAgICB9XG4gICAgfVxufVxuIl19