df99d2363f428eb57bbd047d6b452164
"use strict";

/* istanbul ignore next */
function cov_27ry1vgf27() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/utils/Sleep.ts";
  var hash = "14bd83d4854d7e0780ee6990bf0a1a09c50254cc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/utils/Sleep.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 23
        }
      },
      "2": {
        start: {
          line: 4,
          column: 14
        },
        end: {
          line: 8,
          column: 2
        }
      },
      "3": {
        start: {
          line: 4,
          column: 24
        },
        end: {
          line: 8,
          column: 2
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 13
        }
      },
      "5": {
        start: {
          line: 6,
          column: 8
        },
        end: {
          line: 6,
          column: 19
        }
      },
      "6": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 9,
          column: 22
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 4,
            column: 14
          },
          end: {
            line: 4,
            column: 15
          }
        },
        loc: {
          start: {
            line: 4,
            column: 24
          },
          end: {
            line: 8,
            column: 2
          }
        },
        line: 4
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 4,
            column: 36
          },
          end: {
            line: 4,
            column: 37
          }
        },
        loc: {
          start: {
            line: 4,
            column: 49
          },
          end: {
            line: 8,
            column: 1
          }
        },
        line: 4
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 5,
            column: 15
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 21
          },
          end: {
            line: 7,
            column: 5
          }
        },
        line: 5
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/utils/Sleep.ts",
      mappings: ";;;AAAO,MAAM,KAAK,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;IACnD,UAAU,CAAC,GAAG,EAAE;QACZ,OAAO,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,EAAE,IAAI,CAAC,CAAC;AACb,CAAC,CAAC,CAAA;AAJW,QAAA,KAAK,SAIhB",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/utils/Sleep.ts"],
      sourcesContent: ["export const sleep = (time) => new Promise((resolve) => {\n    setTimeout(() => {\n        resolve(0);\n    }, time);\n})\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "14bd83d4854d7e0780ee6990bf0a1a09c50254cc"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_27ry1vgf27 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_27ry1vgf27();
cov_27ry1vgf27().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_27ry1vgf27().s[1]++;
exports.sleep = void 0;

/* istanbul ignore next */
cov_27ry1vgf27().s[2]++;

const sleep = (time) => {
  /* istanbul ignore next */
  cov_27ry1vgf27().f[0]++;
  cov_27ry1vgf27().s[3]++;
  return new Promise((resolve) => {
    /* istanbul ignore next */
    cov_27ry1vgf27().f[1]++;
    cov_27ry1vgf27().s[4]++;
    setTimeout(() => {
      /* istanbul ignore next */
      cov_27ry1vgf27().f[2]++;
      cov_27ry1vgf27().s[5]++;
      resolve(0);
    }, time);
  });
};

/* istanbul ignore next */
cov_27ry1vgf27().s[6]++;
exports.sleep = sleep;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbWljcm9rL3V0aWxzL1NsZWVwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQU8sTUFBTSxLQUFLLEdBQUcsQ0FBQyxJQUFELEtBQVU7QUFBQTtBQUFBO0FBQUE7QUFBQSxhQUFJLE9BQUosQ0FBWSxDQUFDLE9BQUQsS0FBWTtBQUFBO0FBQUE7QUFBQTtBQUNuRCxJQUFBLFVBQVUsQ0FBQyxNQUFLO0FBQUE7QUFBQTtBQUFBO0FBQ1osTUFBQSxPQUFPLENBQUMsQ0FBRCxDQUFQO0FBQ0gsS0FGUyxFQUVQLElBRk8sQ0FBVjtBQUdILEdBSjhCO0FBSTdCLENBSks7Ozs7QUFBTSxPQUFBLENBQUEsS0FBQSxHQUFLLEtBQUwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3Qgc2xlZXAgPSAodGltZSkgPT4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgcmVzb2x2ZSgwKTtcbiAgICB9LCB0aW1lKTtcbn0pXG4iXX0=