{"file":"/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/MessageNameFactory.ts","mappings":";;;;;AACA,yEAAiD;AAEjD,MAAqB,kBAAkB;IAEnC,MAAM,CAAC,MAAM,CACT,IAAY,EACZ,MAAc,EACd,IAAiB,EACjB,OAAO,GAAG,IAAI,CAAC,eAAe,EAC9B,OAAO,GAAG,MAAM,EAChB,WAAW,GAAG,eAAe;QAE7B,OAAO,IAAI,qBAAW,CAAC,GAAG,WAAW,IAAI,OAAO,IAAI,IAAI,IAAI,OAAO,IAAI,MAAM,IAAI,IAAI,EAAE,CAAC,CAAC;IAC7F,CAAC;;AAXL,qCAYC;AAX2B,kCAAe,GAAG,CAAC,CAAC","names":[],"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/MessageNameFactory.ts"],"sourcesContent":["import { MessageType } from '../message/MessageType';\nimport MessageName from '../message/MessageName';\n\nexport default class MessageNameFactory {\n    private static readonly DEFAULT_VERSION = 1;\n    static create(\n        name: string,\n        entity: string,\n        type: MessageType,\n        version = this.DEFAULT_VERSION,\n        service = 'auth',\n        companyName = 'invoicesystem',\n    ): MessageName {\n        return new MessageName(`${companyName}.${service}.${type}.${version}.${entity}.${name}`);\n    }\n}\n"],"version":3}