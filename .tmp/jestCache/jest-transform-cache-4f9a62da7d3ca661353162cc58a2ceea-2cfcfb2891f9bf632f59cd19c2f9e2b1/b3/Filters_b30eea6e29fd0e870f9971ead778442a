4412cf4e5b7bbb32b58daa927300d97f
"use strict";

/* istanbul ignore next */
function cov_29h8okxz19() {
  var path = "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/criteria/Filters.ts";
  var hash = "575e20577b5f885380b68383c2f6705ba7df2ab2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/criteria/Filters.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 25
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 36
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 31
        }
      },
      "4": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 68
        }
      },
      "5": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 31
        }
      },
      "6": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 26
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 25
          },
          end: {
            line: 8,
            column: 5
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 9,
            column: 4
          },
          end: {
            line: 9,
            column: 5
          }
        },
        loc: {
          start: {
            line: 9,
            column: 31
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 9
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    inputSourceMap: {
      file: "/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/criteria/Filters.ts",
      mappings: ";;;AAAA,qCAAkC;AAElC,MAAa,OAAO;IAGhB,YAAY,OAAiB;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAED,MAAM,CAAC,UAAU,CAAC,OAAmC;QACjD,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,eAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,MAAM,CAAC,IAAI;QACP,OAAO,IAAI,OAAO,CAAC,EAAE,CAAC,CAAC;IAC3B,CAAC;CACJ;AAdD,0BAcC",
      names: [],
      sources: ["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/criteria/Filters.ts"],
      sourcesContent: ["import { Filter } from './Filter';\n\nexport class Filters {\n    readonly filters: Filter[];\n\n    constructor(filters: Filter[]) {\n        this.filters = filters;\n    }\n\n    static fromValues(filters: Array<Map<string, string>>): Filters {\n        return new Filters(filters.map(Filter.fromValues));\n    }\n\n    static none(): Filters {\n        return new Filters([]);\n    }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "575e20577b5f885380b68383c2f6705ba7df2ab2"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29h8okxz19 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_29h8okxz19();
cov_29h8okxz19().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_29h8okxz19().s[1]++;
exports.Filters = void 0;
const Filter_1 =
/* istanbul ignore next */
(cov_29h8okxz19().s[2]++, require("./Filter"));

class Filters {
  constructor(filters) {
    /* istanbul ignore next */
    cov_29h8okxz19().f[0]++;
    cov_29h8okxz19().s[3]++;
    this.filters = filters;
  }

  static fromValues(filters) {
    /* istanbul ignore next */
    cov_29h8okxz19().f[1]++;
    cov_29h8okxz19().s[4]++;
    return new Filters(filters.map(Filter_1.Filter.fromValues));
  }

  static none() {
    /* istanbul ignore next */
    cov_29h8okxz19().f[2]++;
    cov_29h8okxz19().s[5]++;
    return new Filters([]);
  }

}

/* istanbul ignore next */
cov_29h8okxz19().s[6]++;
exports.Filters = Filters;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jdWF0cm9vY2hlbnRhL01hZ2ljU2hvcHBlci9tYWdpY3Nob3BwZXItbm9kZS9zcmMvbWljcm9rL2NvbW1vbi9jcml0ZXJpYS9GaWx0ZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRkEsTUFBQSxRQUFBO0FBQUE7QUFBQSwwQkFBQSxPQUFBLENBQUEsVUFBQSxDQUFBLENBQUE7O0FBRUEsTUFBYSxPQUFiLENBQW9CO0FBR2hCLEVBQUEsV0FBQSxDQUFZLE9BQVosRUFBNkI7QUFBQTtBQUFBO0FBQUE7QUFDekIsU0FBSyxPQUFMLEdBQWUsT0FBZjtBQUNIOztBQUVnQixTQUFWLFVBQVUsQ0FBQyxPQUFELEVBQW9DO0FBQUE7QUFBQTtBQUFBO0FBQ2pELFdBQU8sSUFBSSxPQUFKLENBQVksT0FBTyxDQUFDLEdBQVIsQ0FBWSxRQUFBLENBQUEsTUFBQSxDQUFPLFVBQW5CLENBQVosQ0FBUDtBQUNIOztBQUVVLFNBQUosSUFBSSxHQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ1AsV0FBTyxJQUFJLE9BQUosQ0FBWSxFQUFaLENBQVA7QUFDSDs7QUFiZTs7OztBQUFwQixPQUFBLENBQUEsT0FBQSxHQUFBLE9BQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGaWx0ZXIgfSBmcm9tICcuL0ZpbHRlcic7XG5cbmV4cG9ydCBjbGFzcyBGaWx0ZXJzIHtcbiAgICByZWFkb25seSBmaWx0ZXJzOiBGaWx0ZXJbXTtcblxuICAgIGNvbnN0cnVjdG9yKGZpbHRlcnM6IEZpbHRlcltdKSB7XG4gICAgICAgIHRoaXMuZmlsdGVycyA9IGZpbHRlcnM7XG4gICAgfVxuXG4gICAgc3RhdGljIGZyb21WYWx1ZXMoZmlsdGVyczogQXJyYXk8TWFwPHN0cmluZywgc3RyaW5nPj4pOiBGaWx0ZXJzIHtcbiAgICAgICAgcmV0dXJuIG5ldyBGaWx0ZXJzKGZpbHRlcnMubWFwKEZpbHRlci5mcm9tVmFsdWVzKSk7XG4gICAgfVxuXG4gICAgc3RhdGljIG5vbmUoKTogRmlsdGVycyB7XG4gICAgICAgIHJldHVybiBuZXcgRmlsdGVycyhbXSk7XG4gICAgfVxufVxuIl19