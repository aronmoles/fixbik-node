{"version":3,"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/app/Container.ts"],"names":[],"mappingsgBAAJ,EAAH,CAAf;AACA,MAAM,MAAM;AAAA;AAAA,2BAAG,IAAI,2BAAA,CAAA,cAAJ,CAAmB,SAAnB,CAAH,CAAZ;AACA,MAAM,GAAG;AAAA;AAAA;AAAG;AAAA,8BAAA,OAAO,CAAC,GAAR,CAAY,QAAZ;AAAA;AAAA,8BAAwB,KAAxB,CAAH,CAAT;AAEA,MAAM,UAAU;AAAA;AAAA,2BAAG,GAAG,SAAS,eAAe,GAAG,OAAjC,CAAhB;;;;;AACA,IAAI,EAAE,CAAC,UAAH,CAAc,UAAd,CAAJ,EAA+B;AAAA;AAAA;AAAA;AAC3B,EAAA,MAAM,CAAC,IAAP,CAAY,UAAZ;AACH,CAFD,MAEO;AAAA;AAAA;AAAA;AACH,QAAM,IAAI,KAAJ,CAAU,eAAe,UAAU,sBAAnC,CAAN;AACH;;;;AAED,SAAS,CAAC,OAAV;;;;AAEA,OAAA,CAAA,OAAA,GAAe,SAAf","sourcesContent":["/* eslint-disable no-undef */\nimport * as fs from 'fs';\nimport { ContainerBuilder, YamlFileLoader } from 'node-dependency-injection';\n\nconst Container = new ContainerBuilder();\nconst loader = new YamlFileLoader(Container);\nconst env = process.env.NODE_ENV || 'dev';\n\nconst configFile = `${__dirname}/config/app_${env}.yaml`;\nif (fs.existsSync(configFile)) {\n    loader.load(configFile);\n} else {\n    throw new Error(`Not exists <${configFile}> configuration file`)\n}\n\nContainer.compile()\n\nexport default Container;\n"]}