dbe65f5af63cafd56893b0850ebe2999
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const InfoQueryHandler_1 = __importDefault(require("../../../../src/modules/info/application/info/InfoQueryHandler"));
const InfoService_1 = __importDefault(require("../../../../src/modules/info/application/info/InfoService"));
const EventBusMock_1 = __importDefault(require("../__mocks__/EventBusMock"));
const InfoQueryMother_1 = __importDefault(require("../domain/InfoQueryMother"));
let handler;
let eventBus;
beforeEach(() => {
    eventBus = new EventBusMock_1.default();
    const creator = new InfoService_1.default(eventBus);
    handler = new InfoQueryHandler_1.default(creator);
});
describe('InfoRequest', () => {
    it('should retrieve a info of app', () => __awaiter(void 0, void 0, void 0, function* () {
        const query = InfoQueryMother_1.default.random();
        yield handler.handle(query);
        eventBus.hasBeenPublishedEvent();
    }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3Rlc3RzL21vZHVsZXMvaW5mby9hcGxpY2F0aW9uL0luZm9RdWVyeUhhbmRsZXIudGVzdC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBLHNIQUE4RjtBQUM5Riw0R0FBb0Y7QUFDcEYsNkVBQXFEO0FBQ3JELGdGQUF3RDtBQUV4RCxJQUFJLE9BQXlCLENBQUM7QUFDOUIsSUFBSSxRQUFzQixDQUFDO0FBRTNCLFVBQVUsQ0FBQyxHQUFHLEVBQUU7SUFDWixRQUFRLEdBQUcsSUFBSSxzQkFBWSxFQUFFLENBQUM7SUFDOUIsTUFBTSxPQUFPLEdBQUcsSUFBSSxxQkFBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzFDLE9BQU8sR0FBRyxJQUFJLDBCQUFnQixDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQzVDLENBQUMsQ0FBQyxDQUFDO0FBRUgsUUFBUSxDQUFDLGFBQWEsRUFBRSxHQUFHLEVBQUU7SUFDekIsRUFBRSxDQUFDLCtCQUErQixFQUFFLEdBQVMsRUFBRTtRQUMzQyxNQUFNLEtBQUssR0FBRyx5QkFBZSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBRXZDLE1BQU0sT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUU1QixRQUFRLENBQUMscUJBQXFCLEVBQUUsQ0FBQztJQUNyQyxDQUFDLENBQUEsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyxDQUFDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzL2N1YXRyb29jaGVudGEvTWFnaWNTaG9wcGVyL21hZ2ljc2hvcHBlci1ub2RlL3Rlc3RzL21vZHVsZXMvaW5mby9hcGxpY2F0aW9uL0luZm9RdWVyeUhhbmRsZXIudGVzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSW5mb1F1ZXJ5SGFuZGxlciBmcm9tICcuLi8uLi8uLi8uLi9zcmMvbW9kdWxlcy9pbmZvL2FwcGxpY2F0aW9uL2luZm8vSW5mb1F1ZXJ5SGFuZGxlcic7XG5pbXBvcnQgSW5mb1NlcnZpY2UgZnJvbSAnLi4vLi4vLi4vLi4vc3JjL21vZHVsZXMvaW5mby9hcHBsaWNhdGlvbi9pbmZvL0luZm9TZXJ2aWNlJztcbmltcG9ydCBFdmVudEJ1c01vY2sgZnJvbSAnLi4vX19tb2Nrc19fL0V2ZW50QnVzTW9jayc7XG5pbXBvcnQgSW5mb1F1ZXJ5TW90aGVyIGZyb20gJy4uL2RvbWFpbi9JbmZvUXVlcnlNb3RoZXInO1xuXG5sZXQgaGFuZGxlcjogSW5mb1F1ZXJ5SGFuZGxlcjtcbmxldCBldmVudEJ1czogRXZlbnRCdXNNb2NrO1xuXG5iZWZvcmVFYWNoKCgpID0+IHtcbiAgICBldmVudEJ1cyA9IG5ldyBFdmVudEJ1c01vY2soKTtcbiAgICBjb25zdCBjcmVhdG9yID0gbmV3IEluZm9TZXJ2aWNlKGV2ZW50QnVzKTtcbiAgICBoYW5kbGVyID0gbmV3IEluZm9RdWVyeUhhbmRsZXIoY3JlYXRvcik7XG59KTtcblxuZGVzY3JpYmUoJ0luZm9SZXF1ZXN0JywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgcmV0cmlldmUgYSBpbmZvIG9mIGFwcCcsIGFzeW5jICgpID0+IHtcbiAgICAgICAgY29uc3QgcXVlcnkgPSBJbmZvUXVlcnlNb3RoZXIucmFuZG9tKCk7XG5cbiAgICAgICAgYXdhaXQgaGFuZGxlci5oYW5kbGUocXVlcnkpO1xuXG4gICAgICAgIGV2ZW50QnVzLmhhc0JlZW5QdWJsaXNoZWRFdmVudCgpO1xuICAgIH0pO1xufSk7XG4iXSwidmVyc2lvbiI6M30=