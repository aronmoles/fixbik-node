{"file":"/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/application/login/LoginService.ts","mappings":";;;;;;;;;;;;;;AAAA,uEAA+C;AAK/C,MAAqB,YAAY;IAC7B,YACqB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;IAE3D,CAAC;IAEK,GAAG,CAAC,KAAoB,EAAE,QAA0B;;YACtD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;YAEnE,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAGnC,OAAO,IAAI,mBAAS,CAAC,YAAY,CAAC,CAAC;QACvC,CAAC;KAAA;CACJ;AAdD,+BAcC","names":[],"sources":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/application/login/LoginService.ts"],"sourcesContent":["import AuthToken from '../../domain/AuthToken';\nimport AuthUserEmail from '../../domain/AuthUserEmail';\nimport AuthUserPassword from '../../domain/AuthUserPassword';\nimport { AuthUserRepository } from '../../domain/AuthUserRepository';\n\nexport default class LoginService {\n    constructor(\n        private readonly authUserRepository: AuthUserRepository,\n    ) {\n    }\n\n    async run(email: AuthUserEmail, password: AuthUserPassword): Promise<AuthToken> {\n        const authUser = await this.authUserRepository.searchByEmail(email)\n\n        authUser.isValidPassword(password);\n\n\n        return new AuthToken('abcdefghai');\n    }\n}\n"],"version":3}