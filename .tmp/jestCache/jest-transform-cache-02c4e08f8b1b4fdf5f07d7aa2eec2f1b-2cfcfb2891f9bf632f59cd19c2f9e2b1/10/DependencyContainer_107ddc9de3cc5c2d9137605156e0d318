1232d01b554ab35a9bf40204401bbbbe
"use strict";

/* istanbul ignore next */
function cov_2ncf5ptdq7() {
  var path = "/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts";
  var hash = "b8fb297b3c6bcad4f09640a28b5e8a468f4241ad";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 31
        }
      },
      "2": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 35
        }
      },
      "3": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 43
        }
      },
      "4": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 27
        }
      },
      "5": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "6": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 17,
          column: 11
        }
      },
      "7": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 25,
          column: 11
        }
      },
      "8": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 74
        }
      },
      "9": {
        start: {
          line: 28,
          column: 57
        },
        end: {
          line: 28,
          column: 73
        }
      },
      "10": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 31,
          column: 9
        }
      },
      "11": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 76
        }
      },
      "12": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "13": {
        start: {
          line: 34,
          column: 37
        },
        end: {
          line: 34,
          column: 56
        }
      },
      "14": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 37,
          column: 17
        }
      },
      "15": {
        start: {
          line: 36,
          column: 20
        },
        end: {
          line: 36,
          column: 40
        }
      },
      "16": {
        start: {
          line: 38,
          column: 32
        },
        end: {
          line: 38,
          column: 71
        }
      },
      "17": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 45
        }
      },
      "18": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 31
        }
      },
      "19": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 43
        }
      },
      "20": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 68
        }
      },
      "21": {
        start: {
          line: 50,
          column: 28
        },
        end: {
          line: 50,
          column: 90
        }
      },
      "22": {
        start: {
          line: 51,
          column: 34
        },
        end: {
          line: 51,
          column: 95
        }
      },
      "23": {
        start: {
          line: 52,
          column: 21
        },
        end: {
          line: 62,
          column: 10
        }
      },
      "24": {
        start: {
          line: 53,
          column: 28
        },
        end: {
          line: 53,
          column: 45
        }
      },
      "25": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "26": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 61
        }
      },
      "27": {
        start: {
          line: 58,
          column: 17
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "28": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 59
        }
      },
      "29": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 147
        }
      },
      "30": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 52
        }
      },
      "31": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 68,
          column: 53
        }
      },
      "32": {
        start: {
          line: 67,
          column: 33
        },
        end: {
          line: 67,
          column: 59
        }
      },
      "33": {
        start: {
          line: 68,
          column: 30
        },
        end: {
          line: 68,
          column: 51
        }
      },
      "34": {
        start: {
          line: 71,
          column: 0
        },
        end: {
          line: 71,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        loc: {
          start: {
            line: 7,
            column: 18
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 36
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 37
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 13
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 27
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 28,
            column: 47
          },
          end: {
            line: 28,
            column: 48
          }
        },
        loc: {
          start: {
            line: 28,
            column: 57
          },
          end: {
            line: 28,
            column: 73
          }
        },
        line: 28
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 31
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 49
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 53,
            column: 18
          },
          end: {
            line: 53,
            column: 19
          }
        },
        loc: {
          start: {
            line: 53,
            column: 28
          },
          end: {
            line: 53,
            column: 45
          }
        },
        line: 53
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 54,
            column: 17
          },
          end: {
            line: 54,
            column: 18
          }
        },
        loc: {
          start: {
            line: 54,
            column: 39
          },
          end: {
            line: 62,
            column: 9
          }
        },
        line: 54
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        loc: {
          start: {
            line: 65,
            column: 18
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 65
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 67,
            column: 20
          },
          end: {
            line: 67,
            column: 21
          }
        },
        loc: {
          start: {
            line: 67,
            column: 33
          },
          end: {
            line: 67,
            column: 59
          }
        },
        line: 67
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 68,
            column: 17
          },
          end: {
            line: 68,
            column: 18
          }
        },
        loc: {
          start: {
            line: 68,
            column: 30
          },
          end: {
            line: 68,
            column: 51
          }
        },
        line: 68
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 22
          }
        }, {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 16,
            column: 28
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 24,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 24,
            column: 22
          }
        }, {
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 24,
            column: 28
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 31,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 33,
            column: 12
          },
          end: {
            line: 41,
            column: 13
          }
        }, {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 46,
            column: 68
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 37,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 37,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 51,
            column: 34
          },
          end: {
            line: 51,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 34
          },
          end: {
            line: 51,
            column: 89
          }
        }, {
          start: {
            line: 51,
            column: 93
          },
          end: {
            line: 51,
            column: 95
          }
        }],
        line: 51
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        }, {
          start: {
            line: 58,
            column: 17
          },
          end: {
            line: 60,
            column: 13
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 58,
            column: 17
          },
          end: {
            line: 60,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 17
          },
          end: {
            line: 60,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b8fb297b3c6bcad4f09640a28b5e8a468f4241ad"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ncf5ptdq7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2ncf5ptdq7();
cov_2ncf5ptdq7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2ncf5ptdq7().s[1]++;
exports.INJECT_TARGET = void 0;
const Utils_1 =
/* istanbul ignore next */
(cov_2ncf5ptdq7().s[2]++, require("../Utils"));

/* istanbul ignore next */
cov_2ncf5ptdq7().s[3]++;
exports.INJECT_TARGET = {
  name: 'Inject'
};

class DependencyContainer {
  constructor() {
    /* istanbul ignore next */
    cov_2ncf5ptdq7().f[0]++;
    cov_2ncf5ptdq7().s[4]++;
    this.services = [];

    /* istanbul ignore next */
    cov_2ncf5ptdq7().s[5]++;
    this.cache = new Map();
  }

  addInstance(key, service, tags) {
    /* istanbul ignore next */
    cov_2ncf5ptdq7().f[1]++;
    cov_2ncf5ptdq7().s[6]++;
    this.services.push({
      key,
      type: 'instance',
      service,
      tags:
      /* istanbul ignore next */
      (cov_2ncf5ptdq7().b[0][0]++, tags) ||
      /* istanbul ignore next */
      (cov_2ncf5ptdq7().b[0][1]++, [])
    });
  }

  addClass(key, constructor, tags) {
    /* istanbul ignore next */
    cov_2ncf5ptdq7().f[2]++;
    cov_2ncf5ptdq7().s[7]++;
    this.services.push({
      key,
      type: 'class',
      service: constructor,
      tags:
      /* istanbul ignore next */
      (cov_2ncf5ptdq7().b[1][0]++, tags) ||
      /* istanbul ignore next */
      (cov_2ncf5ptdq7().b[1][1]++, [])
    });
  }

  get(key) {
    /* istanbul ignore next */
    cov_2ncf5ptdq7().f[3]++;
    const serviceItem =
    /* istanbul ignore next */
    (cov_2ncf5ptdq7().s[8]++, this.services.find((item) => {
      /* istanbul ignore next */
      cov_2ncf5ptdq7().f[4]++;
      cov_2ncf5ptdq7().s[9]++;
      return item.key === key;
    }));

    /* istanbul ignore next */
    cov_2ncf5ptdq7().s[10]++;

    if (!serviceItem) {
      /* istanbul ignore next */
      cov_2ncf5ptdq7().b[2][0]++;
      cov_2ncf5ptdq7().s[11]++;
      throw new Error(`The service ${key.toString()} is not defined`);
    } else
    /* istanbul ignore next */
    {
      cov_2ncf5ptdq7().b[2][1]++;
    }

    cov_2ncf5ptdq7().s[12]++;

    switch (serviceItem.type) {
      case 'class':
        /* istanbul ignore next */
        cov_2ncf5ptdq7().b[3][0]++;
        {
          const cacheService =
          /* istanbul ignore next */
          (cov_2ncf5ptdq7().s[13]++, this.cache.get(key));

          /* istanbul ignore next */
          cov_2ncf5ptdq7().s[14]++;

          if (cacheService) {
            /* istanbul ignore next */
            cov_2ncf5ptdq7().b[4][0]++;
            cov_2ncf5ptdq7().s[15]++;
            return cacheService;
          } else
          /* istanbul ignore next */
          {
            cov_2ncf5ptdq7().b[4][1]++;
          }

          const service =
          /* istanbul ignore next */
          (cov_2ncf5ptdq7().s[16]++, this.buildInstance(serviceItem.service));

          /* istanbul ignore next */
          cov_2ncf5ptdq7().s[17]++;
          this.cache.set(key, service);

          /* istanbul ignore next */
          cov_2ncf5ptdq7().s[18]++;
          return service;
        }

      case 'instance':
        /* istanbul ignore next */
        cov_2ncf5ptdq7().b[3][1]++;
        {
          /* istanbul ignore next */
          cov_2ncf5ptdq7().s[19]++;
          return serviceItem.service;
        }

      default:
        /* istanbul ignore next */
        cov_2ncf5ptdq7().b[3][2]++;
        cov_2ncf5ptdq7().s[20]++;
        throw new Error(`Not allow ${String(key)} service`);
    }
  }

  buildInstance(constructor) {
    /* istanbul ignore next */
    cov_2ncf5ptdq7().f[5]++;
    const metadataKey =
    /* istanbul ignore next */
    (cov_2ncf5ptdq7().s[21]++, `${constructor.prototype.constructor.name}:constructor-params`);
    const constructorParams =
    /* istanbul ignore next */
    (cov_2ncf5ptdq7().s[22]++,
    /* istanbul ignore next */
    (cov_2ncf5ptdq7().b[5][0]++, Reflect.getMetadata(metadataKey, exports.INJECT_TARGET)) ||
    /* istanbul ignore next */
    (cov_2ncf5ptdq7().b[5][1]++, []));
    const args =
    /* istanbul ignore next */
    (cov_2ncf5ptdq7().s[23]++, constructorParams.sort((x, y) => {
      /* istanbul ignore next */
      cov_2ncf5ptdq7().f[6]++;
      cov_2ncf5ptdq7().s[24]++;
      return x.index - y.index;
    }).map((constructorParam) => {
      /* istanbul ignore next */
      cov_2ncf5ptdq7().f[7]++;
      cov_2ncf5ptdq7().s[25]++;

      if (constructorParam.serviceKey) {
        /* istanbul ignore next */
        cov_2ncf5ptdq7().b[6][0]++;
        cov_2ncf5ptdq7().s[26]++;
        return this.get(constructorParam.serviceKey);
      } else {
        /* istanbul ignore next */
        cov_2ncf5ptdq7().b[6][1]++;
        cov_2ncf5ptdq7().s[27]++;

        if (!(0, Utils_1.isNullOrUndefined)(constructorParam.tag)) {
          /* istanbul ignore next */
          cov_2ncf5ptdq7().b[7][0]++;
          cov_2ncf5ptdq7().s[28]++;
          return this.getByTag(constructorParam.tag);
        } else
        /* istanbul ignore next */
        {
          cov_2ncf5ptdq7().b[7][1]++;
        }
      }

      /* istanbul ignore next */
      cov_2ncf5ptdq7().s[29]++;
      throw new Error(`Constructor ${constructor.prototype.constructor.name}(${constructorParam.index}) not has defined service key or tag`);
    }));

    /* istanbul ignore next */
    cov_2ncf5ptdq7().s[30]++;
    return Reflect.construct(constructor, args);
  }

  getByTag(tag) {
    /* istanbul ignore next */
    cov_2ncf5ptdq7().f[8]++;
    cov_2ncf5ptdq7().s[31]++;
    return this.services.filter((service) => {
      /* istanbul ignore next */
      cov_2ncf5ptdq7().f[9]++;
      cov_2ncf5ptdq7().s[32]++;
      return service.tags.includes(tag);
    }).map((service) => {
      /* istanbul ignore next */
      cov_2ncf5ptdq7().f[10]++;
      cov_2ncf5ptdq7().s[33]++;
      return this.get(service.key);
    });
  }

}

/* istanbul ignore next */
cov_2ncf5ptdq7().s[34]++;
exports.default = DependencyContainer;