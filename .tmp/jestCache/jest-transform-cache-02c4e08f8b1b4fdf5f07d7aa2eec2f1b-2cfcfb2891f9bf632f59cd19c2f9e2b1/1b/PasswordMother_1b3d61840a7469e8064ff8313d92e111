dd04392670f1fbf4483609978de748ad
"use strict";

/* istanbul ignore next */
function cov_2g4lt4npo1() {
  var path = "/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/PasswordMother.ts";
  var hash = "4b47165be3e8cb0aae5841d592fa715906d711b9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/PasswordMother.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "2": {
        start: {
          line: 4,
          column: 24
        },
        end: {
          line: 4,
          column: 50
        }
      },
      "3": {
        start: {
          line: 7,
          column: 8
        },
        end: {
          line: 7,
          column: 74
        }
      },
      "4": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 6,
            column: 4
          },
          end: {
            line: 6,
            column: 5
          }
        },
        loc: {
          start: {
            line: 6,
            column: 20
          },
          end: {
            line: 8,
            column: 5
          }
        },
        line: 6
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0
    },
    b: {},
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4b47165be3e8cb0aae5841d592fa715906d711b9"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2g4lt4npo1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2g4lt4npo1();
cov_2g4lt4npo1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_2g4lt4npo1().s[1]++;
exports.PasswordMother = void 0;
const MotherCreator_1 =
/* istanbul ignore next */
(cov_2g4lt4npo1().s[2]++, require("./MotherCreator"));

class PasswordMother {
  static random() {
    /* istanbul ignore next */
    cov_2g4lt4npo1().f[0]++;
    cov_2g4lt4npo1().s[3]++;
    return MotherCreator_1.MotherCreator.random().internet.password();
  }

}

/* istanbul ignore next */
cov_2g4lt4npo1().s[4]++;
exports.PasswordMother = PasswordMother;