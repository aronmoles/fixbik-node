5f5a04df711500866f686973bed86c16
"use strict";

/* istanbul ignore next */
function cov_29o5i8fu8b() {
  var path = "/Users/cuatroochenta/FixBik/fixbik-node/src/app/config/index.ts";
  var hash = "bf45b1e2bd297f65a884283d064915fac49e5a83";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/FixBik/fixbik-node/src/app/config/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 46
        }
      },
      "2": {
        start: {
          line: 4,
          column: 21
        },
        end: {
          line: 4,
          column: 45
        }
      },
      "3": {
        start: {
          line: 5,
          column: 17
        },
        end: {
          line: 5,
          column: 36
        }
      },
      "4": {
        start: {
          line: 6,
          column: 20
        },
        end: {
          line: 6,
          column: 42
        }
      },
      "5": {
        start: {
          line: 7,
          column: 21
        },
        end: {
          line: 7,
          column: 44
        }
      },
      "6": {
        start: {
          line: 8,
          column: 21
        },
        end: {
          line: 8,
          column: 44
        }
      },
      "7": {
        start: {
          line: 9,
          column: 37
        },
        end: {
          line: 24,
          column: 1
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 36
        }
      },
      "9": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 23,
          column: 5
        }
      },
      "10": {
        start: {
          line: 13,
          column: 12
        },
        end: {
          line: 13,
          column: 50
        }
      },
      "11": {
        start: {
          line: 14,
          column: 12
        },
        end: {
          line: 14,
          column: 18
        }
      },
      "12": {
        start: {
          line: 16,
          column: 12
        },
        end: {
          line: 16,
          column: 52
        }
      },
      "13": {
        start: {
          line: 17,
          column: 12
        },
        end: {
          line: 17,
          column: 18
        }
      },
      "14": {
        start: {
          line: 19,
          column: 12
        },
        end: {
          line: 19,
          column: 52
        }
      },
      "15": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 18
        }
      },
      "16": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 56
        }
      },
      "17": {
        start: {
          line: 25,
          column: 0
        },
        end: {
          line: 25,
          column: 68
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 37
          },
          end: {
            line: 9,
            column: 38
          }
        },
        loc: {
          start: {
            line: 9,
            column: 57
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 9
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 23,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 12,
            column: 8
          },
          end: {
            line: 14,
            column: 18
          }
        }, {
          start: {
            line: 15,
            column: 8
          },
          end: {
            line: 17,
            column: 18
          }
        }, {
          start: {
            line: 18,
            column: 8
          },
          end: {
            line: 20,
            column: 18
          }
        }, {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 22,
            column: 56
          }
        }],
        line: 11
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0, 0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bf45b1e2bd297f65a884283d064915fac49e5a83"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29o5i8fu8b = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_29o5i8fu8b();
cov_29o5i8fu8b().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_29o5i8fu8b().s[1]++;
exports.configEnvDependencyContainer = void 0;
const ProcessEnv_1 =
/* istanbul ignore next */
(cov_29o5i8fu8b().s[2]++, require("../ProcessEnv"));
const config_1 =
/* istanbul ignore next */
(cov_29o5i8fu8b().s[3]++, require("./config"));
const configDev_1 =
/* istanbul ignore next */
(cov_29o5i8fu8b().s[4]++, require("./configDev"));
const configProd_1 =
/* istanbul ignore next */
(cov_29o5i8fu8b().s[5]++, require("./configProd"));
const configTest_1 =
/* istanbul ignore next */
(cov_29o5i8fu8b().s[6]++, require("./configTest"));

/* istanbul ignore next */
cov_29o5i8fu8b().s[7]++;

const configEnvDependencyContainer = (container, env) => {
  /* istanbul ignore next */
  cov_29o5i8fu8b().f[0]++;
  cov_29o5i8fu8b().s[8]++;
  (0, config_1.config)(container);

  /* istanbul ignore next */
  cov_29o5i8fu8b().s[9]++;

  switch (env) {
    case ProcessEnv_1.EnvMode.dev:
      /* istanbul ignore next */
      cov_29o5i8fu8b().b[0][0]++;
      cov_29o5i8fu8b().s[10]++;
      (0, configDev_1.configDev)(container);

      /* istanbul ignore next */
      cov_29o5i8fu8b().s[11]++;
      break;

    case ProcessEnv_1.EnvMode.prod:
      /* istanbul ignore next */
      cov_29o5i8fu8b().b[0][1]++;
      cov_29o5i8fu8b().s[12]++;
      (0, configProd_1.configProd)(container);

      /* istanbul ignore next */
      cov_29o5i8fu8b().s[13]++;
      break;

    case ProcessEnv_1.EnvMode.test:
      /* istanbul ignore next */
      cov_29o5i8fu8b().b[0][2]++;
      cov_29o5i8fu8b().s[14]++;
      (0, configTest_1.configTest)(container);

      /* istanbul ignore next */
      cov_29o5i8fu8b().s[15]++;
      break;

    default:
      /* istanbul ignore next */
      cov_29o5i8fu8b().b[0][3]++;
      cov_29o5i8fu8b().s[16]++;
      throw new Error('Configure DI Env invalid');
  }
};

/* istanbul ignore next */
cov_29o5i8fu8b().s[17]++;
exports.configEnvDependencyContainer = configEnvDependencyContainer;