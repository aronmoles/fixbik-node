5cfbdb9b471ec025f506f4171eb348c4
"use strict";

/* istanbul ignore next */
function cov_1mlxwz1u3g() {
  var path = "/Users/cuatroochenta/FixBik/fixbik-node/src/app/Container.ts";
  var hash = "515ca6e33a7962a529c356b132986c5e0e93708f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/FixBik/fixbik-node/src/app/Container.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 17
        },
        end: {
          line: 6,
          column: 36
        }
      },
      "4": {
        start: {
          line: 7,
          column: 30
        },
        end: {
          line: 7,
          column: 110
        }
      },
      "5": {
        start: {
          line: 8,
          column: 18
        },
        end: {
          line: 8,
          column: 53
        }
      },
      "6": {
        start: {
          line: 9,
          column: 12
        },
        end: {
          line: 9,
          column: 41
        }
      },
      "7": {
        start: {
          line: 10,
          column: 0
        },
        end: {
          line: 10,
          column: 59
        }
      },
      "8": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 11,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 9,
            column: 12
          },
          end: {
            line: 9,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 9,
            column: 12
          },
          end: {
            line: 9,
            column: 32
          }
        }, {
          start: {
            line: 9,
            column: 36
          },
          end: {
            line: 9,
            column: 41
          }
        }],
        line: 9
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "515ca6e33a7962a529c356b132986c5e0e93708f"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1mlxwz1u3g = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_1mlxwz1u3g();

var __importDefault =
/* istanbul ignore next */
(cov_1mlxwz1u3g().s[0]++,
/* istanbul ignore next */
(cov_1mlxwz1u3g().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1mlxwz1u3g().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1mlxwz1u3g().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1mlxwz1u3g().f[0]++;
  cov_1mlxwz1u3g().s[1]++;
  return (
    /* istanbul ignore next */
    (cov_1mlxwz1u3g().b[2][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1mlxwz1u3g().b[2][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_1mlxwz1u3g().b[1][0]++, mod) :
    /* istanbul ignore next */
    (cov_1mlxwz1u3g().b[1][1]++, {
      "default": mod
    })
  );
}));

/* istanbul ignore next */
cov_1mlxwz1u3g().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const config_1 =
/* istanbul ignore next */
(cov_1mlxwz1u3g().s[3]++, require("./config"));
const DependencyContainer_1 =
/* istanbul ignore next */
(cov_1mlxwz1u3g().s[4]++, __importDefault(require("../microk/core/infrastructure/di/DependencyContainer")));
const container =
/* istanbul ignore next */
(cov_1mlxwz1u3g().s[5]++, new DependencyContainer_1.default());
const env =
/* istanbul ignore next */
(cov_1mlxwz1u3g().s[6]++,
/* istanbul ignore next */
(cov_1mlxwz1u3g().b[3][0]++, process.env.NODE_ENV) ||
/* istanbul ignore next */
(cov_1mlxwz1u3g().b[3][1]++, 'dev'));

/* istanbul ignore next */
cov_1mlxwz1u3g().s[7]++;
(0, config_1.configEnvDependencyContainer)(container, env);

/* istanbul ignore next */
cov_1mlxwz1u3g().s[8]++;
exports.default = container;