619e1273c062b8061e29698694605999
"use strict";

/* istanbul ignore next */
function cov_18pyjimolr() {
  var path = "/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/ValueObjectTransformer.ts";
  var hash = "de01b7ad1b41c134bcfe4f7ddf4a303907396444";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/ValueObjectTransformer.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 3,
          column: 40
        }
      },
      "2": {
        start: {
          line: 4,
          column: 18
        },
        end: {
          line: 4,
          column: 36
        }
      },
      "3": {
        start: {
          line: 5,
          column: 31
        },
        end: {
          line: 15,
          column: 1
        }
      },
      "4": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 14,
          column: 6
        }
      },
      "5": {
        start: {
          line: 8,
          column: 12
        },
        end: {
          line: 10,
          column: 13
        }
      },
      "6": {
        start: {
          line: 9,
          column: 16
        },
        end: {
          line: 9,
          column: 26
        }
      },
      "7": {
        start: {
          line: 11,
          column: 12
        },
        end: {
          line: 11,
          column: 70
        }
      },
      "8": {
        start: {
          line: 13,
          column: 26
        },
        end: {
          line: 13,
          column: 63
        }
      },
      "9": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 16,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 31
          },
          end: {
            line: 5,
            column: 32
          }
        },
        loc: {
          start: {
            line: 5,
            column: 48
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 7,
            column: 12
          },
          end: {
            line: 7,
            column: 13
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 12,
            column: 9
          }
        },
        line: 7
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 13,
            column: 14
          },
          end: {
            line: 13,
            column: 15
          }
        },
        loc: {
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 63
          }
        },
        line: 13
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 12
          },
          end: {
            line: 10,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 12
          },
          end: {
            line: 10,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 8,
            column: 16
          },
          end: {
            line: 8,
            column: 52
          }
        }, {
          start: {
            line: 8,
            column: 56
          },
          end: {
            line: 8,
            column: 78
          }
        }, {
          start: {
            line: 8,
            column: 82
          },
          end: {
            line: 8,
            column: 104
          }
        }],
        line: 8
      },
      "2": {
        loc: {
          start: {
            line: 11,
            column: 19
          },
          end: {
            line: 11,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 11,
            column: 50
          },
          end: {
            line: 11,
            column: 56
          }
        }, {
          start: {
            line: 11,
            column: 59
          },
          end: {
            line: 11,
            column: 69
          }
        }],
        line: 11
      },
      "3": {
        loc: {
          start: {
            line: 11,
            column: 19
          },
          end: {
            line: 11,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 19
          },
          end: {
            line: 11,
            column: 30
          }
        }, {
          start: {
            line: 11,
            column: 34
          },
          end: {
            line: 11,
            column: 47
          }
        }],
        line: 11
      },
      "4": {
        loc: {
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 56
          }
        }, {
          start: {
            line: 13,
            column: 59
          },
          end: {
            line: 13,
            column: 63
          }
        }],
        line: 13
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "de01b7ad1b41c134bcfe4f7ddf4a303907396444"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18pyjimolr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_18pyjimolr();
cov_18pyjimolr().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_18pyjimolr().s[1]++;
exports.ValueObjectTransformer = void 0;
const typeorm_1 =
/* istanbul ignore next */
(cov_18pyjimolr().s[2]++, require("typeorm"));

/* istanbul ignore next */
cov_18pyjimolr().s[3]++;

const ValueObjectTransformer = (valueObject) => {
  /* istanbul ignore next */
  cov_18pyjimolr().f[0]++;
  cov_18pyjimolr().s[4]++;
  return {
    to: (vo) => {
      /* istanbul ignore next */
      cov_18pyjimolr().f[1]++;
      cov_18pyjimolr().s[5]++;

      if (
      /* istanbul ignore next */
      (cov_18pyjimolr().b[1][0]++, vo instanceof typeorm_1.FindOperator) ||
      /* istanbul ignore next */
      (cov_18pyjimolr().b[1][1]++, typeof vo === 'string') ||
      /* istanbul ignore next */
      (cov_18pyjimolr().b[1][2]++, typeof vo === 'number')) {
        /* istanbul ignore next */
        cov_18pyjimolr().b[0][0]++;
        cov_18pyjimolr().s[6]++;
        return vo;
      } else
      /* istanbul ignore next */
      {
        cov_18pyjimolr().b[0][1]++;
      }

      cov_18pyjimolr().s[7]++;
      return (
        /* istanbul ignore next */
        (cov_18pyjimolr().b[3][0]++, vo === null) ||
        /* istanbul ignore next */
        (cov_18pyjimolr().b[3][1]++, vo === void 0) ?
        /* istanbul ignore next */
        (cov_18pyjimolr().b[2][0]++, void 0) :
        /* istanbul ignore next */
        (cov_18pyjimolr().b[2][1]++, vo.value())
      );
    },
    from: (value) => {
      /* istanbul ignore next */
      cov_18pyjimolr().f[2]++;
      cov_18pyjimolr().s[8]++;
      return value ?
      /* istanbul ignore next */
      (cov_18pyjimolr().b[4][0]++, new valueObject(value)) :
      /* istanbul ignore next */
      (cov_18pyjimolr().b[4][1]++, null);
    }
  };
};

/* istanbul ignore next */
cov_18pyjimolr().s[9]++;
exports.ValueObjectTransformer = ValueObjectTransformer;