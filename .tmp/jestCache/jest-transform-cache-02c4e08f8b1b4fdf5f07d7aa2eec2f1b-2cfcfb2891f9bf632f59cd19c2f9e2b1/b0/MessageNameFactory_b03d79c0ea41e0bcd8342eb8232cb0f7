5f68c3ce216bf5160f489bf903680061
"use strict";

/* istanbul ignore next */
function cov_16uexqzzrx() {
  var path = "/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/MessageNameFactory.ts";
  var hash = "478be97d2cdba833d8e916ce4aec0e566d59e4ed";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/MessageNameFactory.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 6,
          column: 72
        }
      },
      "4": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 107
        }
      },
      "5": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 12,
          column: 37
        }
      },
      "6": {
        start: {
          line: 13,
          column: 0
        },
        end: {
          line: 13,
          column: 39
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 8,
            column: 5
          }
        },
        loc: {
          start: {
            line: 8,
            column: 119
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 8,
            column: 38
          },
          end: {
            line: 8,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 8,
            column: 48
          },
          end: {
            line: 8,
            column: 68
          }
        }],
        line: 8
      },
      "4": {
        loc: {
          start: {
            line: 8,
            column: 70
          },
          end: {
            line: 8,
            column: 86
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 8,
            column: 80
          },
          end: {
            line: 8,
            column: 86
          }
        }],
        line: 8
      },
      "5": {
        loc: {
          start: {
            line: 8,
            column: 88
          },
          end: {
            line: 8,
            column: 117
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 8,
            column: 102
          },
          end: {
            line: 8,
            column: 117
          }
        }],
        line: 8
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0],
      "5": [0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "478be97d2cdba833d8e916ce4aec0e566d59e4ed"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_16uexqzzrx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_16uexqzzrx();

var __importDefault =
/* istanbul ignore next */
(cov_16uexqzzrx().s[0]++,
/* istanbul ignore next */
(cov_16uexqzzrx().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_16uexqzzrx().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_16uexqzzrx().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_16uexqzzrx().f[0]++;
  cov_16uexqzzrx().s[1]++;
  return (
    /* istanbul ignore next */
    (cov_16uexqzzrx().b[2][0]++, mod) &&
    /* istanbul ignore next */
    (cov_16uexqzzrx().b[2][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_16uexqzzrx().b[1][0]++, mod) :
    /* istanbul ignore next */
    (cov_16uexqzzrx().b[1][1]++, {
      "default": mod
    })
  );
}));

/* istanbul ignore next */
cov_16uexqzzrx().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const MessageName_1 =
/* istanbul ignore next */
(cov_16uexqzzrx().s[3]++, __importDefault(require("../message/MessageName")));

class MessageNameFactory {
  static create(name, entity, type, version =
  /* istanbul ignore next */
  (cov_16uexqzzrx().b[3][0]++, this.DEFAULT_VERSION), service =
  /* istanbul ignore next */
  (cov_16uexqzzrx().b[4][0]++, 'auth'), companyName =
  /* istanbul ignore next */
  (cov_16uexqzzrx().b[5][0]++, 'invoicesystem')) {
    /* istanbul ignore next */
    cov_16uexqzzrx().f[1]++;
    cov_16uexqzzrx().s[4]++;
    return new MessageName_1.default(`${companyName}.${service}.${type}.${version}.${entity}.${name}`);
  }

}

/* istanbul ignore next */
cov_16uexqzzrx().s[5]++;
exports.default = MessageNameFactory;

/* istanbul ignore next */
cov_16uexqzzrx().s[6]++;
MessageNameFactory.DEFAULT_VERSION = 1;