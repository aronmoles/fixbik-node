1cc474c8e0750230fc04bd7b434b4195
"use strict";

/* istanbul ignore next */
function cov_jeifgnp27() {
  var path = "/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUser.ts";
  var hash = "647d8ac9ea80aa4049b9b3240c5671233f913297";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUser.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 6,
          column: 26
        }
      },
      "4": {
        start: {
          line: 7,
          column: 44
        },
        end: {
          line: 7,
          column: 107
        }
      },
      "5": {
        start: {
          line: 8,
          column: 41
        },
        end: {
          line: 8,
          column: 101
        }
      },
      "6": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 9,
          column: 71
        }
      },
      "7": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 16
        }
      },
      "8": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 21
        }
      },
      "9": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 27
        }
      },
      "10": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 33
        }
      },
      "11": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 57
        }
      },
      "12": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 25,
          column: 10
        }
      },
      "13": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "14": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 65
        }
      },
      "15": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 75
        }
      },
      "16": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 34,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 5
          }
        },
        loc: {
          start: {
            line: 11,
            column: 59
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 11
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 27
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 27
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 24,
            column: 34
          },
          end: {
            line: 24,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 95
          },
          end: {
            line: 24,
            column: 101
          }
        }, {
          start: {
            line: 24,
            column: 104
          },
          end: {
            line: 24,
            column: 114
          }
        }],
        line: 24
      },
      "4": {
        loc: {
          start: {
            line: 24,
            column: 34
          },
          end: {
            line: 24,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 34
          },
          end: {
            line: 24,
            column: 75
          }
        }, {
          start: {
            line: 24,
            column: 79
          },
          end: {
            line: 24,
            column: 92
          }
        }],
        line: 24
      },
      "5": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 30,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: null,
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "647d8ac9ea80aa4049b9b3240c5671233f913297"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_jeifgnp27 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_jeifgnp27();

var __importDefault =
/* istanbul ignore next */
(cov_jeifgnp27().s[0]++,
/* istanbul ignore next */
(cov_jeifgnp27().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_jeifgnp27().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_jeifgnp27().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_jeifgnp27().f[0]++;
  cov_jeifgnp27().s[1]++;
  return (
    /* istanbul ignore next */
    (cov_jeifgnp27().b[2][0]++, mod) &&
    /* istanbul ignore next */
    (cov_jeifgnp27().b[2][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_jeifgnp27().b[1][0]++, mod) :
    /* istanbul ignore next */
    (cov_jeifgnp27().b[1][1]++, {
      "default": mod
    })
  );
}));

/* istanbul ignore next */
cov_jeifgnp27().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_jeifgnp27().s[3]++;
exports.AuthUser = void 0;
const AuthUserAuthenticated_DomainEvent_1 =
/* istanbul ignore next */
(cov_jeifgnp27().s[4]++, __importDefault(require("./AuthUserAuthenticated.DomainEvent")));
const AuthUserIncorrectPasswordError_1 =
/* istanbul ignore next */
(cov_jeifgnp27().s[5]++, __importDefault(require("./AuthUserIncorrectPasswordError")));
const AggregateRoot_1 =
/* istanbul ignore next */
(cov_jeifgnp27().s[6]++, require("../../../microk/common/AggregateRoot"));

class AuthUser extends
/* istanbul ignore next */
(AggregateRoot_1.AggregateRoot) {
  constructor(id, email, password, recoverPasswordToken) {
    /* istanbul ignore next */
    cov_jeifgnp27().f[1]++;
    cov_jeifgnp27().s[7]++;
    super();

    /* istanbul ignore next */
    cov_jeifgnp27().s[8]++;
    this.id = id;

    /* istanbul ignore next */
    cov_jeifgnp27().s[9]++;
    this.email = email;

    /* istanbul ignore next */
    cov_jeifgnp27().s[10]++;
    this.password = password;

    /* istanbul ignore next */
    cov_jeifgnp27().s[11]++;
    this.recoverPasswordToken = recoverPasswordToken;
  }

  toPrimitives() {
    /* istanbul ignore next */
    cov_jeifgnp27().f[2]++;

    var _a;

    /* istanbul ignore next */
    cov_jeifgnp27().s[12]++;
    return {
      id: this.id.value(),
      email: this.email.value(),
      password: this.password.value(),
      recoverPasswordToken:
      /* istanbul ignore next */
      (cov_jeifgnp27().b[4][0]++, (_a = this.recoverPasswordToken) === null) ||
      /* istanbul ignore next */
      (cov_jeifgnp27().b[4][1]++, _a === void 0) ?
      /* istanbul ignore next */
      (cov_jeifgnp27().b[3][0]++, void 0) :
      /* istanbul ignore next */
      (cov_jeifgnp27().b[3][1]++, _a.value())
    };
  }

  authenticate(password) {
    /* istanbul ignore next */
    cov_jeifgnp27().f[3]++;
    cov_jeifgnp27().s[13]++;

    if (!this.password.equals(password)) {
      /* istanbul ignore next */
      cov_jeifgnp27().b[5][0]++;
      cov_jeifgnp27().s[14]++;
      throw new AuthUserIncorrectPasswordError_1.default();
    } else
    /* istanbul ignore next */
    {
      cov_jeifgnp27().b[5][1]++;
    }

    cov_jeifgnp27().s[15]++;
    this.record(new AuthUserAuthenticated_DomainEvent_1.default(this));
  }

}

/* istanbul ignore next */
cov_jeifgnp27().s[16]++;
exports.AuthUser = AuthUser;