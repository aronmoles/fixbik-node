d9751b326cc0abba8c139f0311bafc30
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Container_1 = __importDefault(require("../../../../../src/app/Container"));
const AuthUserMother_1 = __importDefault(require("../../domain/AuthUserMother"));
const Keys_1 = require("../../../../../src/modules/shared/infrastructure/di/Keys");
const repository = Container_1.default.get(Keys_1.Keys.Auth.AuthTokenRepository);
describe('AuthTokenRepository', () => {
    describe('#generate', () => {
        it('should generate a new auth token', () => __awaiter(void 0, void 0, void 0, function* () {
            const authUser = AuthUserMother_1.default.random();
            const authToken = yield repository.generate(authUser);
            expect(authToken).toBeDefined();
            expect(authToken.toString()).toBeDefined();
        }));
    });
});
