[["/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/info/InfoQueryHandler.test.ts",{"fileContent":"\n// let repository: CourseRepositoryMock;\n// let handler: CreateCourseCommandHandler;\n//\n// const eventBus = new EventBusMock();\n\nbeforeEach(() => {\n    // repository = new CourseRepositoryMock();\n    // const creator = new CourseCreator(repository, eventBus);\n    // handler = new CreateCourseCommandHandler(creator);\n});\n\ndescribe('InfoRequest', () => {\n    it('should retrieve a info of app', async() => {\n    // const command = CreateCourseCommandMother.random();\n    //\n    // await handler.handle(command);\n    //\n    // const course = CourseMother.fromCommand(command);\n    // repository.assertLastSavedCourseIs(course);\n\n        expect(1).toEqual(1)\n    });\n});\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/info/aplication/InfoQueryHandler.test.ts",{"fileContent":"import InfoQueryHandler from '../../../../src/modules/info/application/info/InfoQueryHandler';\nimport InfoService from '../../../../src/modules/info/application/info/InfoService';\nimport EventBusMock from '../__mocks__/EventBusMock';\nimport InfoQueryMother from '../domain/InfoQueryMother';\n\nlet handler: InfoQueryHandler;\nlet eventBus: EventBusMock;\n\nbeforeEach(() => {\n    eventBus = new EventBusMock();\n    const creator = new InfoService(eventBus);\n    handler = new InfoQueryHandler(creator);\n});\n\ndescribe('InfoRequest', () => {\n    it('should retrieve a info of app', async () => {\n        const query = InfoQueryMother.random();\n\n        await handler.handle(query);\n\n        eventBus.hasBeenPublishedEvent();\n    });\n});\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/info/InfoQueryHandler.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/info/InfoService.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/info/__mocks__/EventBusMock.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/info/domain/InfoQueryMother.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/QueryHandler.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/info/InfoResponse.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/info/InfoQuery.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/EventBus.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/utils/Sleep.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/domain/InfoRequestedDomainEvent.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Mapper.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/EventSubscriber.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/info/InfoQueryHandler.ts",{"fileContent":"import { QueryHandler } from '@microk/cqrs/domain/query/QueryHandler';\nimport { InfoResponse } from './InfoResponse';\nimport InfoQuery from './InfoQuery';\nimport InfoService from './InfoService';\n\nexport default class InfoQueryHandler extends QueryHandler<InfoQuery, InfoResponse> {\n    constructor(private readonly infoService: InfoService) {\n        super(InfoQuery)\n    }\n\n    handle(query: InfoQuery): Promise<InfoResponse> {\n        return this.infoService.invoke();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/QueryHandler.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/info/InfoResponse.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/info/InfoQuery.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/info/InfoService.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Type.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/QueryResponse.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/EventBus.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/utils/Sleep.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/domain/InfoRequestedDomainEvent.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/QueryHandler.ts",{"fileContent":"import { NewableClass } from '../../../common/NewableClass';\nimport Query from './Query';\nimport { QueryResponse } from './QueryResponse';\n\nexport abstract class QueryHandler<Q extends Query, R extends QueryResponse> {\n    private readonly _queryName: string;\n\n    protected constructor(query: NewableClass<Query>) {\n        this._queryName = query.name;\n    }\n\n    public subscribedTo(): string {\n        return this._queryName;\n    }\n\n    abstract handle(query: Q): Promise<R>;\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/NewableClass.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/QueryResponse.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/info/InfoQuery.ts",{"fileContent":"import MessageId from '@microk/common/message/MessageId';\nimport { MessageType } from '@microk/common/message/MessageType';\nimport MessageNameFactory from '@microk/common/value-object/MessageNameFactory';\nimport Query from '@microk/cqrs/domain/query/Query';\n\nexport default class InfoQuery extends Query {\n    constructor() {\n        super(\n            MessageId.create(),\n            MessageNameFactory.create('consulted', 'info', MessageType.QUERY),\n        );\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts",{"fileContent":"import Uuid from '../value-object/Uuid';\n\nexport default class MessageId extends Uuid {\n    static create(): MessageId {\n        return Uuid.create();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/InvalidArgumentError.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts",{"fileContent":"import { ValueObject } from './ValueObject';\nimport { InvalidArgumentError } from './InvalidArgumentError';\nimport { v4, validate } from 'uuid';\n\nexport default class Uuid extends ValueObject<string> {\n    constructor(value: string) {\n        super(value)\n        this.ensureIsValidUuid(value);\n    }\n\n    static create(): Uuid {\n        return new Uuid(v4());\n    }\n\n    private ensureIsValidUuid(uuid: string): void {\n        if (!validate(uuid)) {\n            throw new InvalidArgumentError(`<${this.constructor.name}> does not allow the value <${uuid}>`);\n        }\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/InvalidArgumentError.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts",{"fileContent":"import { PrimitiveType } from '../PrimitiveType';\nimport { InvalidArgumentError } from './InvalidArgumentError';\n\nexport abstract class ValueObject<T extends PrimitiveType> {\n    protected constructor(\n        private readonly _value: T,\n    ) {\n        this.ensureValueIsDefined(_value);\n    }\n\n    private ensureValueIsDefined(value: T): void {\n        if (value === null || value === undefined) {\n            throw new InvalidArgumentError('Value must be defined');\n        }\n    }\n\n    public value(): T {\n        return this._value;\n    }\n\n    public equals(other: ValueObject<T>): boolean {\n        return this.value() === other.value();\n    }\n\n    protected toJSON() {\n        return this.toString();\n    }\n\n    toString() {\n        if (this._value) {\n            return this._value.toString();\n        }\n\n        return this._value;\n    }\n\n    valueOf() {\n        return this._value;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/InvalidArgumentError.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/InvalidArgumentError.ts",{"fileContent":"export class InvalidArgumentError extends Error {}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts",{"fileContent":"export enum MessageType {\n    DOMAIN_EVENT = 'domain-event',\n    COMMAND = 'command',\n    QUERY = 'query',\n}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/MessageNameFactory.ts",{"fileContent":"import { MessageType } from '../message/MessageType';\nimport MessageName from '../message/MessageName';\n\nexport default class MessageNameFactory {\n    private static readonly DEFAULT_VERSION = 1;\n    static create(\n        name: string,\n        entity: string,\n        type: MessageType,\n        version = this.DEFAULT_VERSION,\n        service = 'auth',\n        companyName = 'invoicesystem',\n    ): MessageName {\n        return new MessageName(`${companyName}.${service}.${type}.${version}.${entity}.${name}`);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/StringValueObject.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts",{"fileContent":"import { StringValueObject } from '../value-object/StringValueObject';\n\n/**\n * Standard to name MessageName\n * CompanyName.service.version.{event | command | query}.entity.name\n */\nexport default class MessageName extends StringValueObject {\n\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/StringValueObject.ts",{"fileContent":"import { ValueObject } from './ValueObject';\n\nexport abstract class StringValueObject extends ValueObject<string> {\n    constructor(value: string) {\n        super(value);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/Query.ts",{"fileContent":"import SimpleMessage from '../../../common/message/SimpleMessage';\nimport MessageMeta from '../../../common/message/MessageMeta';\nimport MessageName from '../../../common/message/MessageName';\nimport { MessageType } from '../../../common/message/MessageType';\nimport MessageId from '../../../common/message/MessageId';\n\nexport default class Query extends SimpleMessage {\n    constructor(id: MessageId, name: MessageName, meta?: MessageMeta) {\n        super(id, MessageType.QUERY, name, meta);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/Message.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Serializable.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/SimpleMessage.ts",{"fileContent":"import Message from './Message';\n\nexport default class SimpleMessage extends Message {\n\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/Message.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Serializable.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/Message.ts",{"fileContent":"import { MessageType } from './MessageType';\nimport MessageId from './MessageId';\nimport MessageName from './MessageName';\nimport MessageMeta from './MessageMeta';\nimport Serializable from '../Serializable';\nimport { PrimitivesObject } from '../PrimitiveType';\n\nexport default abstract class Message implements Serializable {\n    protected constructor(\n        protected readonly _id: MessageId,\n        protected readonly _type: MessageType,\n        protected readonly _name: MessageName,\n        protected readonly _meta: MessageMeta = new MessageMeta(),\n    ) {}\n\n    get id(): MessageId {\n        return this._id;\n    }\n\n    get type(): MessageType {\n        return this._type;\n    }\n\n    get name(): MessageName {\n        return this._name;\n    }\n\n    public get meta(): MessageMeta {\n        return this._meta;\n    }\n\n    toPrimitive(): PrimitivesObject {\n        return {\n            id: this._id.value(),\n            name: this._name.value(),\n            type: this._type.toString(),\n            meta: this._meta.toPrimitive(),\n        };\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Serializable.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/StringValueObject.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts",{"fileContent":"import { PrimitivesObject, PrimitiveType } from '../PrimitiveType';\nimport Serializable from '../Serializable';\n\ntype MessageMetaType = {\n    correlationId?: string,\n    replyTo?: string,\n    time?: number,\n    [key: string]: PrimitiveType,\n}\n\nexport default class MessageMeta implements Serializable {\n    static KEYS = {\n        CORRELATION_ID: 'correlationId',\n        REPLY_TO: 'replyTo',\n        TIME: 'time',\n    };\n\n    constructor(\n        private readonly value: MessageMetaType = {},\n    ) {}\n\n    set(key: string, value: PrimitiveType): void {\n        this.value[key] = value;\n    }\n\n    toPrimitive(): PrimitivesObject {\n        return this.value;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Serializable.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/info/InfoService.ts",{"fileContent":"import Uuid from '@microk/common/value-object/Uuid';\nimport EventBus from '@microk/event/domain/EventBus';\nimport { sleep } from '@microk/utils/Sleep';\nimport InfoRequestedDomainEvent from '../../domain/InfoRequestedDomainEvent';\nimport { InfoResponse } from './InfoResponse';\n\nexport default class InfoService {\n    constructor(private readonly eventBus: EventBus) {\n    }\n\n    public async invoke(): Promise<InfoResponse> {\n        // throw new NotFoundHttpError('Esto es un error tocho');\n        await sleep(1200)\n\n        this.eventBus.publish([new InfoRequestedDomainEvent(Uuid.create())])\n\n        return {\n            name: 'is-auth',\n            version: '1.0.0',\n        };\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/EventBus.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/utils/Sleep.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/domain/InfoRequestedDomainEvent.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/info/InfoResponse.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/InvalidArgumentError.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/QueryResponse.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/utils/Sleep.ts",{"fileContent":"export const sleep = (time) => new Promise((resolve) => {\n    setTimeout(() => {\n        resolve(0);\n    }, time);\n})\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/domain/InfoRequestedDomainEvent.ts",{"fileContent":"import { MessageType } from '@microk/common/message/MessageType';\nimport MessageNameFactory from '@microk/common/value-object/MessageNameFactory';\nimport Uuid from '@microk/common/value-object/Uuid';\nimport DomainEvent from '../../../microk/event/domain/DomainEvent';\nimport MessageId from '../../../microk/common/message/MessageId';\nimport AggregateMessageOccurredOn from '../../../microk/common/message/AggregateMessageOccurredOn';\n\nexport default class InfoRequestedDomainEvent extends DomainEvent {\n    static EVENT_NAME = MessageNameFactory.create('requested', 'info', MessageType.DOMAIN_EVENT);\n\n    constructor(\n        aggregateId: Uuid,\n    ) {\n        super(\n            MessageId.create(),\n            InfoRequestedDomainEvent.EVENT_NAME,\n            aggregateId,\n            AggregateMessageOccurredOn.now(),\n        );\n    }\n\n    static fromPrimitives(args: any): InfoRequestedDomainEvent {\n        return new InfoRequestedDomainEvent(new Uuid(args.aggregateId));\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/InvalidArgumentError.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/DateValueObject.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/DomainEvent.ts",{"fileContent":"import AggregateMessage from '../../common/message/AggregateMessage';\nimport MessageMeta from '../../common/message/MessageMeta';\nimport { MessageType } from '../../common/message/MessageType';\nimport MessageName from '../../common/message/MessageName';\nimport AggregateMessageOccurredOn from '../../common/message/AggregateMessageOccurredOn';\nimport MessageId from '../../common/message/MessageId';\nimport Uuid from '../../common/value-object/Uuid';\n\nexport default abstract class DomainEvent extends AggregateMessage {\n    protected constructor(\n        id: MessageId,\n        name: MessageName,\n        aggregateId: Uuid,\n        occurredOn: AggregateMessageOccurredOn,\n        meta: MessageMeta = new MessageMeta(),\n    ) {\n        super(id, MessageType.DOMAIN_EVENT, name, aggregateId, occurredOn, meta);\n    }\n}\n\nexport type DomainEventClass = { EVENT_NAME: MessageName, fromPrimitives(...args: any[]): DomainEvent; };\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/Message.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Serializable.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/DateValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/InvalidArgumentError.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessage.ts",{"fileContent":"import { PrimitivesObject } from '../PrimitiveType';\nimport Uuid from '../value-object/Uuid';\nimport Message from './Message';\nimport MessageMeta from './MessageMeta';\nimport { MessageType } from './MessageType';\nimport MessageName from './MessageName';\nimport MessageId from './MessageId';\nimport AggregateMessageOccurredOn from './AggregateMessageOccurredOn';\n\nexport default abstract class AggregateMessage extends Message {\n    protected constructor(\n        id: MessageId,\n        type: MessageType,\n        name: MessageName,\n        protected readonly aggregateId: Uuid,\n        protected readonly occurredOn: AggregateMessageOccurredOn,\n        meta: MessageMeta = new MessageMeta()\n    ) {\n        super(id, type, name, meta);\n    }\n\n    toPrimitive(): PrimitivesObject {\n        return {\n            ...super.toPrimitive(),\n            aggregateId: this.aggregateId.value(),\n            occurredOn: this.occurredOn.toString(),\n        };\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/Message.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/InvalidArgumentError.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Serializable.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/DateValueObject.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessageOccurredOn.ts",{"fileContent":"import { DateValueObject } from '../value-object/DateValueObject';\n\nexport default class AggregateMessageOccurredOn extends DateValueObject {\n    static now(): AggregateMessageOccurredOn {\n        return new AggregateMessageOccurredOn(new Date());\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/DateValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/DateValueObject.ts",{"fileContent":"import { ValueObject } from './ValueObject';\n\nexport abstract class DateValueObject extends ValueObject<Date> {\n    protected constructor(value: Date) {\n        super(value);\n    }\n\n    toString() {\n        if (super.value()) {\n            return super.value().toISOString();\n        }\n        return super.toString();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/info/__mocks__/EventBusMock.ts",{"fileContent":"import { Mapper } from '@microk/common/Mapper';\nimport MessageName from '@microk/common/message/MessageName';\nimport DomainEvent from '@microk/event/domain/DomainEvent';\nimport EventBus from '@microk/event/domain/EventBus';\nimport EventSubscriber from '@microk/event/domain/EventSubscriber';\n\nexport default class EventBusMock implements EventBus {\n    private publishSpy = jest.fn();\n\n    async publish(events: DomainEvent[]) {\n        this.publishSpy(events);\n    }\n\n    attachMapper(domainEventSubscriberMapper: Mapper<MessageName, Array<EventSubscriber<DomainEvent>>>): void {\n    }\n\n    hasBeenPublishedEvent() {\n        expect(this.publishSpy).toHaveBeenCalled();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Mapper.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/EventBus.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/EventSubscriber.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/info/domain/InfoQueryMother.ts",{"fileContent":"import InfoQuery from '../../../../src/modules/info/application/info/InfoQuery';\n\nexport default class InfoQueryMother {\n    private static create() {\n        return new InfoQuery();\n    }\n\n    static random(): InfoQuery {\n        return this.create();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/info/InfoQuery.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/Query.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/auth/infrastructure/persistence/AuthUserRepository.test.ts",{"fileContent":"import { EnvironmentArranger } from '@microk/tests/domain/EnvironmentArranger';\nimport Container from '../../../../../src/app/Container';\nimport { AuthUserRepository } from '../../../../../src/modules/auth/domain/AuthUserRepository';\nimport AuthUserMother from '../../domain/AuthUserMother';\n\nconst repository: AuthUserRepository = Container.get('Auth.domain.AuthUserRepository');\nconst environmentArranger: EnvironmentArranger = Container.get('Test.EnvironmentArranger');\n\nbeforeEach(async () => {\n    await (await environmentArranger).arrange();\n});\n\nafterAll(async () => {\n    await (await environmentArranger).arrange();\n    await (await environmentArranger).close();\n});\n\ndescribe('AuthUserRepository', () => {\n    describe('#save', () => {\n        it('should save a auth user', async () => {\n            const authUser = AuthUserMother.random();\n\n            await repository.save(authUser);\n        });\n    });\n});\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/tests/domain/EnvironmentArranger.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/app/Container.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserRepository.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/auth/domain/AuthUserMother.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Nullable.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUser.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/auth/domain/AuthUserEmailMother.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/auth/domain/AuthUserIdMother.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/auth/domain/AuthUserPasswordMother.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/app/Container.ts",{"fileContent":"/* eslint-disable no-undef */\nimport * as fs from 'fs';\nimport { ContainerBuilder, YamlFileLoader } from 'node-dependency-injection';\n\nconst Container = new ContainerBuilder();\nconst loader = new YamlFileLoader(Container);\nconst env = process.env.NODE_ENV || 'dev';\n\nconst configFile = `${__dirname}/config/app_${env}.yaml`;\nif (fs.existsSync(configFile)) {\n    loader.load(configFile);\n} else {\n    throw new Error(`Not exists <${configFile}> configuration file`)\n}\n\nContainer.compile()\n\nexport default Container;\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/infrastructure/SystemLogger.ts",{"fileContent":"/* eslint-disable no-console */\nimport Logger from '../domain/Logger';\n\nexport default class SystemLogger implements Logger {\n    debug(...messages: string[]): void {\n        console.debug(messages);\n    }\n\n    error(message: string | Error): void {\n        console.error(message);\n    }\n\n    info(message: string): void {\n        console.info(message);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/Logger.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/app/ProcessEnv.ts",{"fileContent":"/* eslint-disable no-undef, @typescript-eslint/no-var-requires */\nimport Env from '@microk/core/domain/Env';\nimport * as fs from 'fs';\n\nexport enum EnvMode {\n    dev,\n    test,\n    prod,\n}\n\nexport interface EnvKey {\n    NODE_ENV: string;\n    PORT: string;\n\n    RABBITMQ_HOST: string;\n    RABBITMQ_USER: string;\n    RABBITMQ_PASSWORD: string;\n    RABBITMQ_EXCHANGE: string;\n    RABBITMQ_QUEUE: string;\n\n    MYSQL_HOST: string;\n    MYSQL_PORT: string;\n    MYSQL_USER: string;\n    MYSQL_PASSWORD: string;\n    MYSQL_DATABASE: string;\n}\n\nexport default class ProcessEnv implements Env<EnvKey> {\n    private readonly env: EnvKey;\n\n    constructor() {\n        this.env = {\n            NODE_ENV: process.env.NODE_ENV,\n            PORT: '3000',\n\n            RABBITMQ_HOST: '',\n            RABBITMQ_USER: '',\n            RABBITMQ_PASSWORD: '',\n            RABBITMQ_EXCHANGE: '',\n            RABBITMQ_QUEUE: '',\n\n            MYSQL_HOST: '',\n            MYSQL_PORT: '',\n            MYSQL_USER: '',\n            MYSQL_PASSWORD: '',\n            MYSQL_DATABASE: '',\n        };\n\n        // TODO Crear un DotEnv\n        const modeEnvFilePath = `${__dirname}/../../.env.${process.env.NODE_ENV}`;\n        if (fs.existsSync(modeEnvFilePath)) {\n            require('dotenv').config({ path: modeEnvFilePath });\n        } else {\n            const envFilePath = `${__dirname}/../../.env`;\n            if (fs.existsSync(envFilePath)) {\n                require('dotenv').config({ path: envFilePath });\n            }\n        }\n\n        const envKeys = Object.keys(this.env) as Array<keyof EnvKey>;\n\n        for (const key of envKeys) {\n            const value = process.env[key];\n\n            if (value) {\n                this.env[key] = value;\n            } else {\n                throw new Error(`Missing env key ${key}`);\n            }\n        }\n\n        if (!Object.keys(EnvMode).includes(this.get('NODE_ENV'))) {\n            throw new Error('Invalid NODE_ENV value.');\n        }\n    }\n\n    public get<T extends keyof EnvKey>(key: T): EnvKey[T] {\n        return this.env[key];\n    }\n\n    public set<T extends keyof EnvKey>(key: T, value: EnvKey[T]) {\n        this.env[key] = value;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/Env.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/infrastructure/command/CommandHandlersMapper.ts",{"fileContent":"import { Mapper } from '../../../common/Mapper';\nimport Command from '../../domain/command/Command';\nimport CommandHandler from '../../domain/command/CommandHandler';\nimport { CommandNotRegisteredError } from '../../domain/command/CommandNotRegisteredError';\n\nexport class CommandHandlersMapper implements Mapper<Command, CommandHandler<Command>> {\n    private commandHandlersMap: Map<string, CommandHandler<Command>>;\n\n    constructor(commandHandlers: Array<CommandHandler<Command>>) {\n        this.commandHandlersMap = this.formatHandlers(commandHandlers);\n    }\n\n    private formatHandlers(commandHandlers: Array<CommandHandler<Command>>): Map<string, CommandHandler<Command>> {\n        const handlersMap = new Map();\n\n        commandHandlers.forEach((commandHandler) => {\n            handlersMap.set(commandHandler.subscribedTo(), commandHandler);\n        });\n\n        return handlersMap;\n    }\n\n    public search(command: Command): CommandHandler<Command> {\n        const commandHandler = this.commandHandlersMap.get(command.constructor.name);\n\n        if (!commandHandler) {\n            throw new CommandNotRegisteredError(command);\n        }\n\n        return commandHandler;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Mapper.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/command/Command.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/command/CommandHandler.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/command/CommandNotRegisteredError.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/NewableClass.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/command/CommandNotRegisteredError.ts",{"fileContent":"import Command from './Command';\n\nexport class CommandNotRegisteredError extends Error {\n    constructor(command: Command) {\n        super(`The command <${command.constructor.name}> has not a command handler associated`);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/command/Command.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/infrastructure/command/InMemoryCommandBus.ts",{"fileContent":"import { Mapper } from '../../../common/Mapper';\nimport WrapperExecutor from '../../../core/domain/WrapperExecutor';\nimport Executor from '../../../core/infrastructure/Executor';\nimport Command from '../../domain/command/Command';\nimport { CommandBus } from '../../domain/command/CommandBus';\nimport CommandHandler from '../../domain/command/CommandHandler';\n\nexport class InMemoryCommandBus implements CommandBus {\n    private readonly executor: Executor<Command, void>;\n\n    constructor(\n        private readonly commandHandlersMapper: Mapper<Command, CommandHandler<Command>>,\n        executors: WrapperExecutor<Command, void>[] = [],\n    ) {\n        this.executor = new Executor<Command, void>(executors);\n    }\n\n    async dispatch(command: Command): Promise<void> {\n        return this.executor.run(command, async () => {\n            const handler = this.commandHandlersMapper.search(command);\n            await handler.handle(command);\n        })\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Mapper.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/WrapperExecutor.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/infrastructure/Executor.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/command/Command.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/command/CommandBus.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/command/CommandHandler.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/NewableClass.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/infrastructure/Executor.ts",{"fileContent":"import WrapperExecutor from '../domain/WrapperExecutor';\n\nexport default class Executor<A, R> {\n    constructor(\n        private readonly wrapperExecutors: WrapperExecutor<A, R>[],\n    ) {\n    }\n\n    run(arg: A, next: () => Promise<R>): Promise<R> {\n        const runner = (index: number) => {\n            if (this.wrapperExecutors[index]) {\n                return this.wrapperExecutors[index].run(arg, () => runner(index + 1))\n            }\n            return next();\n        }\n\n        return runner(0)\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/WrapperExecutor.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/infrastructure/query/QueryHandlersMapper.ts",{"fileContent":"import Query from '../../domain/query/Query';\nimport { QueryHandler } from '../../domain/query/QueryHandler';\nimport { QueryNotRegisteredError } from '../../domain/query/QueryNotRegisteredError';\nimport { QueryResponse } from '../../domain/query/QueryResponse';\n\nexport default class QueryHandlersMapper {\n    private queryHandlersMap: Map<string, QueryHandler<Query, QueryResponse>>;\n\n    constructor(queryHandlers: Array<QueryHandler<Query, QueryResponse>>) {\n        this.queryHandlersMap = this.formatHandlers(queryHandlers);\n    }\n\n    private formatHandlers(\n        queryHandlers: Array<QueryHandler<Query, QueryResponse>>\n    ): Map<string, QueryHandler<Query, QueryResponse>> {\n        const handlersMap = new Map();\n\n        queryHandlers.forEach((queryHandler) => {\n            handlersMap.set(queryHandler.subscribedTo(), queryHandler);\n        });\n\n        return handlersMap;\n    }\n\n    public search(query: Query): QueryHandler<Query, QueryResponse> {\n        const queryHandler = this.queryHandlersMap.get(query.constructor.name);\n\n        if (!queryHandler) {\n            throw new QueryNotRegisteredError(query);\n        }\n\n        return queryHandler;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/QueryHandler.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/QueryNotRegisteredError.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/QueryResponse.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/NewableClass.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/QueryNotRegisteredError.ts",{"fileContent":"import Query from './Query';\n\nexport class QueryNotRegisteredError extends Error {\n    constructor(query: Query) {\n        super(`The query <${query.constructor.name}> hasn't a query handler associated`);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/infrastructure/query/InMemoryQueryBus.ts",{"fileContent":"import { Mapper } from '../../../common/Mapper';\nimport WrapperExecutor from '../../../core/domain/WrapperExecutor';\nimport Executor from '../../../core/infrastructure/Executor';\nimport Query from '../../domain/query/Query';\nimport QueryBus from '../../domain/query/QueryBus';\nimport { QueryHandler } from '../../domain/query/QueryHandler';\nimport { QueryResponse } from '../../domain/query/QueryResponse';\n\nexport default class InMemoryQueryBus implements QueryBus {\n    private readonly executor: Executor<Query, QueryResponse>;\n\n    constructor(\n        private readonly queryHandlersMapper: Mapper<Query, QueryHandler<Query, QueryResponse>>,\n        executors: WrapperExecutor<Query, QueryResponse>[] = [],\n    ) {\n        this.executor = new Executor<Query, QueryResponse>(executors);\n    }\n\n    ask<R extends QueryResponse>(query: Query): Promise<R> {\n        return this.executor.run(query, () => {\n            const handler = this.queryHandlersMapper.search(query);\n            return handler.handle(query);\n        }) as Promise<R>;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Mapper.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/WrapperExecutor.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/infrastructure/Executor.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/QueryBus.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/QueryHandler.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/QueryResponse.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/NewableClass.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/infrastructure/EventSubscriberMapper.ts",{"fileContent":"import { Mapper } from '../../common/Mapper';\nimport MessageName from '../../common/message/MessageName';\nimport DomainEvent from '../domain/DomainEvent';\nimport EventSubscriber from '../domain/EventSubscriber';\n\nexport class EventSubscriberMapper implements Mapper<MessageName, EventSubscriber<DomainEvent>[]> {\n    private domainEventSubscribersMap: Map<string, Array<EventSubscriber<DomainEvent>>>;\n\n    constructor(domainEventSubscribers: Array<EventSubscriber<DomainEvent>>) {\n        this.domainEventSubscribersMap = this.formatEventSubscribers(domainEventSubscribers);\n    }\n\n    private formatEventSubscribers(\n        domainEventSubscribers: Array<EventSubscriber<DomainEvent>>,\n    ): Map<string, Array<EventSubscriber<DomainEvent>>> {\n        const domainEventSubscribersMap = new Map<string, Array<EventSubscriber<DomainEvent>>>();\n\n        domainEventSubscribers.forEach((domainEventSubscriber) => {\n            domainEventSubscriber.subscribedTo().forEach((domainEventClass) => {\n                let domainEventSubscribersInMap = domainEventSubscribersMap.get(domainEventClass.EVENT_NAME.value());\n                if (!domainEventSubscribersInMap) {\n                    domainEventSubscribersInMap = [];\n                }\n                domainEventSubscribersInMap.push(domainEventSubscriber)\n                domainEventSubscribersMap.set(domainEventClass.EVENT_NAME.value(), domainEventSubscribersInMap)\n            })\n        });\n\n        return domainEventSubscribersMap;\n    }\n\n    public search(messageName: MessageName): Array<EventSubscriber<DomainEvent>> {\n        const domainEventSubscribers = this.domainEventSubscribersMap.get(messageName.value());\n\n        if (!domainEventSubscribers) {\n            return [];\n        }\n\n        return domainEventSubscribers;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Mapper.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/EventSubscriber.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/shared/infrastructure/RabbitMqConfigFactory.ts",{"fileContent":"import Env from '@microk/core/domain/Env';\nimport RabbitMqConfig from '@microk/event/infrastructure/rabbit-mq/RabbitMqConfig';\nimport { EnvKey } from '../../../app/ProcessEnv';\n\nexport default class RabbitMqConfigFactory {\n    static createConfig(env: Env<EnvKey>): RabbitMqConfig {\n        return ({\n            host: env.get('RABBITMQ_HOST'),\n            user: env.get('RABBITMQ_USER'),\n            password: env.get('RABBITMQ_PASSWORD'),\n            exchange: env.get('RABBITMQ_EXCHANGE'),\n            queue: env.get('RABBITMQ_QUEUE'),\n        })\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/Env.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/infrastructure/rabbit-mq/RabbitMqConfig.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/app/ProcessEnv.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/infrastructure/EventClassMapper.ts",{"fileContent":"import { Optional } from '../../common/Optional';\nimport DomainEvent, { DomainEventClass } from '../domain/DomainEvent';\nimport EventSubscriber from '../domain/EventSubscriber';\n\ntype Mapping = Map<string, DomainEventClass>;\n\nexport class EventClassMapper {\n    private mapping: Mapping;\n\n    constructor(mapping: EventSubscriber<DomainEvent>[]) {\n        this.mapping = mapping.reduce(this.eventsExtractor(), new Map<string, DomainEventClass>());\n    }\n\n    private eventsExtractor() {\n        return (map: Mapping, subscriber: EventSubscriber<DomainEvent>) => {\n            subscriber.subscribedTo().forEach((domainEventClass) => {\n                map.set(domainEventClass.EVENT_NAME.value(), domainEventClass);\n            });\n            return map;\n        };\n    }\n\n    for(name: string): Optional<DomainEventClass> {\n        const domainEvent = this.mapping.get(name);\n\n        if (!domainEvent) {\n            return undefined;\n        }\n\n        return domainEvent;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Optional.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/EventSubscriber.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/infrastructure/EventJsonDeserializer.ts",{"fileContent":"import DomainEvent from '../domain/DomainEvent';\nimport EventDeserializer from '../domain/EventDeserializer';\nimport { EventClassMapper } from './EventClassMapper';\nimport { Optional } from '../../common/Optional';\n\nexport class EventJsonDeserializer implements EventDeserializer {\n    private mapping: EventClassMapper;\n\n    constructor(mapping: EventClassMapper) {\n        this.mapping = mapping;\n    }\n\n    deserialize(eventString: string): Optional<DomainEvent> {\n        const event = JSON.parse(eventString);\n        const eventData = event.data;\n        const eventMeta = event.meta;\n        const eventName = eventData.name;\n        const eventClass = this.mapping.for(eventName);\n\n        if (!eventClass) {\n            return undefined;\n        }\n\n        return eventClass.fromPrimitives({\n            id: eventData.id,\n            name: eventData.name,\n            type: eventData.type,\n            aggregateId: eventData.aggregateId,\n            occurredOn: eventData.occurredOn,\n            eventMeta,\n        });\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/EventDeserializer.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/infrastructure/EventClassMapper.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Optional.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/EventSubscriber.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/infrastructure/rabbit-mq/RabbitMqEventBus.ts",{"fileContent":"import { Connection, Message, Exchange, Queue } from 'amqp-ts';\nimport MessageName from '../../../common/message/MessageName';\nimport Logger from '../../../core/domain/Logger';\nimport WrapperExecutor from '../../../core/domain/WrapperExecutor';\nimport Executor from '../../../core/infrastructure/Executor';\nimport DomainEvent from '../../domain/DomainEvent';\nimport EventBus from '../../domain/EventBus';\nimport EventSubscriber from '../../domain/EventSubscriber';\nimport RabbitMqConfig from './RabbitMqConfig';\nimport { EventJsonDeserializer } from '../EventJsonDeserializer';\nimport { Mapper } from '../../../common/Mapper';\n\nexport default class RabbitMqEventbus implements EventBus {\n    private readonly executor: Executor<DomainEvent, void>;\n\n    private readonly connection: Connection;\n    private readonly exchange: Exchange;\n    private readonly queue: Queue;\n\n    constructor(\n        config: RabbitMqConfig,\n        private readonly domainEventSubscriberMapper: Mapper<MessageName, Array<EventSubscriber<DomainEvent>>>,\n        private readonly deserializer: EventJsonDeserializer,\n        private readonly logger: Logger,\n        executors: WrapperExecutor<DomainEvent, void>[] = [],\n    ) {\n        this.executor = new Executor<DomainEvent, void>(executors);\n\n        this.connection = new Connection(`amqp://${config.user}:${config.password}@${config.host}`);\n        this.exchange = this.connection.declareExchange(config.exchange, 'fanout', { durable: false });\n        this.queue = this.connection.declareQueue(config.queue);\n    }\n\n    async start(): Promise<void> {\n        if (!this.deserializer) {\n            throw new Error('RabbitMqEventBus has not being properly initialized, deserializer is missing');\n        }\n\n        await this.connection.completeConfiguration();\n\n        await this.queue.bind(this.exchange);\n        await this.queue.stopConsumer();\n        await this.queue.activateConsumer(\n            async(message) => {\n                try {\n                    const event = this.deserializer.deserialize(message.content.toString());\n                    if (event) {\n                        const subscribers = this.domainEventSubscriberMapper.search(event.name);\n                        if (subscribers) {\n                            const subscribersNames = subscribers.map((subscriber) => subscriber.constructor.name);\n                            this.logger.info(`[RabbitMqEventBus] Message processed: ${event.name.toString()} by ${subscribersNames.join(', ')}`);\n                            const subscribersExecutions = subscribers.map((subscriber) => {\n                                return this.executor.run(event, async () => subscriber.dispatch(event))\n                            });\n                            await Promise.all(subscribersExecutions);\n                        }\n                    }\n                    message.ack();\n                } catch (error) {\n                    message.reject()\n                }\n            },\n            { noAck: false }\n        );\n    }\n\n    async publish(events: Array<DomainEvent>): Promise<void> {\n        events.forEach((event) => {\n            const eventPrimitive = event.toPrimitive();\n            const message = new Message({\n                data: {\n                    ...eventPrimitive,\n                    meta: undefined,\n                },\n                meta: eventPrimitive.meta,\n            });\n            this.logger.info(`[RabbitMqEventBus] Event to be published: ${event.name.toString()}`);\n            this.exchange.send(message);\n        });\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/Logger.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/WrapperExecutor.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/infrastructure/Executor.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/EventBus.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/EventSubscriber.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/infrastructure/rabbit-mq/RabbitMqConfig.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/infrastructure/EventJsonDeserializer.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Mapper.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/EventDeserializer.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/infrastructure/EventClassMapper.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Optional.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/infrastructure/Discoverer.ts",{"fileContent":"export default class Discoverer<T> {\n    constructor(\n        private readonly data: T,\n    ) {\n    }\n\n    discover(): T {\n        return this.data;\n    }\n}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/utils/FileErrorTracker.ts",{"fileContent":"import ErrorTracker from '../core/domain/error/ErrorTracker';\nimport { TrackError } from '../core/domain/error/TrackError';\nimport * as fs from 'fs';\n\nexport default class FileErrorTracker implements ErrorTracker {\n    async track(trackError: TrackError): Promise<void> {\n        fs.appendFileSync(\n            'errors.log',\n            JSON.stringify(trackError.toPrimitives(), null, 2),\n        )\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/error/ErrorTracker.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/error/TrackError.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/http/HttpStatus.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/http/HttpError.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/infrastructure/error/PersistErrorMiddleware.ts",{"fileContent":"import ErrorTracker from '../../domain/error/ErrorTracker';\nimport { TrackError } from '../../domain/error/TrackError';\nimport { ErrorMiddleware, ErrorMiddlewareNext } from '../../domain/ErrorMiddleware';\nimport { Request } from '../../domain/http/Request';\nimport { Response } from '../../domain/http/Response';\n\nexport default class PersistErrorMiddleware implements ErrorMiddleware {\n    constructor(\n        private readonly errorTracker: ErrorTracker,\n    ) {}\n\n    apply(error: Error, req: Request, res: Response, next: ErrorMiddlewareNext): void {\n        if (this.errorTracker) {\n            this.errorTracker.track(TrackError.fromError(error));\n        }\n        next(error);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/error/ErrorTracker.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/error/TrackError.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/ErrorMiddleware.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/http/Request.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/http/Response.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/http/HttpStatus.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/http/HttpError.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/error/TrackError.ts",{"fileContent":"import { HttpStatus } from '../../../common/http/HttpStatus';\nimport { PrimitiveType } from '../../../common/PrimitiveType';\nimport HttpError from '../../../common/http/HttpError';\n\nexport class TrackError {\n    static fromError(error: Error): TrackError {\n        return new TrackError(\n            new Date(),\n            error.constructor.name,\n            error.message,\n            error instanceof HttpError ? error.code : HttpStatus.INTERNAL_SERVER_ERROR,\n            error.stack,\n        )\n    }\n\n    private constructor(\n        private readonly occurredOn: Date,\n        private readonly name: string,\n        private readonly message: string,\n        private readonly httpStatus: HttpStatus,\n        private readonly stack: string,\n    ) {\n    }\n\n    public toPrimitives(): Record<string, PrimitiveType> {\n        return {\n            occurredOn: this.occurredOn.toISOString(),\n            name: this.name,\n            message: this.message,\n            httpStatus: this.httpStatus,\n            stack: this.stack,\n        }\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/http/HttpStatus.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/http/HttpError.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/http/HttpStatus.ts",{"fileContent":"export enum HttpStatus {\n    OK = 200,\n    CREATED = 201,\n\n    BAD_REQUEST = 400,\n    UNAUTHORIZED = 401,\n    PAYMENT_REQUIRED = 402,\n    FORBIDDEN = 403,\n    NOT_FOUND = 404,\n    METHOD_NOT_ALLOWED = 405,\n    NOT_ACCEPTABLE = 406,\n    PROXY_AUTHENTICATION_REQUIRED = 407,\n    REQUEST_TIMEOUT = 408,\n    CONFLICT = 409,\n    GONE = 410,\n    PAYLOAD_TOO_LARGE = 413,\n\n    INTERNAL_SERVER_ERROR = 500,\n    NOT_IMPLEMENTED = 501,\n}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/http/HttpError.ts",{"fileContent":"import { HttpStatus } from './HttpStatus';\n\nexport default class HttpError extends Error {\n    constructor(\n        private readonly _code: HttpStatus,\n        message: string,\n    ) {\n        super(message);\n    }\n\n    get code(): HttpStatus {\n        return this._code;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/http/HttpStatus.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/infrastructure/HttpErrorMiddleware.ts",{"fileContent":"import HttpError from '../../common/http/HttpError';\nimport { HttpStatus } from '../../common/http/HttpStatus';\nimport Logger from '../domain/Logger';\nimport { ErrorMiddleware, ErrorMiddlewareNext } from '../domain/ErrorMiddleware';\nimport { Request } from '../domain/http/Request';\nimport { Response } from '../domain/http/Response';\n\nexport default class HttpErrorMiddleware implements ErrorMiddleware {\n    constructor(\n        private readonly logger: Logger,\n    ) {}\n\n    apply(error: Error, req: Request, res: Response, next: ErrorMiddlewareNext): void {\n        this.logger.error(`Error: ${error.message}`);\n        const statusCode = error instanceof HttpError ? error.code : HttpStatus.INTERNAL_SERVER_ERROR;\n        res.status(statusCode).send({\n            errors: {\n                title: error.message,\n            },\n        });\n        next(error);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/http/HttpError.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/http/HttpStatus.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/Logger.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/ErrorMiddleware.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/http/Request.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/http/Response.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/utils/FileMessageStore.ts",{"fileContent":"import MessageStore from '../message-store/domain/MessageStore';\nimport * as fs from 'fs';\nimport Message from '../common/message/Message';\n\nexport default class FileMessageStore implements MessageStore {\n    async store(message: Message): Promise<void> {\n        fs.appendFileSync(\n            'message-store.log',\n            JSON.stringify(message.toPrimitive(), null, 2),\n        )\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/message-store/domain/MessageStore.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/Message.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Serializable.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/message-store/infrastructure/StoreMessageBusMiddleware.ts",{"fileContent":"import Message from '../../common/message/Message';\nimport WrapperExecutor from '../../core/domain/WrapperExecutor';\nimport MessageStore from '../domain/MessageStore';\n\nexport default class StoreMessageBusMiddleware implements WrapperExecutor<Message, any> {\n    constructor(private readonly messageStore: MessageStore) {}\n\n    async run(message: Message, next: () => Promise<any>): Promise<any> {\n        const res = await next();\n        await this.messageStore.store(message);\n        return res;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/Message.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/WrapperExecutor.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/message-store/domain/MessageStore.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Serializable.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/utils/TimeBusMiddleware.ts",{"fileContent":"import MessageMeta from '../common/message/MessageMeta';\nimport WrapperExecutor from '../core/domain/WrapperExecutor';\nimport Logger from '../core/domain/Logger';\nimport Message from '../common/message/Message';\n\nexport default class TimeBusMiddleware implements WrapperExecutor<Message, any> {\n    constructor(private readonly logger: Logger) {}\n\n    async run(message: Message, next: () => Promise<any>): Promise<any> {\n        const startTimestamp = Date.now();\n        const res = await next();\n        const endTimestamp = Date.now();\n\n        const time = endTimestamp - startTimestamp;\n        message.meta.set(MessageMeta.KEYS.TIME, time);\n        this.logger.info(`${message.name.value()} ${endTimestamp - startTimestamp}ms`);\n\n        return res;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/WrapperExecutor.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/Logger.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/Message.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Serializable.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/shared/infrastructure/persistence/typeorm/TypeOrmConfigFactory.ts",{"fileContent":"import Env from '@microk/core/domain/Env';\nimport { TypeOrmConfig } from '@microk/persistence/infrastructure/typeorm/TypeOrmConfig';\nimport { EnvKey } from '../../../../../app/ProcessEnv';\n\nexport class TypeOrmConfigFactory {\n    static createConfig(env: Env<EnvKey>): TypeOrmConfig {\n        return {\n            host: env.get('MYSQL_HOST'),\n            port: Number(env.get('MYSQL_PORT')),\n            username: env.get('MYSQL_USER'),\n            password: env.get('MYSQL_PASSWORD'),\n            database: env.get('MYSQL_DATABASE'),\n        };\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/Env.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/persistence/infrastructure/typeorm/TypeOrmConfig.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/app/ProcessEnv.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/persistence/infrastructure/typeorm/TypeOrmClientFactory.ts",{"fileContent":"import { Connection, createConnection, getConnection } from 'typeorm';\nimport { TypeOrmConfig } from './TypeOrmConfig';\n\nexport class TypeOrmClientFactory {\n    static async createClient(config: TypeOrmConfig): Promise<Connection> {\n        try {\n            const connection = await createConnection({\n                type: 'mysql',\n                host: config.host,\n                port: config.port,\n                username: config.username,\n                password: config.password,\n                database: config.database,\n                // eslint-disable-next-line no-undef\n                entities: [`${__dirname}/../../../../../src/**/**/infrastructure/persistence/typeorm/*{.js,.ts}`],\n                synchronize: false,\n                logging: false,\n                migrationsTableName: 'migrations',\n                migrations: ['migration/*.js'],\n                cli: {\n                    migrationsDir: 'migration',\n                },\n            });\n\n            return connection;\n        } catch (error) {\n            // eslint-disable-next-line no-console\n            console.log('error', error);\n            return getConnection();\n        }\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/persistence/infrastructure/typeorm/TypeOrmConfig.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/infrastructure/InfoController.ts",{"fileContent":"import { HttpMethod } from '@microk/common/http/HttpMethod';\nimport { HttpStatus } from '@microk/common/http/HttpStatus';\nimport Controller from '@microk/core/domain/http/Controller';\nimport { ControllerConfig } from '@microk/core/domain/http/ControllerConfig';\nimport { Request } from '@microk/core/domain/http/Request';\nimport { Response } from '@microk/core/domain/http/Response';\nimport QueryBus from '@microk/cqrs/domain/query/QueryBus';\nimport InfoQuery from '../application/info/InfoQuery';\nimport { InfoResponse } from '../application/info/InfoResponse';\n\nexport default class InfoController implements Controller {\n    constructor(\n       private readonly queryBus: QueryBus,\n    ) {\n    }\n\n    config(): ControllerConfig {\n        return {\n            method: HttpMethod.GET,\n            path: '/',\n        };\n    }\n\n    async run(req: Request, res: Response): Promise<void> {\n        const data = await this.queryBus.ask<InfoResponse>(new InfoQuery());\n        res.status(HttpStatus.OK).send(data);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/http/HttpMethod.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/http/HttpStatus.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/http/Controller.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/http/ControllerConfig.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/http/Request.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/http/Response.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/QueryBus.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/info/InfoQuery.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/info/InfoResponse.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/Middleware.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/QueryResponse.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/MessageNameFactory.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/http/HttpMethod.ts",{"fileContent":"export enum HttpMethod {\n    GET = 'GET',\n    POST = 'POST',\n    PUT = 'PUT',\n    DELETE = 'DELETE',\n}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/infrastructure/SetInfoController.ts",{"fileContent":"import { HttpMethod } from '@microk/common/http/HttpMethod';\nimport { HttpStatus } from '@microk/common/http/HttpStatus';\nimport Controller from '@microk/core/domain/http/Controller';\nimport { ControllerConfig } from '@microk/core/domain/http/ControllerConfig';\nimport { Request } from '@microk/core/domain/http/Request';\nimport { Response } from '@microk/core/domain/http/Response';\nimport { CommandBus } from '@microk/cqrs/domain/command/CommandBus';\nimport SetInfoCommand from '../application/set-info/SetInfoCommand';\n\nexport default class SetInfoController implements Controller {\n    constructor(\n        private readonly commandBus: CommandBus,\n    ) {\n    }\n\n    config(): ControllerConfig {\n        return {\n            method: HttpMethod.PUT,\n            path: '/',\n        };\n    }\n\n    async run(req: Request, res: Response): Promise<void> {\n        await this.commandBus.dispatch(new SetInfoCommand());\n        res.status(HttpStatus.OK).send();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/http/HttpMethod.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/http/HttpStatus.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/http/Controller.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/http/ControllerConfig.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/http/Request.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/http/Response.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/command/CommandBus.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/set-info/SetInfoCommand.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/Middleware.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/command/Command.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/MessageNameFactory.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/set-info/SetInfoCommand.ts",{"fileContent":"import MessageId from '@microk/common/message/MessageId';\nimport { MessageType } from '@microk/common/message/MessageType';\nimport MessageNameFactory from '@microk/common/value-object/MessageNameFactory';\nimport Command from '@microk/cqrs/domain/command/Command';\n\nexport default class SetInfoCommand extends Command {\n    constructor() {\n        super(\n            MessageId.create(),\n            MessageNameFactory.create('modified', 'info', MessageType.COMMAND),\n        );\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/command/Command.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/command/Command.ts",{"fileContent":"import SimpleMessage from '../../../common/message/SimpleMessage';\nimport { MessageType } from '../../../common/message/MessageType';\nimport MessageMeta from '../../../common/message/MessageMeta';\nimport MessageName from '../../../common/message/MessageName';\nimport MessageId from '../../../common/message/MessageId';\n\nexport default class Command extends SimpleMessage {\n    constructor(id: MessageId, name: MessageName, meta?: MessageMeta) {\n        super(id, MessageType.COMMAND, name, meta);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/Message.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Serializable.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/set-info/SetInfoService.ts",{"fileContent":"import Logger from '@microk/core/domain/Logger';\n\nexport default class SetInfoService {\n    constructor(private readonly logger: Logger) {\n    }\n\n    public async invoke(): Promise<void> {\n        this.logger.info('SET INFO!')\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/Logger.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/send-email/SendEmailService.ts",{"fileContent":"import Logger from '@microk/core/domain/Logger';\nimport { sleep } from '@microk/utils/Sleep';\n\nexport default class SendEmailService {\n    constructor(private readonly logger: Logger) {\n    }\n\n    async invoke(): Promise<void> {\n        await sleep(2000)\n        this.logger.info('SEND EMAIL')\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/Logger.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/utils/Sleep.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/set-info/SetInfoCommandHandler.ts",{"fileContent":"import CommandHandler from '@microk/cqrs/domain/command/CommandHandler';\nimport SetInfoCommand from './SetInfoCommand';\nimport SetInfoService from './SetInfoService';\n\nexport default class SetInfoCommandHandler extends CommandHandler<SetInfoCommand> {\n    constructor(private readonly setInfoService: SetInfoService) {\n        super(SetInfoCommand);\n    }\n\n    async handle(command: SetInfoCommand): Promise<void> {\n        await this.setInfoService.invoke();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/command/CommandHandler.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/set-info/SetInfoCommand.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/set-info/SetInfoService.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/NewableClass.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/command/Command.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/Logger.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/command/CommandHandler.ts",{"fileContent":"import { NewableClass } from '../../../common/NewableClass';\nimport Command from './Command';\n\nexport default abstract class CommandHandler<C extends Command> {\n    private readonly _commandName: string;\n\n    protected constructor(command: NewableClass<Command>) {\n        this._commandName = command.name;\n    }\n\n    public subscribedTo(): string {\n        return this._commandName;\n    }\n\n    abstract handle(command: C): Promise<void>;\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/NewableClass.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/command/Command.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/send-email/SendEmailInfoRequestDomainEventSubscriber.ts",{"fileContent":"import { CommandBus } from '@microk/cqrs/domain/command/CommandBus';\nimport EventSubscriber from '@microk/event/domain/EventSubscriber';\nimport InfoRequestedDomainEvent from '../../domain/InfoRequestedDomainEvent';\nimport SendEmailService from './SendEmailService';\n\nexport default class SendEmailInfoRequestDomainEventSubscriber extends EventSubscriber<InfoRequestedDomainEvent> {\n    constructor(\n        private readonly sendEmailService: SendEmailService,\n        private readonly commandBus: CommandBus,\n    ) {\n        super(InfoRequestedDomainEvent);\n    }\n\n    async dispatch(event: InfoRequestedDomainEvent): Promise<void> {\n        await this.sendEmailService.invoke();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/command/CommandBus.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/EventSubscriber.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/domain/InfoRequestedDomainEvent.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/info/application/send-email/SendEmailService.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/command/Command.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/Logger.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/utils/Sleep.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/EventSubscriber.ts",{"fileContent":"import DomainEvent, { DomainEventClass } from './DomainEvent';\n\nexport default abstract class EventSubscriber<E extends DomainEvent> {\n    private readonly _domainEventClasses: DomainEventClass[];\n\n    protected constructor(...domainEventClasses: DomainEventClass[]) {\n        this._domainEventClasses = domainEventClasses;\n    }\n\n    public subscribedTo(): DomainEventClass[] {\n        return this._domainEventClasses;\n    }\n\n    public abstract dispatch(event: E): void;\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/infrastructure/controllers/LoginController.ts",{"fileContent":"import { HttpMethod } from '@microk/common/http/HttpMethod';\nimport { HttpStatus } from '@microk/common/http/HttpStatus';\nimport Controller from '@microk/core/domain/http/Controller';\nimport { ControllerConfig } from '@microk/core/domain/http/ControllerConfig';\nimport { Request } from '@microk/core/domain/http/Request';\nimport { Response } from '@microk/core/domain/http/Response';\nimport QueryBus from '@microk/cqrs/domain/query/QueryBus';\nimport LoginQuery from '../../application/login/LoginQuery';\nimport LoginQueryResponse from '../../application/login/LoginQueryResponse';\n\nexport default class LoginController implements Controller {\n    constructor(\n        private readonly queryBus: QueryBus,\n    ) {\n    }\n\n    config(): ControllerConfig {\n        return {\n            path: '/auth/login',\n            method: HttpMethod.POST,\n        };\n    }\n\n    async run(req: Request, res: Response): Promise<void> {\n        const loginQuery = new LoginQuery();\n        const loginQueryResponse = await this.queryBus.ask<LoginQueryResponse>(loginQuery);\n        res.status(HttpStatus.OK).send(loginQueryResponse);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/http/HttpMethod.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/http/HttpStatus.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/http/Controller.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/http/ControllerConfig.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/http/Request.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/http/Response.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/QueryBus.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/application/login/LoginQuery.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/application/login/LoginQueryResponse.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/core/domain/Middleware.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/QueryResponse.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/MessageNameFactory.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/application/login/LoginQuery.ts",{"fileContent":"import MessageId from '@microk/common/message/MessageId';\nimport { MessageType } from '@microk/common/message/MessageType';\nimport MessageNameFactory from '@microk/common/value-object/MessageNameFactory';\nimport Query from '@microk/cqrs/domain/query/Query';\n\nexport default class LoginQuery extends Query {\n    constructor() {\n        super(\n            MessageId.create(),\n            MessageNameFactory.create('login', 'auth', MessageType.QUERY),\n        );\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/application/login/LoginService.ts",{"fileContent":"import AuthUserId from '../../domain/AuthUserId';\nimport { AuthUserRepository } from '../../domain/AuthUserRepository';\n\nexport default class LoginService {\n    constructor(\n        private readonly authUserRepository: AuthUserRepository,\n    ) {\n    }\n\n    async run(): Promise<string> {\n        await this.authUserRepository.search(new AuthUserId('6fe82999-5933-4259-89aa-802efa746ba1'))\n        return 'abcdefghai';\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserRepository.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Nullable.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUser.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserId.ts",{"fileContent":"import Uuid from '@microk/common/value-object/Uuid';\n\nexport default class AuthUserId extends Uuid {\n\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/InvalidArgumentError.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/application/login/LoginQueryHandler.ts",{"fileContent":"import { QueryHandler } from '@microk/cqrs/domain/query/QueryHandler';\nimport LoginQuery from './LoginQuery';\nimport LoginQueryResponse from './LoginQueryResponse';\nimport LoginService from './LoginService';\n\nexport default class LoginQueryHandler extends QueryHandler<LoginQuery, LoginQueryResponse> {\n    constructor(\n        private readonly loginService: LoginService,\n    ) {\n        super(LoginQuery);\n    }\n\n    async handle(query: LoginQuery): Promise<LoginQueryResponse> {\n        const token = await this.loginService.run();\n        return {\n            token,\n        };\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/QueryHandler.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/application/login/LoginQuery.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/application/login/LoginQueryResponse.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/application/login/LoginService.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/NewableClass.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/cqrs/domain/query/QueryResponse.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserRepository.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/infrastructure/persistence/TypeOrmAuthUserRepository.ts",{"fileContent":"import { Nullable } from '@microk/common/Nullable';\nimport { TypeOrmRepository } from '@microk/persistence/infrastructure/typeorm/TypeOrmRepository';\nimport { EntitySchema } from 'typeorm';\nimport { AuthUser } from '../../domain/AuthUser';\nimport AuthUserId from '../../domain/AuthUserId';\nimport { AuthUserRepository } from '../../domain/AuthUserRepository';\nimport { AuthUserEntity } from './typeorm/AuthUserEntity';\n\nexport class TypeOrmAuthUserRepository extends TypeOrmRepository<AuthUser> implements AuthUserRepository {\n    public save(course: AuthUser): Promise<void> {\n        return this.persist(course);\n    }\n\n    public async search(id: AuthUserId): Promise<Nullable<AuthUser>> {\n        const repository = await this.repository();\n\n        const course = await repository.findOne({ id });\n\n        return course;\n    }\n\n    protected entitySchema(): EntitySchema<AuthUser> {\n        return AuthUserEntity;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/Nullable.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/persistence/infrastructure/typeorm/TypeOrmRepository.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUser.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserRepository.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/infrastructure/persistence/typeorm/AuthUserEntity.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/AggregateRoot.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserRecoverPasswordToken.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/persistence/infrastructure/typeorm/ValueObjectTransformer.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/persistence/infrastructure/typeorm/TypeOrmRepository.ts",{"fileContent":"import { Connection, EntitySchema, Repository } from 'typeorm';\nimport { AggregateRoot } from '../../../common/AggregateRoot';\n\nexport abstract class TypeOrmRepository<T extends AggregateRoot> {\n    constructor(private _client: Promise<Connection>) {\n    }\n\n    protected abstract entitySchema(): EntitySchema<T>;\n\n    protected client(): Promise<Connection> {\n        return this._client;\n    }\n\n    protected async repository(): Promise<Repository<T>> {\n        return (await this._client).getRepository(this.entitySchema());\n    }\n\n    protected async persist(aggregateRoot: T): Promise<void> {\n        const repository = await this.repository();\n        await repository.save(aggregateRoot as any);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/AggregateRoot.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/DomainEvent.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/infrastructure/persistence/typeorm/AuthUserEntity.ts",{"fileContent":"import { ValueObjectTransformer } from '@microk/persistence/infrastructure/typeorm/ValueObjectTransformer';\nimport { EntitySchema } from 'typeorm';\nimport { AuthUser } from '../../../domain/AuthUser';\nimport AuthUserEmail from '../../../domain/AuthUserEmail';\nimport AuthUserId from '../../../domain/AuthUserId';\nimport AuthUserPassword from '../../../domain/AuthUserPassword';\n\nexport const AuthUserEntity = new EntitySchema<AuthUser>({\n    name: 'AuthUser',\n    tableName: 'auth_user',\n    target: AuthUser,\n    columns: {\n        id: {\n            type: String,\n            primary: true,\n            transformer: ValueObjectTransformer(AuthUserId),\n        },\n        email: {\n            type: String,\n            transformer: ValueObjectTransformer(AuthUserEmail),\n        },\n        password: {\n            type: String,\n            transformer: ValueObjectTransformer(AuthUserPassword),\n        },\n        recoverPasswordToken: {\n            type: String,\n            nullable: true,\n            transformer: ValueObjectTransformer(AuthUserPassword),\n        },\n    },\n});\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/persistence/infrastructure/typeorm/ValueObjectTransformer.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUser.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/NewableClass.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/AggregateRoot.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserRecoverPasswordToken.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/persistence/infrastructure/typeorm/ValueObjectTransformer.ts",{"fileContent":"import { NewableClass } from '../../../common/NewableClass';\nimport { ValueObject } from '../../../common/value-object/ValueObject';\n\nexport const ValueObjectTransformer = (valueObject: NewableClass<ValueObject<any>>) => {\n    return {\n        to: (value: ValueObject<any>): any => value?.value(),\n        from: (value: any): ValueObject<any> => (value ? new valueObject(value) : undefined),\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/NewableClass.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/InvalidArgumentError.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUser.ts",{"fileContent":"import { AggregateRoot } from '@microk/common/AggregateRoot';\nimport { PrimitivesObject } from '@microk/common/PrimitiveType';\nimport AuthUserEmail from './AuthUserEmail';\nimport AuthUserId from './AuthUserId';\nimport AuthUserPassword from './AuthUserPassword';\nimport AuthUserRecoverPasswordToken from './AuthUserRecoverPasswordToken';\n\nexport class AuthUser extends AggregateRoot {\n    constructor(\n        readonly id: AuthUserId,\n        readonly email: AuthUserEmail,\n        readonly password: AuthUserPassword,\n        readonly recoverPasswordToken?: AuthUserRecoverPasswordToken,\n    ) {\n        super();\n    }\n\n    toPrimitives(): PrimitivesObject {\n        return {\n            id: this.id.value(),\n            email: this.email.value(),\n            password: this.password.value(),\n            recoverPasswordToken: this.recoverPasswordToken?.value(),\n        };\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/AggregateRoot.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserRecoverPasswordToken.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/AggregateRoot.ts",{"fileContent":"import DomainEvent from '../event/domain/DomainEvent';\n\nexport abstract class AggregateRoot {\n    private domainEvents: Array<DomainEvent>;\n\n    constructor() {\n        this.domainEvents = [];\n    }\n\n    pullDomainEvents(): Array<DomainEvent> {\n        const domainEvents = this.domainEvents.slice();\n        this.domainEvents = [];\n\n        return domainEvents;\n    }\n\n    record(event: DomainEvent): void {\n        this.domainEvents.push(event);\n    }\n\n  abstract toPrimitives(): any;\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessage.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserEmail.ts",{"fileContent":"import { StringValueObject } from '@microk/common/value-object/StringValueObject';\n\nexport default class AuthUserEmail extends StringValueObject {\n    constructor(value: string) {\n        super(value);\n        this.ensureIsValidEmail();\n    }\n\n    private ensureIsValidEmail() {\n        // TODO\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserPassword.ts",{"fileContent":"import { StringValueObject } from '@microk/common/value-object/StringValueObject';\n\nexport default class AuthUserPassword extends StringValueObject {\n\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/ValueObject.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/tests/infrastructure/typeorm/TypeOrmEnvironmentArranger.ts",{"fileContent":"import { Connection, EntityMetadata } from 'typeorm';\nimport { EnvironmentArranger } from '../../domain/EnvironmentArranger';\n\nexport class TypeOrmEnvironmentArranger extends EnvironmentArranger {\n    constructor(private _client: Promise<Connection>) {\n        super();\n    }\n\n    public async arrange(): Promise<void> {\n        await this.cleanDatabase();\n    }\n\n    protected async cleanDatabase(): Promise<void> {\n        const entities = await this.entities();\n\n        try {\n            for (const entity of entities) {\n                const repository = (await this.client()).getRepository(entity.name);\n                await repository.query(`TRUNCATE TABLE ${entity.tableName};`);\n            }\n        } catch (error) {\n            throw new Error(`Unable to clean test database: ${error}`);\n        }\n    }\n\n    private async entities(): Promise<EntityMetadata[]> {\n        return (await this.client()).entityMetadatas;\n    }\n\n    protected client(): Promise<Connection> {\n        return this._client;\n    }\n\n    public async close(): Promise<void> {\n        return (await this.client()).close();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/tests/domain/EnvironmentArranger.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/tests/domain/EnvironmentArranger.ts",{"fileContent":"export abstract class EnvironmentArranger {\n    public abstract arrange(): Promise<void>;\n    public abstract close(): Promise<void>;\n}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/auth/domain/AuthUserMother.ts",{"fileContent":"import { AuthUser } from '../../../../src/modules/auth/domain/AuthUser';\nimport AuthUserEmail from '../../../../src/modules/auth/domain/AuthUserEmail';\nimport AuthUserId from '../../../../src/modules/auth/domain/AuthUserId';\nimport AuthUserPassword from '../../../../src/modules/auth/domain/AuthUserPassword';\nimport AuthUserEmailMother from './AuthUserEmailMother';\nimport AuthUserIdMother from './AuthUserIdMother';\nimport AuthUserPasswordMother from './AuthUserPasswordMother';\n\nexport default class AuthUserMother {\n    static create(\n        id: AuthUserId,\n        email: AuthUserEmail,\n        password: AuthUserPassword,\n    ): AuthUser {\n        return new AuthUser(id, email, password);\n    }\n\n    // static fromRequest(request: CreateCourseRequest): Course {\n    //     return this.create(\n    //         CourseIdMother.create(request.id),\n    //         CourseNameMother.create(request.name),\n    //         CourseDurationMother.create(request.duration)\n    //     );\n    // }\n\n    static random(): AuthUser {\n        return this.create(\n            AuthUserIdMother.random(),\n            AuthUserEmailMother.random(),\n            AuthUserPasswordMother.random()\n        );\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUser.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/auth/domain/AuthUserEmailMother.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/auth/domain/AuthUserIdMother.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/auth/domain/AuthUserPasswordMother.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/AggregateRoot.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserRecoverPasswordToken.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/shared/domain/EmailMother.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/shared/domain/UuidMother.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/shared/domain/PasswordMother.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/auth/domain/AuthUserEmailMother.ts",{"fileContent":"import AuthUserEmail from '../../../../src/modules/auth/domain/AuthUserEmail';\nimport { EmailMother } from '../../shared/domain/EmailMother';\n\nexport default class AuthUserEmailMother {\n    static create(value: string): AuthUserEmail {\n        return new AuthUserEmail(value);\n    }\n\n    static random(): AuthUserEmail {\n        return this.create(EmailMother.random());\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/shared/domain/EmailMother.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/shared/domain/MotherCreator.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/shared/domain/EmailMother.ts",{"fileContent":"import { MotherCreator } from './MotherCreator';\n\nexport class EmailMother {\n    static random(): string {\n        return MotherCreator.random().internet.email();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/shared/domain/MotherCreator.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/shared/domain/MotherCreator.ts",{"fileContent":"import * as faker from 'faker';\n\nexport class MotherCreator {\n    // eslint-disable-next-line no-undef\n    static random(): Faker.FakerStatic {\n        return faker;\n    }\n}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/auth/domain/AuthUserIdMother.ts",{"fileContent":"import AuthUserId from '../../../../src/modules/auth/domain/AuthUserId';\nimport { UuidMother } from '../../shared/domain/UuidMother';\n\nexport default class AuthUserIdMother {\n    static create(value: string): AuthUserId {\n        return new AuthUserId(value);\n    }\n\n    static random(): AuthUserId {\n        return this.create(UuidMother.random());\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/shared/domain/UuidMother.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/shared/domain/MotherCreator.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/shared/domain/UuidMother.ts",{"fileContent":"import { MotherCreator } from './MotherCreator';\n\nexport class UuidMother {\n    static random(): string {\n        return MotherCreator.random().datatype.uuid();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/shared/domain/MotherCreator.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/auth/domain/AuthUserPasswordMother.ts",{"fileContent":"import AuthUserPassword from '../../../../src/modules/auth/domain/AuthUserPassword';\nimport { PasswordMother } from '../../shared/domain/PasswordMother';\n\nexport default class AuthUserPasswordMother {\n    static create(value: string): AuthUserPassword {\n        return new AuthUserPassword(value);\n    }\n\n    static random(): AuthUserPassword {\n        return this.create(PasswordMother.random());\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/shared/domain/PasswordMother.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/shared/domain/MotherCreator.ts"]}],["/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/shared/domain/PasswordMother.ts",{"fileContent":"import { MotherCreator } from './MotherCreator';\n\nexport class PasswordMother {\n    static random(): string {\n        return MotherCreator.random().internet.password();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/MagicShopper/magicshopper-node/tests/modules/shared/domain/MotherCreator.ts"]}]]