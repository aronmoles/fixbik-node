[["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/infrastructure/persistence/AuthUserRepository.test.ts",{"fileContent":"import Container from '../../../../../src/app/Container';\nimport { AuthUserRepository } from '../../../../../src/modules/auth/domain/AuthUserRepository';\nimport AuthUserMother from '../../domain/AuthUserMother';\nimport { Order } from '../../../../../src/microk/common/criteria/Order';\nimport { FilterOperator } from '../../../../../src/microk/common/criteria/FilterOperator';\nimport { Filters } from '../../../../../src/microk/common/criteria/Filters';\nimport { EnvironmentArranger } from '../../../../../src/microk/tests/domain/EnvironmentArranger';\nimport { Filter } from '../../../../../src/microk/common/criteria/Filter';\nimport { FilterField } from '../../../../../src/microk/common/criteria/FilterField';\nimport { Criteria } from '../../../../../src/microk/common/criteria/Criteria';\nimport { FilterValue } from '../../../../../src/microk/common/criteria/FilterValue';\nimport { Keys } from '../../../../../src/modules/shared/infrastructure/di/Keys';\n\nconst repository: AuthUserRepository = Container.get(Keys.Auth.AuthUserRepository);\nconst environmentArranger: EnvironmentArranger = Container.get(Keys.Test.EnvironmentArranger);\n\nbeforeEach(async () => {\n    await (await environmentArranger).arrange();\n});\n\nafterAll(async () => {\n    await (await environmentArranger).arrange();\n    await (await environmentArranger).close();\n});\n\ndescribe('AuthUserRepository', () => {\n    describe('#save', () => {\n        it('should save a auth user and search by id', async () => {\n            const authUser = AuthUserMother.random();\n\n            await repository.save(authUser);\n            const authUserResponse = await repository.search(authUser.id);\n\n            expect(authUserResponse).toEqual(authUser)\n        });\n    });\n\n    describe('#searchOneByCriteria', () => {\n        it('should save a auth user and search by criteria', async () => {\n            const authUser = AuthUserMother.random();\n            await repository.save(authUser);\n\n            const criteria = new Criteria(\n                new Filters([new Filter(\n                    new FilterField('email'),\n                    FilterOperator.equal(),\n                    new FilterValue(authUser.email.toString()),\n                )]),\n                Order.none(),\n            )\n            const authUserResponse = await repository.searchOneByCriteria(criteria);\n\n            expect(authUserResponse).toEqual(authUser)\n        });\n    });\n\n    describe('#searchByCriteria', () => {\n        it('should save a auth user and search by criteria', async () => {\n            const authUser = AuthUserMother.random();\n            await repository.save(authUser);\n\n            const criteria = new Criteria(\n                new Filters([new Filter(\n                    new FilterField('email'),\n                    FilterOperator.equal(),\n                    new FilterValue(authUser.email.toString()),\n                )]),\n                Order.none(),\n            )\n            const authUsersResponse = await repository.searchByCriteria(criteria);\n\n            expect(authUsersResponse).toEqual([authUser])\n        });\n    });\n});\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/app/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Order.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterOperator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Filters.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/tests/domain/EnvironmentArranger.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Filter.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterField.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Criteria.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterValue.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/app/config/index.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/app/ProcessEnv.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUser.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Nullable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/AuthenticateQuery.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserEmailMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserIdMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserPasswordMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/OrderBy.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/OrderType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/EnumValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/Utils.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/app/Container.ts",{"fileContent":"import { configEnvDependencyContainer } from './config';\nimport { EnvMode } from './ProcessEnv';\nimport DependencyContainer from '../microk/core/infrastructure/di/DependencyContainer';\n\nconst container = new DependencyContainer();\n\nconst env = process.env.NODE_ENV || 'dev';\n\nconfigEnvDependencyContainer(container, env as EnvMode);\n\nexport default container;\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/app/config/index.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/app/ProcessEnv.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/app/config/config.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/app/config/configDev.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/app/config/configProd.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/app/config/configTest.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Env.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/ContainerTag.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/Utils.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/app/config/index.ts",{"fileContent":"import { EnvMode } from '../ProcessEnv';\nimport { config } from './config';\nimport { configDev } from './configDev';\nimport { configProd } from './configProd';\nimport { configTest } from './configTest';\nimport Container from '../../microk/core/domain/di/Container';\n\nexport const configEnvDependencyContainer = (container: Container, env: EnvMode): void => {\n    config(container);\n    switch (env) {\n        case EnvMode.dev:\n            configDev(container);\n            break;\n        case EnvMode.prod:\n            configProd(container);\n            break;\n        case EnvMode.test:\n            configTest(container);\n            break;\n        default:\n            throw new Error('Configure DI Env invalid')\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/app/ProcessEnv.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/app/config/config.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/app/config/configDev.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/app/config/configProd.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/app/config/configTest.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Env.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/AuthenticateQueryHandler.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/Authenticator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/infrastructure/controllers/AuthenticateController.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/infrastructure/generators/JwtAuthTokenRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/infrastructure/persistence/TypeOrmAuthUserRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/info/InfoQueryHandler.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/info/InfoService.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/send-email/SendEmailInfoRequestDomainEventSubscriber.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/send-email/SendEmailService.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/set-info/SetInfoCommandHandler.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/set-info/SetInfoService.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/infrastructure/InfoController.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/infrastructure/SetInfoController.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/docs/ServerOpenApiConfigFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/persistence/typeorm/TypeOrmConfigFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/infrastructure/query/QueryHandlersMapper.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/discoverer/ErrorMiddlewareDiscoverer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/utils/FileMessageStore.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/ContainerTag.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/discoverer/ControllerDiscoverer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/message-store/infrastructure/StoreMessageBusMiddleware.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/infrastructure/query/InMemoryQueryBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/utils/FileErrorTracker.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/infrastructure/EventSubscriberMapper.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/infrastructure/command/InMemoryCommandBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/SystemLogger.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/utils/TimeBusMiddleware.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/infrastructure/EventClassMapper.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/TypeOrmClientFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/discoverer/MiddlewareDiscoverer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/infrastructure/command/CommandHandlersMapper.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/error/PersistErrorMiddleware.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/HttpErrorMiddleware.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/persistence/typeorm/TypeOrmEventStore.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/infrastructure/InMemoryEventBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/event/EventStoreController.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/tests/infrastructure/typeorm/TypeOrmEnvironmentArranger.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/tests/infrastructure/typeorm/TypeOrmEnvironmentFixtures.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/app/ProcessEnv.ts",{"fileContent":"/* eslint-disable no-undef, @typescript-eslint/no-var-requires */\nimport * as fs from 'fs';\nimport Env from '../microk/core/domain/Env';\n\nexport enum EnvMode {\n    dev = 'dev',\n    test = 'test',\n    prod = 'prod',\n}\n\nexport interface EnvKey {\n    NODE_ENV: string;\n    PORT: string;\n\n    JWT_SECRET: string;\n\n    RABBITMQ_HOST: string;\n    RABBITMQ_USER: string;\n    RABBITMQ_PASSWORD: string;\n    RABBITMQ_EXCHANGE: string;\n    RABBITMQ_QUEUE: string;\n\n    MYSQL_HOST: string;\n    MYSQL_PORT: string;\n    MYSQL_USER: string;\n    MYSQL_PASSWORD: string;\n    MYSQL_DATABASE: string;\n}\n\nexport default class ProcessEnv implements Env<EnvKey> {\n    private readonly env: EnvKey;\n\n    constructor() {\n        this.env = {\n            NODE_ENV: process.env.NODE_ENV,\n            PORT: '3000',\n\n            JWT_SECRET: '',\n\n            RABBITMQ_HOST: '',\n            RABBITMQ_USER: '',\n            RABBITMQ_PASSWORD: '',\n            RABBITMQ_EXCHANGE: '',\n            RABBITMQ_QUEUE: '',\n\n            MYSQL_HOST: '',\n            MYSQL_PORT: '',\n            MYSQL_USER: '',\n            MYSQL_PASSWORD: '',\n            MYSQL_DATABASE: '',\n        };\n\n        // TODO Crear un DotEnv\n        const modeEnvFilePath = `${__dirname}/../../.env.${process.env.NODE_ENV}`;\n        if (fs.existsSync(modeEnvFilePath)) {\n            require('dotenv').config({ path: modeEnvFilePath });\n        } else {\n            const envFilePath = `${__dirname}/../../.env`;\n            if (fs.existsSync(envFilePath)) {\n                require('dotenv').config({ path: envFilePath });\n            }\n        }\n\n        const envKeys = Object.keys(this.env) as Array<keyof EnvKey>;\n\n        for (const key of envKeys) {\n            const value = process.env[key];\n\n            if (value) {\n                this.env[key] = value;\n            } else {\n                throw new Error(`Missing env key ${key}`);\n            }\n        }\n\n        if (!Object.keys(EnvMode).includes(this.get('NODE_ENV'))) {\n            throw new Error('Invalid NODE_ENV value.');\n        }\n    }\n\n    public get<T extends keyof EnvKey>(key: T): EnvKey[T] {\n        return this.env[key];\n    }\n\n    public set<T extends keyof EnvKey>(key: T, value: EnvKey[T]) {\n        this.env[key] = value;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Env.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/app/config/config.ts",{"fileContent":"import AuthenticateQueryHandler from '../../modules/auth/application/login/AuthenticateQueryHandler';\nimport Authenticator from '../../modules/auth/application/login/Authenticator';\nimport AuthenticateController from '../../modules/auth/infrastructure/controllers/AuthenticateController';\nimport JwtAuthTokenRepository from '../../modules/auth/infrastructure/generators/JwtAuthTokenRepository';\nimport { TypeOrmAuthUserRepository } from '../../modules/auth/infrastructure/persistence/TypeOrmAuthUserRepository';\nimport InfoQueryHandler from '../../modules/info/application/info/InfoQueryHandler';\nimport InfoService from '../../modules/info/application/info/InfoService';\nimport SendEmailInfoRequestDomainEventSubscriber\n    from '../../modules/info/application/send-email/SendEmailInfoRequestDomainEventSubscriber';\nimport SendEmailService from '../../modules/info/application/send-email/SendEmailService';\nimport SetInfoCommandHandler from '../../modules/info/application/set-info/SetInfoCommandHandler';\nimport SetInfoService from '../../modules/info/application/set-info/SetInfoService';\nimport InfoController from '../../modules/info/infrastructure/InfoController';\nimport SetInfoController from '../../modules/info/infrastructure/SetInfoController';\nimport { Keys } from '../../modules/shared/infrastructure/di/Keys';\nimport ServerOpenApiConfigFactory from '../../modules/shared/infrastructure/docs/ServerOpenApiConfigFactory';\nimport { TypeOrmConfigFactory } from '../../modules/shared/infrastructure/persistence/typeorm/TypeOrmConfigFactory';\nimport ProcessEnv from '../ProcessEnv';\nimport QueryHandlersMapper from '../../microk/cqrs/infrastructure/query/QueryHandlersMapper';\nimport ErrorMiddlewareDiscoverer from '../../microk/core/infrastructure/discoverer/ErrorMiddlewareDiscoverer';\nimport FileMessageStore from '../../microk/utils/FileMessageStore';\nimport { ContainerTag } from '../../microk/core/domain/di/ContainerTag';\nimport ControllerDiscoverer from '../../microk/core/infrastructure/discoverer/ControllerDiscoverer';\nimport StoreMessageBusMiddleware from '../../microk/message-store/infrastructure/StoreMessageBusMiddleware';\nimport InMemoryQueryBus from '../../microk/cqrs/infrastructure/query/InMemoryQueryBus';\nimport FileErrorTracker from '../../microk/utils/FileErrorTracker';\nimport { EventSubscriberMapper } from '../../microk/event/infrastructure/EventSubscriberMapper';\nimport { InMemoryCommandBus } from '../../microk/cqrs/infrastructure/command/InMemoryCommandBus';\nimport SystemLogger from '../../microk/core/infrastructure/SystemLogger';\nimport TimeBusMiddleware from '../../microk/utils/TimeBusMiddleware';\nimport { EventClassMapper } from '../../microk/event/infrastructure/EventClassMapper';\nimport { TypeOrmClientFactory } from '../../microk/persistence/infrastructure/typeorm/TypeOrmClientFactory';\nimport MiddlewareDiscoverer from '../../microk/core/infrastructure/discoverer/MiddlewareDiscoverer';\nimport { CommandHandlersMapper } from '../../microk/cqrs/infrastructure/command/CommandHandlersMapper';\nimport PersistErrorMiddleware from '../../microk/core/infrastructure/error/PersistErrorMiddleware';\nimport HttpErrorMiddleware from '../../microk/core/infrastructure/HttpErrorMiddleware';\nimport Container from '../../microk/core/domain/di/Container';\nimport TypeOrmEventStore from '../../modules/shared/infrastructure/persistence/typeorm/TypeOrmEventStore';\nimport InMemoryEventBus from '../../microk/event/infrastructure/InMemoryEventBus';\nimport EventStoreController from '../../modules/shared/infrastructure/event/EventStoreController';\n\nexport const config = (container: Container) => {\n    // App\n    const env = new ProcessEnv();\n    container.addInstance(Keys.App.Env, env);\n    container.addClass(Keys.App.Logger, SystemLogger);\n    container.addClass(Keys.App.ControllerDiscoverer, ControllerDiscoverer);\n    container.addClass(Keys.App.MiddlewareDiscoverer, MiddlewareDiscoverer);\n    container.addClass(Keys.App.ErrorMiddlewareDiscoverer, ErrorMiddlewareDiscoverer);\n    container.addClass(Keys.App.PersistErrorMiddleware, PersistErrorMiddleware, [ContainerTag.ERROR_MIDDLEWARE]);\n    container.addClass(Keys.App.HttpErrorMiddleware, HttpErrorMiddleware, [ContainerTag.ERROR_MIDDLEWARE]);\n    container.addClass(Keys.App.ErrorTracker, FileErrorTracker);\n    container.addClass(Keys.App.MessageStore, FileMessageStore);\n    container.addClass(\n        Keys.App.StoreMessageBusMiddleware,\n        StoreMessageBusMiddleware,\n        [ContainerTag.COMMAND_EXECUTOR, ContainerTag.QUERY_EXECUTOR, ContainerTag.EVENT_EXECUTOR],\n    );\n    container.addClass(\n        Keys.App.TimeBusMiddleware,\n        TimeBusMiddleware,\n        [ContainerTag.COMMAND_EXECUTOR, ContainerTag.QUERY_EXECUTOR, ContainerTag.EVENT_EXECUTOR],\n    );\n    // container.addClass(Keys.App.AuthMiddleware, AuthMiddleware);\n    container.addInstance(Keys.App.ServerOpenApiConfig, ServerOpenApiConfigFactory.createConfig());\n    container.addInstance(\n        Keys.App.ConnectionManager,\n        TypeOrmClientFactory.createClient(TypeOrmConfigFactory.createConfig(env)),\n    );\n\n    // CQRS\n    container.addClass(Keys.CQRS.CommandHandlersMapper, CommandHandlersMapper);\n    container.addClass(Keys.CQRS.CommandBus, InMemoryCommandBus);\n    container.addClass(Keys.CQRS.QueryHandlersMapper, QueryHandlersMapper);\n    container.addClass(Keys.CQRS.QueryBus, InMemoryQueryBus);\n\n    // EVENT\n    container.addClass(Keys.CQRS.EventSubscriberMapper, EventSubscriberMapper);\n    container.addClass(Keys.CQRS.EventClassMapper, EventClassMapper);\n    // container.addClass(Keys.CQRS.EventBus, RabbitMqEventBus);\n    // container.addClass(Keys.CQRS.EventDeserializer, EventJsonDeserializer);\n    // container.addInstance(Keys.CQRS.RabbitMqConfig, RabbitMqConfigFactory.createConfig(env));\n    container.addClass(Keys.CQRS.EventBus, InMemoryEventBus);\n    container.addClass(Keys.CQRS.EventStore, TypeOrmEventStore);\n    container.addClass(Keys.CQRS.EventStoreController, EventStoreController, [ContainerTag.CONTROLLER]);\n\n    // Info\n    container.addClass(Keys.Info.InfoController, InfoController, [ContainerTag.CONTROLLER]);\n    container.addClass(Keys.Info.SetInfoController, SetInfoController, [ContainerTag.CONTROLLER]);\n    container.addClass(Keys.Info.InfoService, InfoService);\n    container.addClass(Keys.Info.SetInfoService, SetInfoService);\n    container.addClass(Keys.Info.SendEmailService, SendEmailService);\n    container.addClass(Keys.Info.InfoQueryHandler, InfoQueryHandler, [ContainerTag.QUERY_HANDLER]);\n    container.addClass(Keys.Info.SetInfoCommandHandler, SetInfoCommandHandler, [ContainerTag.COMMAND_HANDLER]);\n    container.addClass(\n        Keys.Info.SendEmailInfoRequestDomainEventSubscriber,\n        SendEmailInfoRequestDomainEventSubscriber,\n        [ContainerTag.EVENT_SUBSCRIBER],\n    );\n\n    // Auth\n    container.addClass(Keys.Auth.AuthenticateController, AuthenticateController, [ContainerTag.CONTROLLER]);\n    container.addClass(Keys.Auth.Authenticator, Authenticator);\n    container.addClass(Keys.Auth.AuthenticateQueryHandler, AuthenticateQueryHandler, [ContainerTag.QUERY_HANDLER]);\n    container.addClass(Keys.Auth.AuthUserRepository, TypeOrmAuthUserRepository);\n    container.addClass(Keys.Auth.AuthTokenRepository, JwtAuthTokenRepository);\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/AuthenticateQueryHandler.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/Authenticator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/infrastructure/controllers/AuthenticateController.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/infrastructure/generators/JwtAuthTokenRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/infrastructure/persistence/TypeOrmAuthUserRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/info/InfoQueryHandler.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/info/InfoService.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/send-email/SendEmailInfoRequestDomainEventSubscriber.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/send-email/SendEmailService.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/set-info/SetInfoCommandHandler.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/set-info/SetInfoService.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/infrastructure/InfoController.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/infrastructure/SetInfoController.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/docs/ServerOpenApiConfigFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/persistence/typeorm/TypeOrmConfigFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/app/ProcessEnv.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/infrastructure/query/QueryHandlersMapper.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/discoverer/ErrorMiddlewareDiscoverer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/utils/FileMessageStore.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/ContainerTag.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/discoverer/ControllerDiscoverer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/message-store/infrastructure/StoreMessageBusMiddleware.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/infrastructure/query/InMemoryQueryBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/utils/FileErrorTracker.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/infrastructure/EventSubscriberMapper.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/infrastructure/command/InMemoryCommandBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/SystemLogger.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/utils/TimeBusMiddleware.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/infrastructure/EventClassMapper.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/TypeOrmClientFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/discoverer/MiddlewareDiscoverer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/infrastructure/command/CommandHandlersMapper.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/error/PersistErrorMiddleware.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/HttpErrorMiddleware.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/persistence/typeorm/TypeOrmEventStore.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/infrastructure/InMemoryEventBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/event/EventStoreController.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/AuthenticateQuery.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/AuthenticateQueryResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryHandler.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthToken.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthTokenRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/search-by-email/AuthUserSearchByEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/EventBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/infrastructure/controllers/AuthenticateResponse.Dto.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/ControllerConfig.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/ControllerResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Controller.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpMethod.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Req.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Response.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/FixBikeJwtPayload.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUser.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Env.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/infrastructure/persistence/typeorm/AuthUser.Entity.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/TypeOrmRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Nullable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/info/InfoQuery.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/info/InfoResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/domain/InfoRequestedDomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/utils/Sleep.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/EventSubscriber.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Logger.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/set-info/SetInfoCommand.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/command/CommandHandler.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/command/CommandBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/app/Server.ts","/Users/cuatroochenta/FixBik/fixbik-node/package.json","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/TypeOrmConfig.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/InjecTag.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryNotRegisteredError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Discoverer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/ErrorMiddleware.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/message-store/domain/MessageStore.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/Message.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/WrapperExecutor.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Mapper.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/Executor.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/error/ErrorTracker.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/error/TrackError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/command/Command.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Optional.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Middleware.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/command/CommandNotRegisteredError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Res.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpStatus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/ResponseContent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/EventStore.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/persistence/typeorm/EventStoreEntity.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/event/DomainEventDto.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Criteria.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Order.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Filters.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/AuthenticateQueryHandler.ts",{"fileContent":"import { Keys } from '../../../shared/infrastructure/di/Keys';\nimport AuthenticateQuery from './AuthenticateQuery';\nimport AuthenticateQueryResponse from './AuthenticateQueryResponse';\nimport Authenticator from './Authenticator';\nimport Inject from '../../../../microk/core/infrastructure/di/Inject.decorator';\nimport { QueryHandler } from '../../../../microk/cqrs/domain/query/QueryHandler';\n\nexport default class AuthenticateQueryHandler extends QueryHandler<AuthenticateQuery, AuthenticateQueryResponse> {\n    constructor(\n        @Inject(Keys.Auth.Authenticator) private readonly authenticator: Authenticator,\n    ) {\n        super(AuthenticateQuery);\n    }\n\n    async handle(query: AuthenticateQuery): Promise<AuthenticateQueryResponse> {\n        const authToken = await this.authenticator.run(query.email, query.password);\n        return {\n            authToken: authToken.toString(),\n        };\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/AuthenticateQuery.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/AuthenticateQueryResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/Authenticator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryHandler.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Req.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthToken.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthTokenRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/search-by-email/AuthUserSearchByEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/EventBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts",{"fileContent":"export const Keys = {\n    App: {\n        Env: Symbol.for('Env'),\n        Logger: Symbol.for('Log'),\n        ControllerDiscoverer: Symbol.for('ControllerDiscoverer'),\n        MiddlewareDiscoverer: Symbol.for('MiddlewareDiscoverer'),\n        ErrorMiddlewareDiscoverer: Symbol.for('ErrorMiddlewareDiscoverer'),\n        ErrorTracker: Symbol.for('ErrorTracker'),\n        MessageStore: Symbol.for('MessageStore'),\n        PersistErrorMiddleware: Symbol.for('PersistErrorMiddleware'),\n        HttpErrorMiddleware: Symbol.for('HttpErrorMiddleware'),\n        StoreMessageBusMiddleware: Symbol.for('StoreMessageBusMiddleware'),\n        TimeBusMiddleware: Symbol.for('TimeBusMiddleware'),\n        AuthMiddleware: Symbol.for('AuthMiddleware'),\n        ServerOpenApiConfig: Symbol.for('ServerOpenApiConfig'),\n        ConnectionManager: Symbol.for('ConnectionManager'),\n    },\n    CQRS: {\n        CommandHandlersMapper: Symbol.for('CommandHandlersMapper'),\n        CommandBus: Symbol.for('CommandBus'),\n        QueryHandlersMapper: Symbol.for('QueryHandlersMapper'),\n        QueryBus: Symbol.for('QueryBus'),\n        EventSubscriberMapper: Symbol.for('EventSubscriberMapper'),\n        EventBus: Symbol.for('EventBus'),\n        RabbitMqConfig: Symbol.for('RabbitMqConfig'),\n        EventDeserializer: Symbol.for('EventDeserializer'),\n        EventClassMapper: Symbol.for('EventClassMapper'),\n        EventStore: Symbol.for('EventStore'),\n        EventStoreController: Symbol.for('EventStoreController'),\n    },\n    Test: {\n        EnvironmentArranger: Symbol.for('EnvironmentArranger'),\n        EnvironmentFixtures: Symbol.for('EnvironmentFixtures'),\n    },\n    Info: {\n        InfoController: Symbol.for('InfoController'),\n        SetInfoController: Symbol.for('SetInfoController'),\n        InfoService: Symbol.for('InfoService'),\n        SetInfoService: Symbol.for('SetInfoService'),\n        SendEmailService: Symbol.for('SendEmailService'),\n        InfoQueryHandler: Symbol.for('InfoQueryHandler'),\n        SetInfoCommandHandler: Symbol.for('SetInfoCommandHandler'),\n        SendEmailInfoRequestDomainEventSubscriber: Symbol.for('SendEmailInfoRequestDomainEventSubscriber'),\n    },\n    Auth: {\n        AuthenticateController: Symbol.for('AuthenticateController'),\n        Authenticator: Symbol.for('Authenticator'),\n        AuthenticateQueryHandler: Symbol.for('AuthenticateQueryHandler'),\n        AuthUserRepository: Symbol.for('AuthUserRepository'),\n        AuthTokenRepository: Symbol.for('AuthTokenRepository'),\n    },\n}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/AuthenticateQuery.ts",{"fileContent":"import AuthUserEmail from '../../domain/AuthUserEmail';\nimport AuthUserPassword from '../../domain/AuthUserPassword';\nimport MessageNameFactory from '../../../../microk/common/value-object/MessageNameFactory';\nimport { MessageType } from '../../../../microk/common/message/MessageType';\nimport MessageId from '../../../../microk/common/message/MessageId';\nimport Query from '../../../../microk/cqrs/domain/query/Query';\nimport { Req } from '../../../../microk/core/domain/http/Req';\n\nexport default class AuthenticateQuery extends Query {\n    static fromRequest(req: Req): AuthenticateQuery {\n        return new AuthenticateQuery(\n            new AuthUserEmail(req.body.email),\n            new AuthUserPassword(req.body.password),\n        )\n    }\n\n    constructor(\n        private readonly _email: AuthUserEmail,\n        private readonly _password: AuthUserPassword,\n    ) {\n        super(\n            MessageId.create(),\n            MessageNameFactory.create('authenticate', 'auth', MessageType.QUERY),\n        );\n    }\n\n    get email(): AuthUserEmail {\n        return this._email;\n    }\n\n    get password(): AuthUserPassword {\n        return this._password;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Req.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/EmailValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserEmail.ts",{"fileContent":"import EmailValueObject from '../../../microk/common/value-object/EmailValueObject';\n\nexport default class AuthUserEmail extends EmailValueObject {\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/EmailValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidEmailError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/EmailValueObject.ts",{"fileContent":"import InvalidEmailError from './InvalidEmailError';\nimport { StringValueObject } from './StringValueObject';\n\nexport default class EmailValueObject extends StringValueObject {\n    constructor(email: string) {\n        super(email);\n        this.ensureIsValidEmail(email);\n    }\n\n    private ensureIsValidEmail(email: string) {\n        if (!this.isValidEmail(email)) {\n            throw new InvalidEmailError(email)\n        }\n    }\n\n    private isValidEmail(email: string) {\n        return String(email)\n            .toLowerCase()\n            .match(\n                // eslint-disable-next-line max-len,prefer-named-capture-group\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            );\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidEmailError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidEmailError.ts",{"fileContent":"export default class InvalidEmailError extends Error {\n    constructor(email: string) {\n        super(`Invalid email <${email}>`);\n    }\n}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts",{"fileContent":"import { ValueObject } from './ValueObject';\n\nexport abstract class StringValueObject extends ValueObject<string> {\n    constructor(value: string) {\n        super(value);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts",{"fileContent":"import { PrimitiveType } from '../PrimitiveType';\nimport { InvalidArgumentError } from './InvalidArgumentError';\n\nexport abstract class ValueObject<T extends PrimitiveType> {\n    protected constructor(\n        private readonly _value: T,\n    ) {\n        this.ensureValueIsDefined(_value);\n    }\n\n    private ensureValueIsDefined(value: T): void {\n        if (value === null || value === undefined) {\n            throw new InvalidArgumentError('Value must be defined');\n        }\n    }\n\n    public value(): T {\n        return this._value;\n    }\n\n    public equals(other: ValueObject<T>): boolean {\n        return this.value() === other.value();\n    }\n\n    protected toJSON() {\n        return this.toString();\n    }\n\n    toString() {\n        if (this._value) {\n            return this._value.toString();\n        }\n\n        return this._value;\n    }\n\n    valueOf() {\n        return this._value;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts",{"fileContent":"export class InvalidArgumentError extends Error {}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserPassword.ts",{"fileContent":"import { StringValueObject } from '../../../microk/common/value-object/StringValueObject';\n\nexport default class AuthUserPassword extends StringValueObject {\n\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/MessageNameFactory.ts",{"fileContent":"import { MessageType } from '../message/MessageType';\nimport MessageName from '../message/MessageName';\n\nexport default class MessageNameFactory {\n    private static readonly DEFAULT_VERSION = 1;\n    static create(\n        name: string,\n        entity: string,\n        type: MessageType,\n        version = this.DEFAULT_VERSION,\n        service = 'auth',\n        companyName = 'invoicesystem',\n    ): MessageName {\n        return new MessageName(`${companyName}.${service}.${type}.${version}.${entity}.${name}`);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts",{"fileContent":"import { StringValueObject } from '../value-object/StringValueObject';\n\n/**\n * Standard to name MessageName\n * CompanyName.service.version.{event | command | query}.entity.name\n */\nexport default class MessageName extends StringValueObject {\n\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts",{"fileContent":"export enum MessageType {\n    DOMAIN_EVENT = 'domain-event',\n    COMMAND = 'command',\n    QUERY = 'query',\n}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts",{"fileContent":"import Uuid from '../value-object/Uuid';\n\nexport default class MessageId extends Uuid {\n    static create(): MessageId {\n        return Uuid.create();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts",{"fileContent":"import { ValueObject } from './ValueObject';\nimport { InvalidArgumentError } from './InvalidArgumentError';\nimport { v4, validate } from 'uuid';\n\nexport default class Uuid extends ValueObject<string> {\n    constructor(value: string) {\n        super(value)\n        this.ensureIsValidUuid(value);\n    }\n\n    static create(): Uuid {\n        return new Uuid(v4());\n    }\n\n    private ensureIsValidUuid(uuid: string): void {\n        if (!validate(uuid)) {\n            throw new InvalidArgumentError(`<${this.constructor.name}> does not allow the value <${uuid}>`);\n        }\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/Query.ts",{"fileContent":"import SimpleMessage from '../../../common/message/SimpleMessage';\nimport MessageMeta from '../../../common/message/MessageMeta';\nimport MessageName from '../../../common/message/MessageName';\nimport { MessageType } from '../../../common/message/MessageType';\nimport MessageId from '../../../common/message/MessageId';\n\nexport default class Query extends SimpleMessage {\n    constructor(id: MessageId, name: MessageName, meta?: MessageMeta) {\n        super(id, MessageType.QUERY, name, meta);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/Message.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Serializable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/SimpleMessage.ts",{"fileContent":"import Message from './Message';\n\nexport default class SimpleMessage extends Message {\n\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/Message.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Serializable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/Message.ts",{"fileContent":"import { MessageType } from './MessageType';\nimport MessageId from './MessageId';\nimport MessageName from './MessageName';\nimport MessageMeta from './MessageMeta';\nimport Serializable from '../Serializable';\nimport { PrimitivesObject } from '../PrimitiveType';\n\nexport default abstract class Message implements Serializable {\n    protected constructor(\n        protected _id: MessageId,\n        protected _type: MessageType,\n        protected _name: MessageName,\n        protected _meta: MessageMeta = new MessageMeta(),\n    ) {}\n\n    get id(): MessageId {\n        return this._id;\n    }\n\n    set id(value: MessageId) {\n        this._id = value;\n    }\n\n    get type(): MessageType {\n        return this._type;\n    }\n\n    set type(value: MessageType) {\n        this._type = value;\n    }\n\n    get name(): MessageName {\n        return this._name;\n    }\n\n    set name(value: MessageName) {\n        this._name = value;\n    }\n\n    public get meta(): MessageMeta {\n        return this._meta;\n    }\n\n    set meta(value: MessageMeta) {\n        this._meta = value;\n    }\n\n    toPrimitive(): PrimitivesObject {\n        return {\n            id: this._id.value(),\n            name: this._name.value(),\n            type: this._type.toString(),\n            meta: this._meta.toPrimitive(),\n        };\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Serializable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts",{"fileContent":"import { PrimitivesObject, PrimitiveType } from '../PrimitiveType';\nimport Serializable from '../Serializable';\n\ntype MessageMetaType = {\n    correlationId?: string,\n    replyTo?: string,\n    time?: number,\n    [key: string]: PrimitiveType,\n}\n\nexport default class MessageMeta implements Serializable {\n    static KEYS = {\n        CORRELATION_ID: 'correlationId',\n        REPLY_TO: 'replyTo',\n        TIME: 'time',\n    };\n\n    constructor(\n        private readonly value: MessageMetaType = {},\n    ) {}\n\n    set(key: string, value: PrimitiveType): void {\n        this.value[key] = value;\n    }\n\n    toPrimitive(): PrimitivesObject {\n        return this.value;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Serializable.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts",{"fileContent":"import 'reflect-metadata';\nimport { ConstructorParam, ContainerKey } from '../../domain/di/Container';\nimport { INJECT_TARGET } from './DependencyContainer';\n\nexport default function Inject(serviceKey: ContainerKey) {\n    return function (target: any, propertyKey: string | symbol, parameterIndex: number) {\n        const metadataKey = `${target.prototype.constructor.name}:constructor-params`;\n        const constructorParams: ConstructorParam[] = Reflect.getMetadata(metadataKey, INJECT_TARGET) || [];\n        constructorParams.push({\n            index: parameterIndex,\n            serviceKey,\n        })\n        Reflect.defineMetadata(metadataKey, constructorParams, INJECT_TARGET)\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/ContainerTag.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/Utils.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts",{"fileContent":"import { NewableClass } from '../../../common/NewableClass';\nimport Container, {\n    ConstructorParam,\n    ContainerKey,\n    ContainerService,\n    ContainerServiceType,\n} from '../../domain/di/Container';\nimport { ContainerTag } from '../../domain/di/ContainerTag';\nimport { isNullOrUndefined } from '../Utils';\n\nexport const INJECT_TARGET = { name: 'Inject' };\n\ntype ServiceItem = {\n    key: ContainerKey,\n    type: ContainerServiceType,\n    service: ContainerService | NewableClass,\n    tags: ContainerTag[],\n};\n\nexport default class DependencyContainer implements Container {\n    private readonly services: ServiceItem[] = [];\n\n    private readonly cache: Map<ContainerKey, ContainerService> = new Map<ContainerKey, ContainerService>();\n\n    public addInstance(key: ContainerKey, service: ContainerService, tags?: ContainerTag[]) {\n        this.services.push({\n            key,\n            type: 'instance',\n            service,\n            tags: tags || [],\n        });\n    }\n\n    public addClass(key: ContainerKey, constructor: NewableClass, tags?: ContainerTag[]) {\n        this.services.push({\n            key,\n            type: 'class',\n            service: constructor,\n            tags: tags || [],\n        });\n    }\n\n    public get<T>(key: ContainerKey): T {\n        const serviceItem = this.services.find((item) => item.key === key);\n        if (!serviceItem) {\n            throw new Error(`The service ${key.toString()} is not defined`);\n        }\n        switch (serviceItem.type) {\n            case 'class': {\n                const cacheService = this.cache.get(key) as T;\n                if (cacheService) {\n                    return cacheService;\n                }\n                const service = this.buildInstance<T>(serviceItem.service);\n                this.cache.set(key, service);\n                return service;\n            }\n            case 'instance': {\n                return serviceItem.service as T;\n            }\n            default:\n                throw new Error(`Not allow ${String(key)} service`);\n        }\n    }\n\n    private buildInstance<S>(constructor: NewableClass): S {\n        const metadataKey = `${constructor.prototype.constructor.name}:constructor-params`;\n        const constructorParams: ConstructorParam[] = Reflect.getMetadata(metadataKey, INJECT_TARGET) || [];\n\n        const args = constructorParams\n            .sort((x, y) => x.index - y.index)\n            .map((constructorParam) => {\n                if (constructorParam.serviceKey) {\n                    return this.get(constructorParam.serviceKey)\n                } else if (!isNullOrUndefined(constructorParam.tag)) {\n                    return this.getByTag(constructorParam.tag)\n                }\n                throw new Error(`Constructor ${constructor.prototype.constructor.name}(${constructorParam.index}) not has defined service key or tag`);\n            })\n\n        return Reflect.construct(constructor, args) as S;\n    }\n\n    public getByTag(tag: ContainerTag): ContainerService[] {\n        return this.services\n            .filter((service) => service.tags.includes(tag))\n            .map((service) => this.get(service.key))\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/ContainerTag.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/Utils.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/Utils.ts",{"fileContent":"export function isNullOrUndefined(value: any) {\n    return value === undefined || value === null;\n}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryHandler.ts",{"fileContent":"import { NewableClass } from '../../../common/NewableClass';\nimport Query from './Query';\nimport { QueryResponse } from './QueryResponse';\n\nexport abstract class QueryHandler<Q extends Query, R extends QueryResponse> {\n    private readonly _queryName: string;\n\n    protected constructor(query: NewableClass<Query>) {\n        this._queryName = query.name;\n    }\n\n    public subscribedTo(): string {\n        return this._queryName;\n    }\n\n    abstract handle(query: Q): Promise<R>;\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/Authenticator.ts",{"fileContent":"import { Keys } from '../../../shared/infrastructure/di/Keys';\nimport AuthToken from '../../domain/AuthToken';\nimport AuthTokenRepository from '../../domain/AuthTokenRepository';\nimport AuthUserEmail from '../../domain/AuthUserEmail';\nimport AuthUserPassword from '../../domain/AuthUserPassword';\nimport { AuthUserRepository } from '../../domain/AuthUserRepository';\nimport AuthUserSearchByEmail from '../search-by-email/AuthUserSearchByEmail';\nimport Inject from '../../../../microk/core/infrastructure/di/Inject.decorator';\nimport EventBus from '../../../../microk/event/domain/EventBus';\n\nexport default class Authenticator {\n    private readonly authUserSearcherByEmail: AuthUserSearchByEmail;\n    constructor(\n        @Inject(Keys.Auth.AuthUserRepository) authUserRepository: AuthUserRepository,\n        @Inject(Keys.Auth.AuthTokenRepository) private readonly authTokenRepository: AuthTokenRepository,\n        @Inject(Keys.CQRS.EventBus) private readonly eventBus: EventBus,\n    ) {\n        this.authUserSearcherByEmail = new AuthUserSearchByEmail(authUserRepository);\n    }\n\n    async run(email: AuthUserEmail, password: AuthUserPassword): Promise<AuthToken> {\n        const authUser = await this.authUserSearcherByEmail.search(email);\n\n        authUser.authenticate(password);\n\n        this.eventBus.publish(authUser.pullDomainEvents())\n\n        return this.authTokenRepository.generate(authUser);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthToken.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthTokenRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/search-by-email/AuthUserSearchByEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/EventBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUser.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/EmailValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Criteria.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Nullable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Order.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterOperator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Filters.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/errors/NotFoundHttpError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Filter.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterField.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterValue.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/DomainEvent.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/search-by-email/AuthUserSearchByEmail.ts",{"fileContent":"import { AuthUser } from '../../domain/AuthUser';\nimport AuthUserEmail from '../../domain/AuthUserEmail';\nimport { AuthUserRepository } from '../../domain/AuthUserRepository';\nimport { Order } from '../../../../microk/common/criteria/Order';\nimport { FilterOperator } from '../../../../microk/common/criteria/FilterOperator';\nimport { Filters } from '../../../../microk/common/criteria/Filters';\nimport NotFoundHttpError from '../../../../microk/common/http/errors/NotFoundHttpError';\nimport { Filter } from '../../../../microk/common/criteria/Filter';\nimport { FilterField } from '../../../../microk/common/criteria/FilterField';\nimport { Criteria } from '../../../../microk/common/criteria/Criteria';\nimport { FilterValue } from '../../../../microk/common/criteria/FilterValue';\n\nexport default class AuthUserSearchByEmail {\n    constructor(\n        private readonly authUserRepository: AuthUserRepository,\n    ) {\n    }\n\n    public async search(email: AuthUserEmail): Promise<NonNullable<AuthUser>> {\n        const criteria = this.buildCriteria(email)\n        const authUser = await this.authUserRepository.searchOneByCriteria(criteria);\n\n        if (!authUser) {\n            throw new NotFoundHttpError(`Not found user with email <${email.toString()}>`)\n        }\n\n        return authUser;\n    }\n\n    private buildCriteria(email: AuthUserEmail) {\n        return new Criteria(\n            new Filters([new Filter(\n                new FilterField('email'),\n                FilterOperator.equal(),\n                new FilterValue(email.toString()),\n            )]),\n            Order.none(),\n        );\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUser.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Order.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterOperator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Filters.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/errors/NotFoundHttpError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Filter.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterField.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Criteria.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterValue.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserAuthenticated.DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserIncorrectPasswordError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserRecoverPasswordToken.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/AggregateRoot.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Nullable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/EmailValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/OrderBy.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/OrderType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/EnumValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpStatus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/Utils.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Order.ts",{"fileContent":"import { OrderBy } from './OrderBy';\nimport { OrderType, OrderTypes } from './OrderType';\n\nexport class Order {\n    readonly orderBy: OrderBy;\n    readonly orderType: OrderType;\n\n    constructor(orderBy: OrderBy, orderType: OrderType) {\n        this.orderBy = orderBy;\n        this.orderType = orderType;\n    }\n\n    static fromValues(orderBy?: string, orderType?: string): Order {\n        if (!orderBy) {\n            return Order.none();\n        }\n\n        return new Order(new OrderBy(orderBy), OrderType.fromValue(orderType || OrderTypes.ASC));\n    }\n\n    static none(): Order {\n        return new Order(new OrderBy(''), new OrderType(OrderTypes.NONE));\n    }\n\n    static desc(orderBy: string): Order {\n        return new Order(new OrderBy(orderBy), new OrderType(OrderTypes.DESC));\n    }\n\n    static asc(orderBy: string): Order {\n        return new Order(new OrderBy(orderBy), new OrderType(OrderTypes.ASC));\n    }\n\n    public hasOrder() {\n        return !this.orderType.isNone();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/OrderBy.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/OrderType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/EnumValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/OrderBy.ts",{"fileContent":"import { StringValueObject } from '../value-object/StringValueObject';\n\nexport class OrderBy extends StringValueObject {\n    constructor(value: string) {\n        super(value);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/OrderType.ts",{"fileContent":"import EnumValueObject from '../value-object/EnumValueObject';\nimport { InvalidArgumentError } from '../value-object/InvalidArgumentError';\n\nexport enum OrderTypes {\n  ASC = 'ASC',\n  DESC = 'DESC',\n  NONE = 'none'\n}\n\nexport class OrderType extends EnumValueObject<OrderTypes> {\n    constructor(value: OrderTypes) {\n        super(value, Object.values(OrderTypes));\n    }\n\n    static fromValue(value: string): OrderType {\n        switch (value) {\n            case OrderTypes.ASC:\n                return new OrderType(OrderTypes.ASC);\n            case OrderTypes.DESC:\n                return new OrderType(OrderTypes.DESC);\n            default:\n                throw new InvalidArgumentError(`The order type ${value} is invalid`);\n        }\n    }\n\n    public isNone(): boolean {\n        return this.value() === OrderTypes.NONE;\n    }\n\n    public isAsc(): boolean {\n        return this.value() === OrderTypes.ASC;\n    }\n\n    protected throwErrorForInvalidValue(value: OrderTypes): void {\n        throw new InvalidArgumentError(`The order type ${value} is invalid`);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/EnumValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/EnumValueObject.ts",{"fileContent":"export default abstract class EnumValueObject<T> {\n    private readonly _value: T;\n\n    protected constructor(value: T, public readonly validValues: T[]) {\n        this._value = value;\n        this.checkValueIsValid(value);\n    }\n\n    public checkValueIsValid(value: T): void {\n        if (!this.validValues.includes(value)) {\n            this.throwErrorForInvalidValue(value);\n        }\n    }\n\n    public value(): T {\n        return this._value;\n    }\n\n    protected abstract throwErrorForInvalidValue(value: T): void;\n}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterOperator.ts",{"fileContent":"import EnumValueObject from '../value-object/EnumValueObject';\nimport { InvalidArgumentError } from '../value-object/InvalidArgumentError';\n\nexport enum Operator {\n  EQUAL = '=',\n  NOT_EQUAL = '!=',\n  GT = '>',\n  GT_OR_EQUAL = '>=',\n  LT = '<',\n  LT_OR_EQUAL = '<=',\n  LIKE = 'LIKE',\n  // CONTAINS = 'CONTAINS',\n  // NOT_CONTAINS = 'NOT_CONTAINS',\n}\n\nexport class FilterOperator extends EnumValueObject<Operator> {\n    static equal() {\n        return this.fromValue(Operator.EQUAL);\n    }\n\n    static fromValue(value: string): FilterOperator {\n        switch (value) {\n            case Operator.EQUAL:\n                return new FilterOperator(Operator.EQUAL);\n            case Operator.NOT_EQUAL:\n                return new FilterOperator(Operator.NOT_EQUAL);\n            case Operator.GT:\n                return new FilterOperator(Operator.GT);\n            case Operator.GT_OR_EQUAL:\n                return new FilterOperator(Operator.GT_OR_EQUAL);\n            case Operator.LT:\n                return new FilterOperator(Operator.LT);\n            case Operator.LT_OR_EQUAL:\n                return new FilterOperator(Operator.LT_OR_EQUAL);\n            case Operator.LIKE:\n                return new FilterOperator(Operator.LIKE);\n            // case Operator.CONTAINS:\n            //     return new FilterOperator(Operator.CONTAINS);\n            // case Operator.NOT_CONTAINS:\n            //     return new FilterOperator(Operator.NOT_CONTAINS);\n            default:\n                throw new InvalidArgumentError(`The filter operator ${value} is invalid`);\n        }\n    }\n\n    constructor(value: Operator) {\n        super(value, Object.values(Operator));\n    }\n\n    protected throwErrorForInvalidValue(value: Operator): void {\n        throw new InvalidArgumentError(`The filter operator ${value} is invalid`);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/EnumValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Filters.ts",{"fileContent":"import { Filter } from './Filter';\n\nexport class Filters {\n    readonly filters: Filter[];\n\n    constructor(filters: Filter[]) {\n        this.filters = filters;\n    }\n\n    static fromValues(filters: Array<Map<string, string>>): Filters {\n        return new Filters(filters.map(Filter.fromValues));\n    }\n\n    static none(): Filters {\n        return new Filters([]);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Filter.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterField.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterOperator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterValue.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Filter.ts",{"fileContent":"import { InvalidArgumentError } from '../value-object/InvalidArgumentError';\nimport { FilterField } from './FilterField';\nimport { FilterOperator } from './FilterOperator';\nimport { FilterValue } from './FilterValue';\n\nexport class Filter {\n    readonly field: FilterField;\n    readonly operator: FilterOperator;\n    readonly value: FilterValue;\n\n    constructor(field: FilterField, operator: FilterOperator, value: FilterValue) {\n        this.field = field;\n        this.operator = operator;\n        this.value = value;\n    }\n\n    static fromValues(values: Map<string, string>): Filter {\n        const field = values.get('field');\n        const operator = values.get('operator');\n        const value = values.get('value');\n\n        if (!field || !operator || !value) {\n            throw new InvalidArgumentError('The filter is invalid');\n        }\n\n        return new Filter(new FilterField(field), FilterOperator.fromValue(operator), new FilterValue(value));\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterField.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterOperator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterValue.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/EnumValueObject.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterField.ts",{"fileContent":"import { StringValueObject } from '../value-object/StringValueObject';\n\nexport class FilterField extends StringValueObject {\n    constructor(value: string) {\n        super(value);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterValue.ts",{"fileContent":"import { StringValueObject } from '../value-object/StringValueObject';\n\nexport class FilterValue extends StringValueObject {\n    constructor(value: string) {\n        super(value);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/errors/NotFoundHttpError.ts",{"fileContent":"import HttpError from '../HttpError';\nimport { HttpStatus } from '../HttpStatus';\n\nexport default class NotFoundHttpError extends HttpError {\n    constructor(message?: string) {\n        super(HttpStatus.NOT_FOUND, message || 'Object not found');\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpStatus.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpError.ts",{"fileContent":"import { HttpStatus } from './HttpStatus';\n\nexport default class HttpError extends Error {\n    constructor(\n        private readonly _code: HttpStatus,\n        message: string,\n    ) {\n        super(message);\n    }\n\n    get code(): HttpStatus {\n        return this._code;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpStatus.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpStatus.ts",{"fileContent":"export enum HttpStatus {\n    OK = 200,\n    CREATED = 201,\n\n    BAD_REQUEST = 400,\n    UNAUTHORIZED = 401,\n    PAYMENT_REQUIRED = 402,\n    FORBIDDEN = 403,\n    NOT_FOUND = 404,\n    METHOD_NOT_ALLOWED = 405,\n    NOT_ACCEPTABLE = 406,\n    PROXY_AUTHENTICATION_REQUIRED = 407,\n    REQUEST_TIMEOUT = 408,\n    CONFLICT = 409,\n    GONE = 410,\n    PAYLOAD_TOO_LARGE = 413,\n\n    INTERNAL_SERVER_ERROR = 500,\n    NOT_IMPLEMENTED = 501,\n}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Criteria.ts",{"fileContent":"import { isNullOrUndefined } from '../../core/infrastructure/Utils';\nimport { Filters } from './Filters';\nimport { Order } from './Order';\n\nexport class Criteria {\n    readonly filters: Filters;\n    readonly order: Order;\n    readonly limit?: number;\n    readonly offset?: number;\n\n    constructor(filters: Filters, order: Order, limit?: number, offset?: number) {\n        this.filters = filters;\n        this.order = order;\n        this.limit = limit;\n        this.offset = offset;\n    }\n\n    public hasFilters(): boolean {\n        return this.filters.filters.length > 0;\n    }\n\n    hasPagination(): boolean {\n        return !isNullOrUndefined(this.limit) && !isNullOrUndefined(this.offset);\n    }\n\n    hasOrder(): boolean {\n        return this.order && this.order.hasOrder();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/Utils.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Filters.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Order.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Filter.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/OrderBy.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/OrderType.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/infrastructure/controllers/AuthenticateController.ts",{"fileContent":"import { Keys } from '../../../shared/infrastructure/di/Keys';\nimport AuthenticateQuery from '../../application/login/AuthenticateQuery';\nimport AuthenticateQueryResponse from '../../application/login/AuthenticateQueryResponse';\nimport AuthenticateResponseDto from './AuthenticateResponse.Dto';\nimport Inject from '../../../../microk/core/infrastructure/di/Inject.decorator';\nimport { ControllerConfig } from '../../../../microk/core/domain/http/ControllerConfig';\nimport QueryBus from '../../../../microk/cqrs/domain/query/QueryBus';\nimport { ControllerResponse } from '../../../../microk/core/domain/http/ControllerResponse';\nimport Controller from '../../../../microk/core/domain/http/Controller';\nimport { HttpMethod } from '../../../../microk/common/http/HttpMethod';\nimport { Req } from '../../../../microk/core/domain/http/Req';\nimport Response from '../../../../microk/core/domain/http/Response';\n\n/**\n * @openapi\n * /auth/authenticate:\n *   post:\n *     operationId: authenticate\n *     tags:\n *       - Auth\n *     summary: Authenticate user in app.\n *     description: ''\n *     requestBody:\n *       description: \"AuthUser data to authenticate\"\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             $ref: '#/components/schemas/AuthenticateRequestDto'\n *     responses:\n *       201:\n *         description: \"Successful operation. The notification has been created on the server.\"\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 data:\n *                   $ref: '#/components/schemas/AuthenticateResponseDto'\n *       default:\n *         description: \"Error\"\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/ResponseError'\n */\nexport default class AuthenticateController implements Controller<AuthenticateQueryResponse> {\n    constructor(\n        @Inject(Keys.CQRS.QueryBus) private readonly queryBus: QueryBus,\n    ) {\n    }\n\n    config(): ControllerConfig {\n        return {\n            path: '/auth/authenticate',\n            method: HttpMethod.POST,\n        };\n    }\n\n    async run(req: Req): Promise<ControllerResponse<AuthenticateResponseDto>> {\n        const loginQuery = AuthenticateQuery.fromRequest(req);\n        const loginQueryResponse = await this.queryBus.ask<AuthenticateQueryResponse>(loginQuery);\n        return Response.success({\n            authToken: loginQueryResponse.authToken,\n        })\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/AuthenticateQuery.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/AuthenticateQueryResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/infrastructure/controllers/AuthenticateResponse.Dto.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/ControllerConfig.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/ControllerResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Controller.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpMethod.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Req.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Response.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Middleware.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpStatus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/ResponseContent.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpMethod.ts",{"fileContent":"export enum HttpMethod {\n    GET = 'GET',\n    POST = 'POST',\n    PUT = 'PUT',\n    DELETE = 'DELETE',\n}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Response.ts",{"fileContent":"import { ControllerResponse } from './ControllerResponse';\nimport { HttpStatus } from '../../../common/http/HttpStatus';\nimport ResponseContent from './ResponseContent';\n\nexport default class Response {\n    static success<T>(data: T = undefined, pagination: ResponseContent['pagination'] = undefined): ControllerResponse<T> {\n        return {\n            status: HttpStatus.OK,\n            content: {\n                data,\n                pagination,\n            },\n        }\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/ControllerResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpStatus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/ResponseContent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/infrastructure/generators/JwtAuthTokenRepository.ts",{"fileContent":"import { EnvKey } from '../../../../app/ProcessEnv';\nimport { Keys } from '../../../shared/infrastructure/di/Keys';\nimport FixBikeJwtPayload from '../../../shared/infrastructure/FixBikeJwtPayload';\nimport AuthToken from '../../domain/AuthToken';\nimport AuthTokenRepository from '../../domain/AuthTokenRepository';\nimport { AuthUser } from '../../domain/AuthUser';\nimport jwt from 'jsonwebtoken';\nimport Inject from '../../../../microk/core/infrastructure/di/Inject.decorator';\nimport Env from '../../../../microk/core/domain/Env';\n\n\nexport default class JwtAuthTokenRepository implements AuthTokenRepository {\n    constructor(\n        @Inject(Keys.App.Env) private readonly env: Env<EnvKey>,\n    ) {\n    }\n\n    generate(authUser: AuthUser): AuthToken {\n        const jwtPayload: FixBikeJwtPayload = {\n            authUserId: authUser.id.toString(),\n        };\n        const token = jwt.sign(jwtPayload, this.env.get('JWT_SECRET'));\n        return AuthToken.fromString(token);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/app/ProcessEnv.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/FixBikeJwtPayload.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthToken.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthTokenRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUser.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Env.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserAuthenticated.DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserIncorrectPasswordError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserRecoverPasswordToken.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/AggregateRoot.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Nullable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthToken.ts",{"fileContent":"import { StringValueObject } from '../../../microk/common/value-object/StringValueObject';\n\nexport default class AuthToken extends StringValueObject {\n    private constructor(value: string) {\n        super(value);\n    }\n\n    static fromString(token: string): AuthToken {\n        return new this(token);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/infrastructure/persistence/TypeOrmAuthUserRepository.ts",{"fileContent":"import { Connection, EntitySchema } from 'typeorm';\nimport { AuthUser } from '../../domain/AuthUser';\nimport AuthUserId from '../../domain/AuthUserId';\nimport { AuthUserRepository } from '../../domain/AuthUserRepository';\nimport { AuthUserEntity } from './typeorm/AuthUser.Entity';\nimport { TypeOrmRepository } from '../../../../microk/persistence/infrastructure/typeorm/TypeOrmRepository';\nimport { Nullable } from '../../../../microk/common/Nullable';\nimport Inject from '../../../../microk/core/infrastructure/di/Inject.decorator';\nimport { Keys } from '../../../shared/infrastructure/di/Keys';\n\nexport class TypeOrmAuthUserRepository extends TypeOrmRepository<AuthUser> implements AuthUserRepository {\n    constructor(@Inject(Keys.App.ConnectionManager) client: Promise<Connection>) {\n        super(client);\n    }\n\n    protected entitySchema(): EntitySchema<AuthUser> {\n        return AuthUserEntity;\n    }\n\n    public save(authUser: AuthUser): Promise<void> {\n        return this.persist(authUser);\n    }\n\n    public async search(id: AuthUserId): Promise<Nullable<AuthUser>> {\n        const repository = await this.repository();\n\n        return repository.findOne({ id });\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUser.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/infrastructure/persistence/typeorm/AuthUser.Entity.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/TypeOrmRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Nullable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserAuthenticated.DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserIncorrectPasswordError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserRecoverPasswordToken.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/AggregateRoot.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Criteria.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/ValueObjectTransformer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/TypeOrmCriteriaConverter.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/infrastructure/persistence/typeorm/AuthUser.Entity.ts",{"fileContent":"import { EntitySchema } from 'typeorm';\nimport { AuthUser } from '../../../domain/AuthUser';\nimport AuthUserEmail from '../../../domain/AuthUserEmail';\nimport AuthUserId from '../../../domain/AuthUserId';\nimport AuthUserPassword from '../../../domain/AuthUserPassword';\nimport AuthUserRecoverPasswordToken from '../../../domain/AuthUserRecoverPasswordToken';\nimport {\n    ValueObjectTransformer,\n} from '../../../../../microk/persistence/infrastructure/typeorm/ValueObjectTransformer';\n\nexport const AuthUserEntity = new EntitySchema<AuthUser>({\n    name: 'AuthUser',\n    tableName: 'auth_user',\n    target: AuthUser,\n    columns: {\n        id: {\n            type: String,\n            primary: true,\n            transformer: ValueObjectTransformer(AuthUserId),\n        },\n        email: {\n            type: String,\n            transformer: ValueObjectTransformer(AuthUserEmail),\n        },\n        password: {\n            type: String,\n            transformer: ValueObjectTransformer(AuthUserPassword),\n        },\n        recoverPasswordToken: {\n            type: String,\n            nullable: true,\n            transformer: ValueObjectTransformer(AuthUserRecoverPasswordToken),\n        },\n    },\n});\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUser.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserRecoverPasswordToken.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/ValueObjectTransformer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserAuthenticated.DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserIncorrectPasswordError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/AggregateRoot.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Nullable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/EmailValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUser.ts",{"fileContent":"import AuthUserAuthenticatedDomainEvent from './AuthUserAuthenticated.DomainEvent';\nimport AuthUserEmail from './AuthUserEmail';\nimport AuthUserId from './AuthUserId';\nimport AuthUserIncorrectPasswordError from './AuthUserIncorrectPasswordError';\nimport AuthUserPassword from './AuthUserPassword';\nimport AuthUserRecoverPasswordToken from './AuthUserRecoverPasswordToken';\nimport { AggregateRoot } from '../../../microk/common/AggregateRoot';\nimport { PrimitivesObject } from '../../../microk/common/PrimitiveType';\nimport { Nullable } from '../../../microk/common/Nullable';\n\nexport class AuthUser extends AggregateRoot {\n    constructor(\n        readonly id: AuthUserId,\n        readonly email: AuthUserEmail,\n        readonly password: AuthUserPassword,\n        readonly recoverPasswordToken: Nullable<AuthUserRecoverPasswordToken>,\n    ) {\n        super();\n    }\n\n    toPrimitives(): PrimitivesObject {\n        return {\n            id: this.id.value(),\n            email: this.email.value(),\n            password: this.password.value(),\n            recoverPasswordToken: this.recoverPasswordToken?.value(),\n        };\n    }\n\n    authenticate(password: AuthUserPassword) {\n        if (!this.password.equals(password)) {\n            throw new AuthUserIncorrectPasswordError();\n        }\n        this.record(new AuthUserAuthenticatedDomainEvent(this))\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserAuthenticated.DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserIncorrectPasswordError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserRecoverPasswordToken.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/AggregateRoot.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Nullable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUser.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/EmailValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/errors/UnauthorizedHttpError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserAuthenticated.DomainEvent.ts",{"fileContent":"import { AuthUser } from './AuthUser';\nimport DomainEvent from '../../../microk/event/domain/DomainEvent';\nimport MessageNameFactory from '../../../microk/common/value-object/MessageNameFactory';\nimport { MessageType } from '../../../microk/common/message/MessageType';\nimport AggregateMessageOccurredOn from '../../../microk/common/message/AggregateMessageOccurredOn';\nimport MessageId from '../../../microk/common/message/MessageId';\n\nexport default class AuthUserAuthenticatedDomainEvent extends DomainEvent {\n    constructor(authUser: AuthUser) {\n        super(\n            MessageId.create(),\n            MessageNameFactory.create('authenticated', 'auth_user', MessageType.DOMAIN_EVENT),\n            authUser.id,\n            AggregateMessageOccurredOn.now(),\n        );\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUser.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserAuthenticated.DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserIncorrectPasswordError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserRecoverPasswordToken.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/AggregateRoot.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Nullable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/DateValueObject.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/DomainEvent.ts",{"fileContent":"import AggregateMessage from '../../common/message/AggregateMessage';\nimport MessageMeta from '../../common/message/MessageMeta';\nimport { MessageType } from '../../common/message/MessageType';\nimport MessageName from '../../common/message/MessageName';\nimport AggregateMessageOccurredOn from '../../common/message/AggregateMessageOccurredOn';\nimport MessageId from '../../common/message/MessageId';\nimport Uuid from '../../common/value-object/Uuid';\n\nexport default class DomainEvent extends AggregateMessage {\n    constructor(\n        id: MessageId,\n        name: MessageName,\n        aggregateId: Uuid,\n        occurredOn: AggregateMessageOccurredOn,\n        meta: MessageMeta = new MessageMeta(),\n    ) {\n        super(id, MessageType.DOMAIN_EVENT, name, aggregateId, occurredOn, meta);\n    }\n}\n\nexport type DomainEventClass = { EVENT_NAME: MessageName, fromPrimitives(...args: any[]): DomainEvent; };\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/Message.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Serializable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/DateValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessage.ts",{"fileContent":"import { PrimitivesObject } from '../PrimitiveType';\nimport Uuid from '../value-object/Uuid';\nimport Message from './Message';\nimport MessageMeta from './MessageMeta';\nimport { MessageType } from './MessageType';\nimport MessageName from './MessageName';\nimport MessageId from './MessageId';\nimport AggregateMessageOccurredOn from './AggregateMessageOccurredOn';\n\nexport default abstract class AggregateMessage extends Message {\n    protected constructor(\n        id: MessageId,\n        type: MessageType,\n        name: MessageName,\n        protected _aggregateId: Uuid,\n        protected _occurredOn: AggregateMessageOccurredOn,\n        meta: MessageMeta = new MessageMeta()\n    ) {\n        super(id, type, name, meta);\n    }\n\n    get aggregateId(): Uuid {\n        return this._aggregateId;\n    }\n\n    set aggregateId(value: Uuid) {\n        this._aggregateId = value;\n    }\n\n    get occurredOn(): AggregateMessageOccurredOn {\n        return this._occurredOn;\n    }\n\n    set occurredOn(value: AggregateMessageOccurredOn) {\n        this._occurredOn = value;\n    }\n\n    toPrimitive(): PrimitivesObject {\n        return {\n            ...super.toPrimitive(),\n            aggregateId: this._aggregateId.value(),\n            occurredOn: this._occurredOn.toString(),\n        };\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/Message.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Serializable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/DateValueObject.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessageOccurredOn.ts",{"fileContent":"import { DateValueObject } from '../value-object/DateValueObject';\n\nexport default class AggregateMessageOccurredOn extends DateValueObject {\n    static now(): AggregateMessageOccurredOn {\n        return new AggregateMessageOccurredOn(new Date());\n    }\n\n    constructor(value: Date) {\n        super(value);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/DateValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/DateValueObject.ts",{"fileContent":"import { ValueObject } from './ValueObject';\n\nexport abstract class DateValueObject extends ValueObject<Date> {\n    protected constructor(value: Date) {\n        super(value);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserIncorrectPasswordError.ts",{"fileContent":"import UnauthorizedHttpError from '../../../microk/common/http/errors/UnauthorizedHttpError';\n\nexport default class AuthUserIncorrectPasswordError extends UnauthorizedHttpError {\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/errors/UnauthorizedHttpError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpStatus.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/errors/UnauthorizedHttpError.ts",{"fileContent":"import HttpError from '../HttpError';\nimport { HttpStatus } from '../HttpStatus';\n\nexport default class UnauthorizedHttpError extends HttpError {\n    constructor(message?: string) {\n        super(HttpStatus.UNAUTHORIZED, message || 'Unauthorized');\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpStatus.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/AggregateRoot.ts",{"fileContent":"import DomainEvent from '../event/domain/DomainEvent';\n\nexport abstract class AggregateRoot {\n    private domainEvents: Array<DomainEvent>;\n\n    constructor() {\n        this.domainEvents = [];\n    }\n\n    pullDomainEvents(): Array<DomainEvent> {\n        const domainEvents = this.domainEvents.slice();\n        this.domainEvents = [];\n\n        return domainEvents;\n    }\n\n    record(event: DomainEvent): void {\n        this.domainEvents.push(event);\n    }\n\n    abstract toPrimitives(): any;\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserId.ts",{"fileContent":"import Uuid from '../../../microk/common/value-object/Uuid';\n\nexport default class AuthUserId extends Uuid {\n\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserRecoverPasswordToken.ts",{"fileContent":"import { StringValueObject } from '../../../microk/common/value-object/StringValueObject';\n\nexport default class AuthUserRecoverPasswordToken extends StringValueObject {\n    constructor(value: string) {\n        super(value);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/ValueObjectTransformer.ts",{"fileContent":"import { FindOperator } from 'typeorm';\nimport { NewableClass } from '../../../common/NewableClass';\nimport { ValueObject } from '../../../common/value-object/ValueObject';\n\nexport const ValueObjectTransformer = (valueObject: NewableClass<ValueObject<any>>) => {\n    return {\n        to: (vo: ValueObject<any>): any => {\n            if (vo instanceof FindOperator || typeof vo === 'string' || typeof vo === 'number') {\n                return vo;\n            }\n            return vo?.value();\n        },\n        from: (value: any): ValueObject<any> => (value ? new valueObject(value) : null),\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/TypeOrmRepository.ts",{"fileContent":"import { Connection, EntitySchema, Repository } from 'typeorm';\nimport { Criteria } from '../../../common/criteria/Criteria';\nimport { Nullable } from '../../../common/Nullable';\nimport TypeOrmCriteriaConverter from './TypeOrmCriteriaConverter';\n\nexport abstract class TypeOrmRepository<T> {\n    private readonly criteriaConverter = new TypeOrmCriteriaConverter();\n\n    protected constructor(\n        private readonly _client: Promise<Connection>\n    ) {\n    }\n\n    protected abstract entitySchema(): EntitySchema<T>;\n\n    protected client(): Promise<Connection> {\n        return this._client;\n    }\n\n    protected async repository(): Promise<Repository<T>> {\n        return (await this._client).getRepository(this.entitySchema());\n    }\n\n    protected async persist(aggregateRoot: T): Promise<void> {\n        const repository = await this.repository();\n        await repository.save(aggregateRoot as any);\n    }\n\n    public async searchByCriteria(criteria: Criteria): Promise<Nullable<T[]>> {\n        const repository = await this.repository();\n        const findOptions = this.criteriaConverter.convert(criteria);\n        return repository.find(findOptions);\n    }\n\n    public async searchOneByCriteria(criteria: Criteria): Promise<Nullable<T>> {\n        const repository = await this.repository();\n        const findOptions = this.criteriaConverter.convert(criteria);\n        return repository.findOne(findOptions);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Criteria.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Nullable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/TypeOrmCriteriaConverter.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/Utils.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Filters.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Order.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Filter.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterOperator.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/TypeOrmCriteriaConverter.ts",{"fileContent":"import { FindManyOptions } from 'typeorm/find-options/FindManyOptions';\nimport { Equal, LessThan, LessThanOrEqual, Like, MoreThan, MoreThanOrEqual, Not } from 'typeorm';\nimport { Criteria } from '../../../common/criteria/Criteria';\nimport { Filter } from '../../../common/criteria/Filter';\nimport { Operator } from '../../../common/criteria/FilterOperator';\n\nexport default class TypeOrmCriteriaConverter {\n    public convert(criteria: Criteria): FindManyOptions<unknown> {\n        const options: FindManyOptions<unknown> = {};\n\n        if (criteria.hasOrder()) {\n            options.order = {\n                [criteria.order.orderBy.value()]: criteria.order.orderType.value(),\n            };\n        }\n\n        if (criteria.hasPagination()) {\n            options.skip = criteria.offset;\n            options.take = criteria.limit;\n        }\n\n        if (criteria.hasFilters()) {\n            options.where = {};\n            for (const filter of criteria.filters.filters) {\n                options.where[filter.field.value()] = this.buildWhereCondition(filter);\n            }\n        }\n\n        return options;\n    }\n\n    private buildWhereCondition(filter: Filter): any {\n        switch (filter.operator.value()) {\n            case Operator.EQUAL:\n                return Equal(filter.value.value());\n            case Operator.NOT_EQUAL:\n                return Not(Equal(filter.value.value()));\n            case Operator.GT:\n                return MoreThan(filter.value.value());\n            case Operator.GT_OR_EQUAL:\n                return MoreThanOrEqual(filter.value.value());\n            case Operator.LT:\n                return LessThan(filter.value.value());\n            case Operator.LT_OR_EQUAL:\n                return LessThanOrEqual(filter.value.value());\n            case Operator.LIKE:\n                return Like(filter.value.value());\n            // case Operator.CONTAINS:\n            //     return In<string>(filter.value.value);\n            default:\n                return filter.value.value();\n        }\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Criteria.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Filter.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterOperator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/Utils.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Filters.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Order.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterField.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/FilterValue.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/EnumValueObject.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/info/InfoQueryHandler.ts",{"fileContent":"import { Keys } from '../../../shared/infrastructure/di/Keys';\nimport InfoQuery from './InfoQuery';\nimport { InfoResponse } from './InfoResponse';\nimport InfoService from './InfoService';\nimport Inject from '../../../../microk/core/infrastructure/di/Inject.decorator';\nimport { QueryHandler } from '../../../../microk/cqrs/domain/query/QueryHandler';\n\nexport default class InfoQueryHandler extends QueryHandler<InfoQuery, InfoResponse> {\n    constructor(\n        @Inject(Keys.Info.InfoService) private readonly infoService: InfoService,\n    ) {\n        super(InfoQuery)\n    }\n\n    handle(query: InfoQuery): Promise<InfoResponse> {\n        return this.infoService.invoke();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/info/InfoQuery.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/info/InfoResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/info/InfoService.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryHandler.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/domain/InfoRequestedDomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/utils/Sleep.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/EventBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/info/InfoQuery.ts",{"fileContent":"import MessageNameFactory from '../../../../microk/common/value-object/MessageNameFactory';\nimport { MessageType } from '../../../../microk/common/message/MessageType';\nimport MessageId from '../../../../microk/common/message/MessageId';\nimport Query from '../../../../microk/cqrs/domain/query/Query';\n\nexport default class InfoQuery extends Query {\n    constructor() {\n        super(\n            MessageId.create(),\n            MessageNameFactory.create('consulted', 'info', MessageType.QUERY),\n        );\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/info/InfoService.ts",{"fileContent":"import { Keys } from '../../../shared/infrastructure/di/Keys';\nimport InfoRequestedDomainEvent from '../../domain/InfoRequestedDomainEvent';\nimport { InfoResponse } from './InfoResponse';\nimport Inject from '../../../../microk/core/infrastructure/di/Inject.decorator';\nimport { sleep } from '../../../../microk/utils/Sleep';\nimport Uuid from '../../../../microk/common/value-object/Uuid';\nimport EventBus from '../../../../microk/event/domain/EventBus';\n\nexport default class InfoService {\n    constructor(\n        @Inject(Keys.CQRS.EventBus) private readonly eventBus: EventBus,\n    ) {\n    }\n\n    public async invoke(): Promise<InfoResponse> {\n        // throw new NotFoundHttpError('Esto es un error tocho');\n        await sleep(1200)\n\n        this.eventBus.publish([new InfoRequestedDomainEvent(Uuid.create())])\n\n        return {\n            name: 'is-auth',\n            version: '1.0.0',\n        };\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/domain/InfoRequestedDomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/info/InfoResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/utils/Sleep.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/EventBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/domain/InfoRequestedDomainEvent.ts",{"fileContent":"import DomainEvent from '../../../microk/event/domain/DomainEvent';\nimport MessageId from '../../../microk/common/message/MessageId';\nimport AggregateMessageOccurredOn from '../../../microk/common/message/AggregateMessageOccurredOn';\nimport Uuid from '../../../microk/common/value-object/Uuid';\nimport MessageNameFactory from '../../../microk/common/value-object/MessageNameFactory';\nimport { MessageType } from '../../../microk/common/message/MessageType';\n\nexport default class InfoRequestedDomainEvent extends DomainEvent {\n    static EVENT_NAME = MessageNameFactory.create('requested', 'info', MessageType.DOMAIN_EVENT);\n\n    constructor(\n        aggregateId: Uuid,\n    ) {\n        super(\n            MessageId.create(),\n            InfoRequestedDomainEvent.EVENT_NAME,\n            aggregateId,\n            AggregateMessageOccurredOn.now(),\n        );\n    }\n\n    static fromPrimitives(args: any): InfoRequestedDomainEvent {\n        return new InfoRequestedDomainEvent(new Uuid(args.aggregateId));\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/DateValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/utils/Sleep.ts",{"fileContent":"export const sleep = (time) => new Promise((resolve) => {\n    setTimeout(() => {\n        resolve(0);\n    }, time);\n})\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/send-email/SendEmailInfoRequestDomainEventSubscriber.ts",{"fileContent":"import { Keys } from '../../../shared/infrastructure/di/Keys';\nimport InfoRequestedDomainEvent from '../../domain/InfoRequestedDomainEvent';\nimport SendEmailService from './SendEmailService';\nimport Inject from '../../../../microk/core/infrastructure/di/Inject.decorator';\nimport EventSubscriber from '../../../../microk/event/domain/EventSubscriber';\n\nexport default class SendEmailInfoRequestDomainEventSubscriber extends EventSubscriber<InfoRequestedDomainEvent> {\n    constructor(\n        @Inject(Keys.Info.SendEmailService) private readonly sendEmailService: SendEmailService,\n    ) {\n        super(InfoRequestedDomainEvent);\n    }\n\n    async dispatch(event: InfoRequestedDomainEvent): Promise<void> {\n        await this.sendEmailService.invoke();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/domain/InfoRequestedDomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/send-email/SendEmailService.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/EventSubscriber.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/utils/Sleep.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Logger.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/EventSubscriber.ts",{"fileContent":"import DomainEvent, { DomainEventClass } from './DomainEvent';\n\nexport default abstract class EventSubscriber<E extends DomainEvent> {\n    private readonly _domainEventClasses: DomainEventClass[];\n\n    protected constructor(...domainEventClasses: DomainEventClass[]) {\n        this._domainEventClasses = domainEventClasses;\n    }\n\n    public subscribedTo(): DomainEventClass[] {\n        return this._domainEventClasses;\n    }\n\n    public abstract dispatch(event: E): void;\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/send-email/SendEmailService.ts",{"fileContent":"import { Keys } from '../../../shared/infrastructure/di/Keys';\nimport Inject from '../../../../microk/core/infrastructure/di/Inject.decorator';\nimport { sleep } from '../../../../microk/utils/Sleep';\nimport Logger from '../../../../microk/core/domain/Logger';\n\nexport default class SendEmailService {\n    constructor(\n        @Inject(Keys.App.Logger) private readonly logger: Logger,\n    ) {\n    }\n\n    async invoke(): Promise<void> {\n        await sleep(2000)\n        this.logger.info('SEND EMAIL')\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/utils/Sleep.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Logger.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/set-info/SetInfoCommandHandler.ts",{"fileContent":"import { Keys } from '../../../shared/infrastructure/di/Keys';\nimport SetInfoCommand from './SetInfoCommand';\nimport SetInfoService from './SetInfoService';\nimport Inject from '../../../../microk/core/infrastructure/di/Inject.decorator';\nimport CommandHandler from '../../../../microk/cqrs/domain/command/CommandHandler';\n\nexport default class SetInfoCommandHandler extends CommandHandler<SetInfoCommand> {\n    constructor(\n        @Inject(Keys.Info.SetInfoService) private readonly setInfoService: SetInfoService,\n    ) {\n        super(SetInfoCommand);\n    }\n\n    async handle(command: SetInfoCommand): Promise<void> {\n        await this.setInfoService.invoke();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/set-info/SetInfoCommand.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/set-info/SetInfoService.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/command/CommandHandler.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/command/Command.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Logger.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/set-info/SetInfoCommand.ts",{"fileContent":"import Command from '../../../../microk/cqrs/domain/command/Command';\nimport MessageNameFactory from '../../../../microk/common/value-object/MessageNameFactory';\nimport { MessageType } from '../../../../microk/common/message/MessageType';\nimport MessageId from '../../../../microk/common/message/MessageId';\n\nexport default class SetInfoCommand extends Command {\n    constructor() {\n        super(\n            MessageId.create(),\n            MessageNameFactory.create('modified', 'info', MessageType.COMMAND),\n        );\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/command/Command.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/command/Command.ts",{"fileContent":"import SimpleMessage from '../../../common/message/SimpleMessage';\nimport { MessageType } from '../../../common/message/MessageType';\nimport MessageMeta from '../../../common/message/MessageMeta';\nimport MessageName from '../../../common/message/MessageName';\nimport MessageId from '../../../common/message/MessageId';\n\nexport default class Command extends SimpleMessage {\n    constructor(id: MessageId, name: MessageName, meta?: MessageMeta) {\n        super(id, MessageType.COMMAND, name, meta);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/Message.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Serializable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/command/CommandHandler.ts",{"fileContent":"import { NewableClass } from '../../../common/NewableClass';\nimport Command from './Command';\n\nexport default abstract class CommandHandler<C extends Command> {\n    private readonly _commandName: string;\n\n    protected constructor(command: NewableClass<Command>) {\n        this._commandName = command.name;\n    }\n\n    public subscribedTo(): string {\n        return this._commandName;\n    }\n\n    abstract handle(command: C): Promise<void>;\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/command/Command.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/set-info/SetInfoService.ts",{"fileContent":"import { Keys } from '../../../shared/infrastructure/di/Keys';\nimport Inject from '../../../../microk/core/infrastructure/di/Inject.decorator';\nimport Logger from '../../../../microk/core/domain/Logger';\n\nexport default class SetInfoService {\n    constructor(\n        @Inject(Keys.App.Logger) private readonly logger: Logger,\n    ) {\n    }\n\n    public async invoke(): Promise<void> {\n        this.logger.info('SET INFO!')\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Logger.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/infrastructure/InfoController.ts",{"fileContent":"import { Keys } from '../../shared/infrastructure/di/Keys';\nimport InfoQuery from '../application/info/InfoQuery';\nimport { InfoResponse } from '../application/info/InfoResponse';\nimport { Req } from '../../../microk/core/domain/http/Req';\nimport Inject from '../../../microk/core/infrastructure/di/Inject.decorator';\nimport { ControllerConfig } from '../../../microk/core/domain/http/ControllerConfig';\nimport QueryBus from '../../../microk/cqrs/domain/query/QueryBus';\nimport { ControllerResponse } from '../../../microk/core/domain/http/ControllerResponse';\nimport Controller from '../../../microk/core/domain/http/Controller';\nimport { HttpMethod } from '../../../microk/common/http/HttpMethod';\nimport Response from '../../../microk/core/domain/http/Response';\n\nexport default class InfoController implements Controller<InfoResponse> {\n    constructor(\n        @Inject(Keys.CQRS.QueryBus) private readonly queryBus: QueryBus,\n    ) {\n    }\n\n    config(): ControllerConfig {\n        return {\n            method: HttpMethod.GET,\n            path: '/',\n        };\n    }\n\n    async run(req: Req): Promise<ControllerResponse<InfoResponse>> {\n        const data = await this.queryBus.ask<InfoResponse>(new InfoQuery());\n        return Response.success(data)\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/info/InfoQuery.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/info/InfoResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Req.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/ControllerConfig.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/ControllerResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Controller.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpMethod.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Response.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Middleware.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpStatus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/ResponseContent.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/infrastructure/SetInfoController.ts",{"fileContent":"import { Keys } from '../../shared/infrastructure/di/Keys';\nimport SetInfoCommand from '../application/set-info/SetInfoCommand';\nimport { Req } from '../../../microk/core/domain/http/Req';\nimport Inject from '../../../microk/core/infrastructure/di/Inject.decorator';\nimport { ControllerConfig } from '../../../microk/core/domain/http/ControllerConfig';\nimport { ControllerResponse } from '../../../microk/core/domain/http/ControllerResponse';\nimport { CommandBus } from '../../../microk/cqrs/domain/command/CommandBus';\nimport Controller from '../../../microk/core/domain/http/Controller';\nimport { HttpMethod } from '../../../microk/common/http/HttpMethod';\nimport Response from '../../../microk/core/domain/http/Response';\n\nexport default class SetInfoController implements Controller<void> {\n    constructor(\n        @Inject(Keys.CQRS.CommandBus) private readonly commandBus: CommandBus,\n    ) {\n    }\n\n    config(): ControllerConfig {\n        return {\n            method: HttpMethod.PUT,\n            path: '/',\n        };\n    }\n\n    async run(req: Req): Promise<ControllerResponse> {\n        await this.commandBus.dispatch(new SetInfoCommand());\n        return Response.success();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/set-info/SetInfoCommand.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Req.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/ControllerConfig.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/ControllerResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/command/CommandBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Controller.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpMethod.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Response.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/command/Command.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Middleware.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpStatus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/ResponseContent.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/docs/ServerOpenApiConfigFactory.ts",{"fileContent":"import { ServerOpenApiConfig } from '../../../../app/Server';\nimport * as packageJson from './../../../../../package.json';\n\nexport default class ServerOpenApiConfigFactory {\n    static createConfig(): ServerOpenApiConfig {\n        return ({\n            baseDir: __dirname,\n            filesPattern: './../../../../**/*.ts',\n            swaggerUIPath: '/api-docs',\n            apiDocsPath: '/api-docs.yaml',\n            format: 'yaml',\n\n            info: {\n                version: packageJson.version,\n                title: packageJson.name,\n                description: packageJson.description,\n                license: {\n                    name: packageJson.license,\n                },\n            },\n            components: {\n                securitySchemes: {\n                    jwt: {\n                        type: 'http',\n                        scheme: 'bearer',\n                        bearerFormat: 'JWT',\n                    },\n                },\n            },\n        })\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/app/Server.ts","/Users/cuatroochenta/FixBik/fixbik-node/package.json","/Users/cuatroochenta/FixBik/fixbik-node/src/app/ProcessEnv.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/ErrorMiddleware.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/docs/openapi/index.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpStatus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Controller.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Env.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Middleware.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpMethod.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Logger.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/persistence/typeorm/TypeOrmConfigFactory.ts",{"fileContent":"import { EnvKey } from '../../../../../app/ProcessEnv';\nimport Env from '../../../../../microk/core/domain/Env';\nimport { TypeOrmConfig } from '../../../../../microk/persistence/infrastructure/typeorm/TypeOrmConfig';\n\nexport class TypeOrmConfigFactory {\n    static createConfig(env: Env<EnvKey>): TypeOrmConfig {\n        return {\n            host: env.get('MYSQL_HOST'),\n            port: Number(env.get('MYSQL_PORT')),\n            username: env.get('MYSQL_USER'),\n            password: env.get('MYSQL_PASSWORD'),\n            database: env.get('MYSQL_DATABASE'),\n        };\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/app/ProcessEnv.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Env.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/TypeOrmConfig.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/infrastructure/query/QueryHandlersMapper.ts",{"fileContent":"import { ContainerTag } from '../../../core/domain/di/ContainerTag';\nimport InjectTag from '../../../core/infrastructure/di/InjecTag.decorator';\nimport Query from '../../domain/query/Query';\nimport { QueryHandler } from '../../domain/query/QueryHandler';\nimport { QueryNotRegisteredError } from '../../domain/query/QueryNotRegisteredError';\nimport { QueryResponse } from '../../domain/query/QueryResponse';\n\nexport default class QueryHandlersMapper {\n    private queryHandlersMap: Map<string, QueryHandler<Query, QueryResponse>>;\n\n    constructor(\n        @InjectTag(ContainerTag.QUERY_HANDLER) queryHandlers: Array<QueryHandler<Query, QueryResponse>>\n    ) {\n        this.queryHandlersMap = this.formatHandlers(queryHandlers);\n    }\n\n    private formatHandlers(\n        queryHandlers: Array<QueryHandler<Query, QueryResponse>>\n    ): Map<string, QueryHandler<Query, QueryResponse>> {\n        const handlersMap = new Map();\n\n        queryHandlers.forEach((queryHandler) => {\n            handlersMap.set(queryHandler.subscribedTo(), queryHandler);\n        });\n\n        return handlersMap;\n    }\n\n    public search(query: Query): QueryHandler<Query, QueryResponse> {\n        const queryHandler = this.queryHandlersMap.get(query.constructor.name);\n\n        if (!queryHandler) {\n            throw new QueryNotRegisteredError(query);\n        }\n\n        return queryHandler;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/ContainerTag.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/InjecTag.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryHandler.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryNotRegisteredError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/ContainerTag.ts",{"fileContent":"export enum ContainerTag {\n    CONTROLLER,\n    QUERY_HANDLER,\n    COMMAND_HANDLER,\n    EVENT_SUBSCRIBER,\n    MIDDLEWARE,\n    ERROR_MIDDLEWARE,\n    COMMAND_EXECUTOR,\n    QUERY_EXECUTOR,\n    EVENT_EXECUTOR,\n}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/InjecTag.decorator.ts",{"fileContent":"import 'reflect-metadata';\nimport { ConstructorParam } from '../../domain/di/Container';\nimport { ContainerTag } from '../../domain/di/ContainerTag';\nimport { INJECT_TARGET } from './DependencyContainer';\n\nexport default function InjectTag(tag: ContainerTag) {\n    return function (target: any, propertyKey: string | symbol, parameterIndex: number) {\n        const metadataKey = `${target.prototype.constructor.name}:constructor-params`;\n        const constructorParams: ConstructorParam[] = Reflect.getMetadata(metadataKey, INJECT_TARGET) || [];\n        constructorParams.push({\n            index: parameterIndex,\n            tag,\n        })\n        Reflect.defineMetadata(metadataKey, constructorParams, INJECT_TARGET)\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/ContainerTag.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/Utils.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryNotRegisteredError.ts",{"fileContent":"import Query from './Query';\n\nexport class QueryNotRegisteredError extends Error {\n    constructor(query: Query) {\n        super(`The query <${query.constructor.name}> hasn't a query handler associated`);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/discoverer/ErrorMiddlewareDiscoverer.ts",{"fileContent":"import { ContainerTag } from '../../domain/di/ContainerTag';\nimport Discoverer from '../../domain/Discoverer';\nimport { ErrorMiddleware } from '../../domain/ErrorMiddleware';\nimport InjectTag from '../di/InjecTag.decorator';\n\nexport default class ErrorMiddlewareDiscoverer extends Discoverer<ErrorMiddleware[]> {\n    constructor(\n        @InjectTag(ContainerTag.ERROR_MIDDLEWARE) errorMiddlewares: ErrorMiddleware[],\n    ) {\n        super(errorMiddlewares);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/ContainerTag.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Discoverer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/ErrorMiddleware.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/InjecTag.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Req.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Res.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Discoverer.ts",{"fileContent":"export default abstract class Discoverer<T> {\n    protected constructor(\n        private readonly data: T,\n    ) {\n    }\n\n    discover(): T {\n        return this.data;\n    }\n}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/utils/FileMessageStore.ts",{"fileContent":"import MessageStore from '../message-store/domain/MessageStore';\nimport * as fs from 'fs';\nimport Message from '../common/message/Message';\n\nexport default class FileMessageStore implements MessageStore {\n    async store(message: Message): Promise<void> {\n        fs.appendFileSync(\n            'message-store.log',\n            JSON.stringify(message.toPrimitive(), null, 2),\n        )\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/message-store/domain/MessageStore.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/Message.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Serializable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/discoverer/ControllerDiscoverer.ts",{"fileContent":"import { ContainerTag } from '../../domain/di/ContainerTag';\nimport Discoverer from '../../domain/Discoverer';\nimport Controller from '../../domain/http/Controller';\nimport InjectTag from '../di/InjecTag.decorator';\n\nexport default class ControllerDiscoverer extends Discoverer<Controller[]> {\n    constructor(\n        @InjectTag(ContainerTag.CONTROLLER) controllers: Controller[],\n    ) {\n        super(controllers);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/ContainerTag.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Discoverer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Controller.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/InjecTag.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/ControllerConfig.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/ControllerResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Req.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/message-store/infrastructure/StoreMessageBusMiddleware.ts",{"fileContent":"import { Keys } from '../../../modules/shared/infrastructure/di/Keys';\nimport Message from '../../common/message/Message';\nimport WrapperExecutor from '../../core/domain/WrapperExecutor';\nimport Inject from '../../core/infrastructure/di/Inject.decorator';\nimport MessageStore from '../domain/MessageStore';\n\nexport default class StoreMessageBusMiddleware implements WrapperExecutor<Message, any> {\n    constructor(\n        @Inject(Keys.App.MessageStore) private readonly messageStore: MessageStore,\n    ) {\n    }\n\n    async run(message: Message, next: () => Promise<any>): Promise<any> {\n        const res = await next();\n        await this.messageStore.store(message);\n        return res;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/Message.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/WrapperExecutor.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/message-store/domain/MessageStore.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Serializable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/infrastructure/query/InMemoryQueryBus.ts",{"fileContent":"import { Keys } from '../../../../modules/shared/infrastructure/di/Keys';\nimport { Mapper } from '../../../common/Mapper';\nimport { ContainerTag } from '../../../core/domain/di/ContainerTag';\nimport WrapperExecutor from '../../../core/domain/WrapperExecutor';\nimport Inject from '../../../core/infrastructure/di/Inject.decorator';\nimport InjectTag from '../../../core/infrastructure/di/InjecTag.decorator';\nimport Executor from '../../../core/infrastructure/Executor';\nimport Query from '../../domain/query/Query';\nimport QueryBus from '../../domain/query/QueryBus';\nimport { QueryHandler } from '../../domain/query/QueryHandler';\nimport { QueryResponse } from '../../domain/query/QueryResponse';\n\nexport default class InMemoryQueryBus implements QueryBus {\n    private readonly executor: Executor<Query, QueryResponse>;\n\n    constructor(\n        @Inject(Keys.CQRS.QueryHandlersMapper)\n        private readonly queryHandlersMapper: Mapper<Query, QueryHandler<Query, QueryResponse>>,\n        @InjectTag(ContainerTag.QUERY_EXECUTOR)\n        executors: WrapperExecutor<Query, QueryResponse>[] = [],\n    ) {\n        this.executor = new Executor<Query, QueryResponse>(executors);\n    }\n\n    ask<R extends QueryResponse>(query: Query): Promise<R> {\n        return this.executor.run(query, () => {\n            const handler = this.queryHandlersMapper.search(query);\n            return handler.handle(query);\n        }) as Promise<R>;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Mapper.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/ContainerTag.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/WrapperExecutor.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/InjecTag.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/Executor.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryHandler.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/Executor.ts",{"fileContent":"import WrapperExecutor from '../domain/WrapperExecutor';\n\nexport default class Executor<A, R> {\n    constructor(\n        private readonly wrapperExecutors: WrapperExecutor<A, R>[],\n    ) {\n    }\n\n    run(arg: A, next: () => Promise<R>): Promise<R> {\n        const runner = (index: number) => {\n            if (this.wrapperExecutors[index]) {\n                return this.wrapperExecutors[index].run(arg, () => runner(index + 1))\n            }\n            return next();\n        }\n\n        return runner(0)\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/WrapperExecutor.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/utils/FileErrorTracker.ts",{"fileContent":"import ErrorTracker from '../core/domain/error/ErrorTracker';\nimport { TrackError } from '../core/domain/error/TrackError';\nimport * as fs from 'fs';\n\nexport default class FileErrorTracker implements ErrorTracker {\n    async track(trackError: TrackError): Promise<void> {\n        fs.appendFileSync(\n            'errors.log',\n            JSON.stringify(trackError.toPrimitives(), null, 2),\n        )\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/error/ErrorTracker.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/error/TrackError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpStatus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpError.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/infrastructure/EventSubscriberMapper.ts",{"fileContent":"import { Mapper } from '../../common/Mapper';\nimport MessageName from '../../common/message/MessageName';\nimport { ContainerTag } from '../../core/domain/di/ContainerTag';\nimport InjectTag from '../../core/infrastructure/di/InjecTag.decorator';\nimport DomainEvent from '../domain/DomainEvent';\nimport EventSubscriber from '../domain/EventSubscriber';\n\nexport class EventSubscriberMapper implements Mapper<MessageName, EventSubscriber<DomainEvent>[]> {\n    private domainEventSubscribersMap: Map<string, Array<EventSubscriber<DomainEvent>>>;\n\n    constructor(\n        @InjectTag(ContainerTag.EVENT_SUBSCRIBER) domainEventSubscribers: Array<EventSubscriber<DomainEvent>>,\n    ) {\n        this.domainEventSubscribersMap = this.formatEventSubscribers(domainEventSubscribers);\n    }\n\n    private formatEventSubscribers(\n        domainEventSubscribers: Array<EventSubscriber<DomainEvent>>,\n    ): Map<string, Array<EventSubscriber<DomainEvent>>> {\n        const domainEventSubscribersMap = new Map<string, Array<EventSubscriber<DomainEvent>>>();\n\n        domainEventSubscribers.forEach((domainEventSubscriber) => {\n            domainEventSubscriber.subscribedTo().forEach((domainEventClass) => {\n                let domainEventSubscribersInMap = domainEventSubscribersMap.get(domainEventClass.EVENT_NAME.value());\n                if (!domainEventSubscribersInMap) {\n                    domainEventSubscribersInMap = [];\n                }\n                domainEventSubscribersInMap.push(domainEventSubscriber)\n                domainEventSubscribersMap.set(domainEventClass.EVENT_NAME.value(), domainEventSubscribersInMap)\n            })\n        });\n\n        return domainEventSubscribersMap;\n    }\n\n    public search(messageName: MessageName): Array<EventSubscriber<DomainEvent>> {\n        const domainEventSubscribers = this.domainEventSubscribersMap.get(messageName.value());\n\n        if (!domainEventSubscribers) {\n            return [];\n        }\n\n        return domainEventSubscribers;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Mapper.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/ContainerTag.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/InjecTag.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/EventSubscriber.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/infrastructure/command/InMemoryCommandBus.ts",{"fileContent":"import { Keys } from '../../../../modules/shared/infrastructure/di/Keys';\nimport { Mapper } from '../../../common/Mapper';\nimport { ContainerTag } from '../../../core/domain/di/ContainerTag';\nimport WrapperExecutor from '../../../core/domain/WrapperExecutor';\nimport Inject from '../../../core/infrastructure/di/Inject.decorator';\nimport InjectTag from '../../../core/infrastructure/di/InjecTag.decorator';\nimport Executor from '../../../core/infrastructure/Executor';\nimport Command from '../../domain/command/Command';\nimport { CommandBus } from '../../domain/command/CommandBus';\nimport CommandHandler from '../../domain/command/CommandHandler';\n\nexport class InMemoryCommandBus implements CommandBus {\n    private readonly executor: Executor<Command, void>;\n\n    constructor(\n        @Inject(Keys.CQRS.CommandHandlersMapper)\n        private readonly commandHandlersMapper: Mapper<Command, CommandHandler<Command>>,\n        @InjectTag(ContainerTag.COMMAND_EXECUTOR) executors: WrapperExecutor<Command, void>[] = [],\n    ) {\n        this.executor = new Executor<Command, void>(executors);\n    }\n\n    async dispatch(command: Command): Promise<void> {\n        return this.executor.run(command, async () => {\n            const handler = this.commandHandlersMapper.search(command);\n            await handler.handle(command);\n        })\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Mapper.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/ContainerTag.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/WrapperExecutor.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/InjecTag.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/Executor.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/command/Command.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/command/CommandBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/command/CommandHandler.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/SystemLogger.ts",{"fileContent":"/* eslint-disable no-console */\nimport Logger from '../domain/Logger';\n\nexport default class SystemLogger implements Logger {\n    debug(...messages: string[]): void {\n        console.debug(messages);\n    }\n\n    error(message: string | Error): void {\n        console.error(message);\n    }\n\n    info(message: string): void {\n        console.info(message);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Logger.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/utils/TimeBusMiddleware.ts",{"fileContent":"import { Keys } from '../../modules/shared/infrastructure/di/Keys';\nimport MessageMeta from '../common/message/MessageMeta';\nimport WrapperExecutor from '../core/domain/WrapperExecutor';\nimport Logger from '../core/domain/Logger';\nimport Message from '../common/message/Message';\nimport Inject from '../core/infrastructure/di/Inject.decorator';\n\nexport default class TimeBusMiddleware implements WrapperExecutor<Message, any> {\n    constructor(\n        @Inject(Keys.App.Logger) private readonly logger: Logger,\n    ) {}\n\n    async run(message: Message, next: () => Promise<any>): Promise<any> {\n        const startTimestamp = Date.now();\n        const res = await next();\n        const endTimestamp = Date.now();\n\n        const time = endTimestamp - startTimestamp;\n        message.meta.set(MessageMeta.KEYS.TIME, time);\n        this.logger.info(`${message.name.value()} ${endTimestamp - startTimestamp}ms`);\n\n        return res;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/WrapperExecutor.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Logger.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/Message.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Serializable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/infrastructure/EventClassMapper.ts",{"fileContent":"import { Optional } from '../../common/Optional';\nimport { ContainerTag } from '../../core/domain/di/ContainerTag';\nimport InjectTag from '../../core/infrastructure/di/InjecTag.decorator';\nimport DomainEvent, { DomainEventClass } from '../domain/DomainEvent';\nimport EventSubscriber from '../domain/EventSubscriber';\n\ntype Mapping = Map<string, DomainEventClass>;\n\nexport class EventClassMapper {\n    private mapping: Mapping;\n\n    constructor(\n        @InjectTag(ContainerTag.EVENT_SUBSCRIBER) mapping: EventSubscriber<DomainEvent>[],\n    ) {\n        this.mapping = mapping.reduce(this.eventsExtractor(), new Map<string, DomainEventClass>());\n    }\n\n    private eventsExtractor() {\n        return (map: Mapping, subscriber: EventSubscriber<DomainEvent>) => {\n            subscriber.subscribedTo().forEach((domainEventClass) => {\n                map.set(domainEventClass.EVENT_NAME.value(), domainEventClass);\n            });\n            return map;\n        };\n    }\n\n    for(name: string): Optional<DomainEventClass> {\n        const domainEvent = this.mapping.get(name);\n\n        if (!domainEvent) {\n            return undefined;\n        }\n\n        return domainEvent;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Optional.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/ContainerTag.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/InjecTag.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/EventSubscriber.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/TypeOrmClientFactory.ts",{"fileContent":"import { Connection, createConnection, getConnection } from 'typeorm';\nimport { TypeOrmConfig } from './TypeOrmConfig';\n\nexport class TypeOrmClientFactory {\n    static async createClient(config: TypeOrmConfig): Promise<Connection> {\n        try {\n            const connection = await createConnection({\n                type: 'mysql',\n                host: config.host,\n                port: config.port,\n                username: config.username,\n                password: config.password,\n                database: config.database,\n                // eslint-disable-next-line no-undef\n                entities: [`${__dirname}/../../../../../src/**/**/infrastructure/persistence/typeorm/*{.js,.ts}`],\n                synchronize: true,\n                logging: false,\n                migrationsTableName: 'migrations',\n                migrations: ['migration/*.js'],\n                cli: {\n                    migrationsDir: 'migration',\n                },\n            });\n\n            return connection;\n        } catch (error) {\n            // eslint-disable-next-line no-console\n            console.log('error', error);\n            return getConnection();\n        }\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/TypeOrmConfig.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/discoverer/MiddlewareDiscoverer.ts",{"fileContent":"import { ContainerTag } from '../../domain/di/ContainerTag';\nimport Discoverer from '../../domain/Discoverer';\nimport { Middleware } from '../../domain/Middleware';\nimport InjectTag from '../di/InjecTag.decorator';\n\nexport default class MiddlewareDiscoverer extends Discoverer<Middleware[]> {\n    constructor(\n        @InjectTag(ContainerTag.MIDDLEWARE) middlewares: Middleware[],\n    ) {\n        super(middlewares);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/ContainerTag.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Discoverer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Middleware.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/InjecTag.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Req.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Res.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/infrastructure/command/CommandHandlersMapper.ts",{"fileContent":"import { Mapper } from '../../../common/Mapper';\nimport { ContainerTag } from '../../../core/domain/di/ContainerTag';\nimport InjectTag from '../../../core/infrastructure/di/InjecTag.decorator';\nimport Command from '../../domain/command/Command';\nimport CommandHandler from '../../domain/command/CommandHandler';\nimport { CommandNotRegisteredError } from '../../domain/command/CommandNotRegisteredError';\n\nexport class CommandHandlersMapper implements Mapper<Command, CommandHandler<Command>> {\n    private commandHandlersMap: Map<string, CommandHandler<Command>>;\n\n    constructor(\n        @InjectTag(ContainerTag.COMMAND_HANDLER) commandHandlers: Array<CommandHandler<Command>>\n    ) {\n        this.commandHandlersMap = this.formatHandlers(commandHandlers);\n    }\n\n    private formatHandlers(commandHandlers: Array<CommandHandler<Command>>): Map<string, CommandHandler<Command>> {\n        const handlersMap = new Map();\n\n        commandHandlers.forEach((commandHandler) => {\n            handlersMap.set(commandHandler.subscribedTo(), commandHandler);\n        });\n\n        return handlersMap;\n    }\n\n    public search(command: Command): CommandHandler<Command> {\n        const commandHandler = this.commandHandlersMap.get(command.constructor.name);\n\n        if (!commandHandler) {\n            throw new CommandNotRegisteredError(command);\n        }\n\n        return commandHandler;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Mapper.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/ContainerTag.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/InjecTag.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/command/Command.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/command/CommandHandler.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/command/CommandNotRegisteredError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/command/CommandNotRegisteredError.ts",{"fileContent":"import Command from './Command';\n\nexport class CommandNotRegisteredError extends Error {\n    constructor(command: Command) {\n        super(`The command <${command.constructor.name}> has not a command handler associated`);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/command/Command.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/SimpleMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/error/PersistErrorMiddleware.ts",{"fileContent":"import { Keys } from '../../../../modules/shared/infrastructure/di/Keys';\nimport ErrorTracker from '../../domain/error/ErrorTracker';\nimport { TrackError } from '../../domain/error/TrackError';\nimport { ErrorMiddleware, ErrorMiddlewareNext } from '../../domain/ErrorMiddleware';\nimport { Req } from '../../domain/http/Req';\nimport { Res } from '../../domain/http/Res';\nimport Inject from '../di/Inject.decorator';\n\nexport default class PersistErrorMiddleware implements ErrorMiddleware {\n    constructor(\n        @Inject(Keys.App.ErrorTracker) private readonly errorTracker: ErrorTracker,\n    ) {}\n\n    apply(error: Error, req: Req, res: Res, next: ErrorMiddlewareNext): void {\n        if (this.errorTracker) {\n            this.errorTracker.track(TrackError.fromError(error));\n        }\n        next(error);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/error/ErrorTracker.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/error/TrackError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/ErrorMiddleware.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Req.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Res.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpStatus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/error/TrackError.ts",{"fileContent":"import { HttpStatus } from '../../../common/http/HttpStatus';\nimport { PrimitiveType } from '../../../common/PrimitiveType';\nimport HttpError from '../../../common/http/HttpError';\n\nexport class TrackError {\n    static fromError(error: Error): TrackError {\n        return new TrackError(\n            new Date(),\n            error.constructor.name,\n            error.message,\n            error instanceof HttpError ? error.code : HttpStatus.INTERNAL_SERVER_ERROR,\n            error.stack,\n        )\n    }\n\n    private constructor(\n        private readonly occurredOn: Date,\n        private readonly name: string,\n        private readonly message: string,\n        private readonly httpStatus: HttpStatus,\n        private readonly stack: string,\n    ) {\n    }\n\n    public toPrimitives(): Record<string, PrimitiveType> {\n        return {\n            occurredOn: this.occurredOn.toISOString(),\n            name: this.name,\n            message: this.message,\n            httpStatus: this.httpStatus,\n            stack: this.stack,\n        }\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpStatus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpError.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/HttpErrorMiddleware.ts",{"fileContent":"import { Keys } from '../../../modules/shared/infrastructure/di/Keys';\nimport HttpError from '../../common/http/HttpError';\nimport { HttpStatus } from '../../common/http/HttpStatus';\nimport Logger from '../domain/Logger';\nimport { ErrorMiddleware, ErrorMiddlewareNext } from '../domain/ErrorMiddleware';\nimport { Req } from '../domain/http/Req';\nimport { Res } from '../domain/http/Res';\nimport Inject from './di/Inject.decorator';\nimport ResponseContent from '../domain/http/ResponseContent';\n\nexport default class HttpErrorMiddleware implements ErrorMiddleware {\n    constructor(\n        @Inject(Keys.App.Logger) private readonly logger: Logger,\n    ) {}\n\n    apply(error: Error, req: Req, res: Res, next: ErrorMiddlewareNext): void {\n        this.logger.error(`Error: ${error.message}`);\n        const statusCode = error instanceof HttpError ? error.code : HttpStatus.INTERNAL_SERVER_ERROR;\n\n        const responseContent: ResponseContent<void> = {\n            error: {\n                code: statusCode,\n                title: error.name,\n                detail: error.message,\n            },\n        };\n\n        res.status(statusCode).send(responseContent);\n        next(error);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpStatus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Logger.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/ErrorMiddleware.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Req.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Res.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/ResponseContent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/persistence/typeorm/TypeOrmEventStore.ts",{"fileContent":"import EventStore from '../../../../../microk/event/domain/EventStore';\nimport DomainEvent from '../../../../../microk/event/domain/DomainEvent';\nimport { TypeOrmRepository } from '../../../../../microk/persistence/infrastructure/typeorm/TypeOrmRepository';\nimport { Connection, EntitySchema } from 'typeorm';\nimport { EventStoreEntity } from './EventStoreEntity';\nimport Inject from '../../../../../microk/core/infrastructure/di/Inject.decorator';\nimport { Keys } from '../../di/Keys';\n\nexport default class TypeOrmEventStore extends TypeOrmRepository<DomainEvent> implements EventStore {\n    constructor(@Inject(Keys.App.ConnectionManager) client: Promise<Connection>) {\n        super(client);\n    }\n\n    protected entitySchema(): EntitySchema<DomainEvent> {\n        return EventStoreEntity;\n    }\n\n    async save(event: DomainEvent): Promise<void> {\n        await super.persist(event)\n    }\n\n    async countAll(): Promise<number> {\n        const repository = await this.repository()\n        return repository.count();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/EventStore.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/TypeOrmRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/persistence/typeorm/EventStoreEntity.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Criteria.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Nullable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/TypeOrmCriteriaConverter.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/ValueObjectTransformer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/persistence/typeorm/EventStoreEntity.ts",{"fileContent":"import { EntitySchema } from 'typeorm';\nimport DomainEvent from '../../../../../microk/event/domain/DomainEvent';\nimport { ValueObjectTransformer } from '../../../../../microk/persistence/infrastructure/typeorm/ValueObjectTransformer';\nimport MessageId from '../../../../../microk/common/message/MessageId';\nimport MessageName from '../../../../../microk/common/message/MessageName';\nimport Uuid from '../../../../../microk/common/value-object/Uuid';\nimport AggregateMessageOccurredOn from '../../../../../microk/common/message/AggregateMessageOccurredOn';\nimport MessageMeta from '../../../../../microk/common/message/MessageMeta';\n\nexport const EventStoreEntity = new EntitySchema<DomainEvent>({\n    name: 'DomainEvent',\n    tableName: 'event_store',\n    target: DomainEvent,\n    columns: {\n        id: {\n            type: String,\n            primary: true,\n            transformer: ValueObjectTransformer(MessageId),\n        },\n        name: {\n            type: String,\n            transformer: ValueObjectTransformer(MessageName),\n        },\n        aggregateId: {\n            type: String,\n            transformer: ValueObjectTransformer(Uuid),\n        },\n        occurredOn: {\n            type: String,\n            transformer: ValueObjectTransformer(AggregateMessageOccurredOn),\n        },\n        meta: {\n            type: 'text',\n            nullable: false,\n            transformer: {\n                to(meta: MessageMeta): string {\n                    return JSON.stringify(meta.toPrimitive(), null, 2)\n                },\n                from(value: string): MessageMeta {\n                    return new MessageMeta(value ? JSON.parse(value) : {})\n                },\n            },\n        },\n    },\n});\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/persistence/infrastructure/typeorm/ValueObjectTransformer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/ValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/InvalidArgumentError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/DateValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Serializable.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/infrastructure/InMemoryEventBus.ts",{"fileContent":"import { Mapper } from '../../common/Mapper';\nimport MessageName from '../../common/message/MessageName';\nimport WrapperExecutor from '../../core/domain/WrapperExecutor';\nimport Executor from '../../core/infrastructure/Executor';\nimport DomainEvent from '../domain/DomainEvent';\nimport EventBus from '../domain/EventBus';\nimport EventSubscriber from '../domain/EventSubscriber';\nimport Inject from '../../core/infrastructure/di/Inject.decorator';\nimport InjectTag from '../../core/infrastructure/di/InjecTag.decorator';\nimport { ContainerTag } from '../../core/domain/di/ContainerTag';\nimport { Keys } from '../../../modules/shared/infrastructure/di/Keys';\nimport EventStore from '../domain/EventStore';\n\nexport default class InMemoryEventBus implements EventBus {\n    private readonly executor: Executor<DomainEvent, void>;\n\n    constructor(\n        @Inject(Keys.CQRS.EventSubscriberMapper)\n        private readonly domainEventSubscriberMapper: Mapper<MessageName, Array<EventSubscriber<DomainEvent>>>,\n        @Inject(Keys.CQRS.EventStore) private readonly eventStore: EventStore,\n        @InjectTag(ContainerTag.EVENT_EXECUTOR) executors: WrapperExecutor<DomainEvent, void>[] = [],\n    ) {\n        this.executor = new Executor<DomainEvent, void>(executors);\n    }\n\n    async publish(events: DomainEvent[]): Promise<void> {\n        for (const event of events) {\n            await this.eventStore.save(event);\n            this.domainEventSubscriberMapper.search(event.name)\n                .forEach((subscriber) => {\n                    this.executor.run(event, async () => {\n                        await subscriber.dispatch(event)\n                    })\n                })\n        }\n    }\n\n    async start(): Promise<void> {\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Mapper.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/WrapperExecutor.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/Executor.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/EventBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/EventSubscriber.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/InjecTag.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/ContainerTag.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/EventStore.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Criteria.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/event/EventStoreController.ts",{"fileContent":"import Controller from '../../../../microk/core/domain/http/Controller';\nimport { ControllerResponse } from '../../../../microk/core/domain/http/ControllerResponse';\nimport { ControllerConfig } from '../../../../microk/core/domain/http/ControllerConfig';\nimport { HttpMethod } from '../../../../microk/common/http/HttpMethod';\nimport DomainEventDto from './DomainEventDto';\nimport { Req } from '../../../../microk/core/domain/http/Req';\nimport Response from '../../../../microk/core/domain/http/Response';\nimport EventStore from '../../../../microk/event/domain/EventStore';\nimport Inject from '../../../../microk/core/infrastructure/di/Inject.decorator';\nimport { Keys } from '../di/Keys';\nimport { Criteria } from '../../../../microk/common/criteria/Criteria';\nimport { Order } from '../../../../microk/common/criteria/Order';\nimport { Filters } from '../../../../microk/common/criteria/Filters';\n\n/**\n * @openapi\n * /event-store:\n *   get:\n *     operationId: eventStore\n *     tags:\n *       - Event Store\n *     summary: Retrieve events generated by app.\n *     description: ''\n *     responses:\n *       200:\n *         description: \"Return events stored in the app.\"\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 data:\n *                   $ref: '#/components/schemas/DomainEventDto'\n *       default:\n *         description: \"Error\"\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/ResponseError'\n */\nexport default class EventStoreController implements Controller<DomainEventDto[]> {\n    private static LIMIT_PER_PAGE = 50;\n\n    constructor(\n        @Inject(Keys.CQRS.EventStore) private readonly eventStore: EventStore,\n    ) {\n    }\n\n    config(): ControllerConfig {\n        return {\n            method: HttpMethod.GET,\n            path: '/event-store',\n        };\n    }\n\n    async run(req: Req): Promise<ControllerResponse<DomainEventDto[]>> {\n        const page = Number(req.query.page ?? 0);\n\n        const criteria = new Criteria(\n            Filters.none(),\n            Order.asc('occurredOn'),\n            EventStoreController.LIMIT_PER_PAGE,\n            EventStoreController.LIMIT_PER_PAGE * page,\n        )\n        const domainEvents = await this.eventStore.searchByCriteria(criteria)\n        const countAll = await this.eventStore.countAll()\n\n        return Response.success(\n            domainEvents.map((domainEvent) => domainEvent.toPrimitive() as unknown as DomainEventDto),\n            {\n                current: page,\n                totalPages: Math.ceil(countAll / EventStoreController.LIMIT_PER_PAGE),\n                totalElements: countAll,\n            },\n        )\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Controller.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/ControllerResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/ControllerConfig.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpMethod.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/event/DomainEventDto.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Req.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Response.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/EventStore.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Criteria.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Order.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Filters.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpStatus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/ResponseContent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/Middleware.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/Utils.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/OrderBy.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/OrderType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Filter.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/app/config/configDev.ts",{"fileContent":"import Container from '../../microk/core/domain/di/Container';\n\nexport const configDev = (container: Container) => {\n\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/ContainerTag.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/app/config/configProd.ts",{"fileContent":"import Container from '../../microk/core/domain/di/Container';\n\nexport const configProd = (container: Container) => {\n\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/ContainerTag.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/app/config/configTest.ts",{"fileContent":"import { Keys } from '../../modules/shared/infrastructure/di/Keys';\nimport { TypeOrmEnvironmentArranger } from '../../microk/tests/infrastructure/typeorm/TypeOrmEnvironmentArranger';\nimport TypeOrmEnvironmentFixtures from '../../microk/tests/infrastructure/typeorm/TypeOrmEnvironmentFixtures';\nimport Container from '../../microk/core/domain/di/Container';\n\nexport const configTest = (container: Container) => {\n    container.addClass(Keys.Test.EnvironmentArranger, TypeOrmEnvironmentArranger)\n    container.addClass(Keys.Test.EnvironmentFixtures, TypeOrmEnvironmentFixtures)\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/tests/infrastructure/typeorm/TypeOrmEnvironmentArranger.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/tests/infrastructure/typeorm/TypeOrmEnvironmentFixtures.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/tests/domain/EnvironmentArranger.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/tests/domain/EnvironmentFixtures.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/NewableClass.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/ContainerTag.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/tests/infrastructure/typeorm/TypeOrmEnvironmentArranger.ts",{"fileContent":"import { Connection, EntityMetadata } from 'typeorm';\nimport { EnvironmentArranger } from '../../domain/EnvironmentArranger';\nimport Inject from '../../../core/infrastructure/di/Inject.decorator';\nimport { Keys } from '../../../../modules/shared/infrastructure/di/Keys';\n\nexport class TypeOrmEnvironmentArranger extends EnvironmentArranger {\n    constructor(\n        @Inject(Keys.App.ConnectionManager) private _client: Promise<Connection>,\n    ) {\n        super();\n    }\n\n    public async arrange(): Promise<void> {\n        await this.cleanDatabase();\n    }\n\n    protected async cleanDatabase(): Promise<void> {\n        const entities = await this.entities();\n\n        try {\n            for (const entity of entities) {\n                const repository = (await this.client()).getRepository(entity.name);\n                await repository.query(`TRUNCATE TABLE ${entity.tableName};`);\n            }\n        } catch (error) {\n            throw new Error(`Unable to clean test database: ${error}`);\n        }\n    }\n\n    private async entities(): Promise<EntityMetadata[]> {\n        return (await this.client()).entityMetadatas;\n    }\n\n    protected client(): Promise<Connection> {\n        return this._client;\n    }\n\n    public async close(): Promise<void> {\n        return (await this.client()).close();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/tests/domain/EnvironmentArranger.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/di/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/tests/domain/EnvironmentArranger.ts",{"fileContent":"export abstract class EnvironmentArranger {\n    public abstract arrange(): Promise<void>;\n    public abstract close(): Promise<void>;\n}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/tests/infrastructure/typeorm/TypeOrmEnvironmentFixtures.ts",{"fileContent":"import { readFileSync } from 'fs';\nimport { Connection } from 'typeorm';\nimport EnvironmentFixtures from '../../domain/EnvironmentFixtures';\n\nexport default class TypeOrmEnvironmentFixtures extends EnvironmentFixtures {\n    constructor(\n        private readonly _client: Promise<Connection>\n    ) {\n        super();\n    }\n\n    async loadFixtures(): Promise<void> {\n        const fixtureFiles = await this.getFiles();\n        for (const fixtureFile of fixtureFiles) {\n            const fixture = JSON.parse(readFileSync(fixtureFile, 'utf8'));\n            const repository = await (await this.client()).getRepository(fixture.entity);\n            await repository\n                .createQueryBuilder(fixture.entity)\n                .insert()\n                .values(fixture.data)\n                .execute();\n        }\n    }\n\n    protected client(): Promise<Connection> {\n        return this._client;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/tests/domain/EnvironmentFixtures.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/tests/domain/EnvironmentFixtures.ts",{"fileContent":"import { glob } from 'glob';\n\nexport default abstract class EnvironmentFixtures {\n    async getFiles(): Promise<string[]> {\n        const srcFixtures = glob.sync('src/**/*.fixtures.json');\n        const testFixtures = glob.sync('tests/**/*.fixtures.json');\n        return [...srcFixtures, ...testFixtures];\n    }\n\n    abstract loadFixtures(): Promise<void>;\n}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserMother.ts",{"fileContent":"import AuthenticateQuery from '../../../../src/modules/auth/application/login/AuthenticateQuery';\nimport { AuthUser } from '../../../../src/modules/auth/domain/AuthUser';\nimport AuthUserEmail from '../../../../src/modules/auth/domain/AuthUserEmail';\nimport AuthUserId from '../../../../src/modules/auth/domain/AuthUserId';\nimport AuthUserPassword from '../../../../src/modules/auth/domain/AuthUserPassword';\nimport AuthUserEmailMother from './AuthUserEmailMother';\nimport AuthUserIdMother from './AuthUserIdMother';\nimport AuthUserPasswordMother from './AuthUserPasswordMother';\n\nexport default class AuthUserMother {\n    static create(\n        id: AuthUserId,\n        email: AuthUserEmail,\n        password: AuthUserPassword,\n    ): AuthUser {\n        return new AuthUser(id, email, password, undefined);\n    }\n\n    static fromQuery(query: AuthenticateQuery): AuthUser {\n        return this.create(\n            AuthUserIdMother.random(),\n            query.email,\n            query.password,\n        )\n    }\n\n    static random(): AuthUser {\n        return this.create(\n            AuthUserIdMother.random(),\n            AuthUserEmailMother.random(),\n            AuthUserPasswordMother.random()\n        );\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/AuthenticateQuery.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUser.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserEmailMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserIdMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserPasswordMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Req.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserAuthenticated.DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserIncorrectPasswordError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserRecoverPasswordToken.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/AggregateRoot.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Nullable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/EmailValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/EmailMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/UuidMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/PasswordMother.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserEmailMother.ts",{"fileContent":"import AuthUserEmail from '../../../../src/modules/auth/domain/AuthUserEmail';\nimport { EmailMother } from '../../shared/domain/EmailMother';\n\nexport default class AuthUserEmailMother {\n    static create(value: string): AuthUserEmail {\n        return new AuthUserEmail(value);\n    }\n\n    static random(): AuthUserEmail {\n        return this.create(EmailMother.random());\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/EmailMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/EmailValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/MotherCreator.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/EmailMother.ts",{"fileContent":"import { MotherCreator } from './MotherCreator';\n\nexport class EmailMother {\n    static random(): string {\n        return MotherCreator.random().internet.email();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/MotherCreator.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/MotherCreator.ts",{"fileContent":"import * as faker from 'faker';\n\nexport class MotherCreator {\n    // eslint-disable-next-line no-undef\n    static random(): Faker.FakerStatic {\n        return faker;\n    }\n}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserIdMother.ts",{"fileContent":"import AuthUserId from '../../../../src/modules/auth/domain/AuthUserId';\nimport { UuidMother } from '../../shared/domain/UuidMother';\n\nexport default class AuthUserIdMother {\n    static create(value: string): AuthUserId {\n        return new AuthUserId(value);\n    }\n\n    static random(): AuthUserId {\n        return this.create(UuidMother.random());\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/UuidMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/MotherCreator.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/UuidMother.ts",{"fileContent":"import { MotherCreator } from './MotherCreator';\n\nexport class UuidMother {\n    static random(): string {\n        return MotherCreator.random().datatype.uuid();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/MotherCreator.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserPasswordMother.ts",{"fileContent":"import AuthUserPassword from '../../../../src/modules/auth/domain/AuthUserPassword';\nimport { PasswordMother } from '../../shared/domain/PasswordMother';\n\nexport default class AuthUserPasswordMother {\n    static create(value: string): AuthUserPassword {\n        return new AuthUserPassword(value);\n    }\n\n    static random(): AuthUserPassword {\n        return this.create(PasswordMother.random());\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/PasswordMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/MotherCreator.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/PasswordMother.ts",{"fileContent":"import { MotherCreator } from './MotherCreator';\n\nexport class PasswordMother {\n    static random(): string {\n        return MotherCreator.random().internet.password();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/MotherCreator.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/info/aplication/InfoQueryHandler.test.ts",{"fileContent":"import InfoQueryHandler from '../../../../src/modules/info/application/info/InfoQueryHandler';\nimport InfoService from '../../../../src/modules/info/application/info/InfoService';\nimport EventBusMock from '../../shared/__mocks__/EventBusMock';\nimport InfoQueryMother from '../domain/InfoQueryMother';\n\nlet handler: InfoQueryHandler;\nlet eventBus: EventBusMock;\n\nbeforeEach(() => {\n    eventBus = new EventBusMock();\n    const creator = new InfoService(eventBus);\n    handler = new InfoQueryHandler(creator);\n});\n\ndescribe('InfoRequest', () => {\n    it('should retrieve a info of app', async () => {\n        const query = InfoQueryMother.random();\n\n        await handler.handle(query);\n\n        eventBus.hasBeenPublishedEvent();\n    });\n});\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/info/InfoQueryHandler.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/info/InfoService.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/__mocks__/EventBusMock.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/info/domain/InfoQueryMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/info/InfoQuery.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/info/InfoResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryHandler.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/domain/InfoRequestedDomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/utils/Sleep.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/EventBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/DomainEvent.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/__mocks__/EventBusMock.ts",{"fileContent":"import DomainEvent from '../../../../src/microk/event/domain/DomainEvent';\nimport EventBus from '../../../../src/microk/event/domain/EventBus';\n\nexport default class EventBusMock implements EventBus {\n    private publishSpy = jest.fn();\n\n    async publish(events: DomainEvent[]) {\n        this.publishSpy(events);\n    }\n\n    hasBeenPublishedEvent() {\n        expect(this.publishSpy).toHaveBeenCalled();\n    }\n\n    async start(): Promise<void> {\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/EventBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessage.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageMeta.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageName.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/AggregateMessageOccurredOn.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/info/domain/InfoQueryMother.ts",{"fileContent":"import InfoQuery from '../../../../src/modules/info/application/info/InfoQuery';\n\nexport default class InfoQueryMother {\n    private static create() {\n        return new InfoQuery();\n    }\n\n    static random(): InfoQuery {\n        return this.create();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/info/application/info/InfoQuery.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/Query.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/application/Authenticator.test.ts",{"fileContent":"import AuthenticateQueryHandler from '../../../../src/modules/auth/application/login/AuthenticateQueryHandler';\nimport Authenticator from '../../../../src/modules/auth/application/login/Authenticator';\nimport AuthTokenRepository from '../../../../src/modules/auth/domain/AuthTokenRepository';\nimport EventBusMock from '../../shared/__mocks__/EventBusMock';\nimport AuthTokenRepositoryMock from '../__mocks__/AuthTokenRepositoryMock';\nimport AuthUserRepositoryMock from '../__mocks__/AuthUserRepositoryMock';\nimport AuthUserMother from '../domain/AuthUserMother';\nimport AuthenticateQueryMother from './AuthenticateQueryMother';\nimport UnauthorizedHttpError from '../../../../src/microk/common/http/errors/UnauthorizedHttpError';\nimport NotFoundHttpError from '../../../../src/microk/common/http/errors/NotFoundHttpError';\n\nlet authUserRepository: AuthUserRepositoryMock;\nlet authTokenRepository: AuthTokenRepository;\nlet eventBus: EventBusMock;\nlet authenticateQueryHandler: AuthenticateQueryHandler;\n\nbeforeEach(() => {\n    authTokenRepository = new AuthTokenRepositoryMock();\n    authUserRepository = new AuthUserRepositoryMock();\n    eventBus = new EventBusMock();\n    authenticateQueryHandler = new AuthenticateQueryHandler(\n        new Authenticator(authUserRepository, authTokenRepository, eventBus),\n    );\n});\n\ndescribe('Authenticator', () => {\n    it('should create a valid auth token', async () => {\n        const query = AuthenticateQueryMother.random();\n        const authUser = AuthUserMother.fromQuery(query);\n        authUserRepository.mockReturn(authUser);\n\n        const authToken = await authenticateQueryHandler.handle(query);\n\n        expect(authToken.toString()).toBeDefined();\n        eventBus.hasBeenPublishedEvent();\n    });\n\n    it('should throw NotFoundError if user not exists', async () => {\n        const query = AuthenticateQueryMother.random();\n        authUserRepository.mockReturn(null);\n\n        await expect(async () => {\n            await authenticateQueryHandler.handle(query);\n        }).rejects.toThrow(NotFoundHttpError);\n    });\n\n    it('should throw UnauthorizedHttpError if user credentials are invalid', async () => {\n        const query = AuthenticateQueryMother.random();\n        const authUser = AuthUserMother.random();\n        authUserRepository.mockReturn(authUser);\n\n        await expect(async () => {\n            await authenticateQueryHandler.handle(query);\n        }).rejects.toThrow(UnauthorizedHttpError);\n    });\n});\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/AuthenticateQueryHandler.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/Authenticator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthTokenRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/__mocks__/EventBusMock.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/__mocks__/AuthTokenRepositoryMock.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/__mocks__/AuthUserRepositoryMock.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/application/AuthenticateQueryMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/errors/UnauthorizedHttpError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/errors/NotFoundHttpError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/shared/infrastructure/di/Keys.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/AuthenticateQuery.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/AuthenticateQueryResponse.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/Inject.decorator.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/QueryHandler.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthToken.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/search-by-email/AuthUserSearchByEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/EventBus.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUser.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/event/domain/DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthTokenMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserEmailMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserIdMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserPasswordMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/http/HttpStatus.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/__mocks__/AuthTokenRepositoryMock.ts",{"fileContent":"import AuthToken from '../../../../src/modules/auth/domain/AuthToken';\nimport AuthTokenRepository from '../../../../src/modules/auth/domain/AuthTokenRepository';\nimport { AuthUser } from '../../../../src/modules/auth/domain/AuthUser';\nimport AuthTokenMother from '../domain/AuthTokenMother';\n\nexport default class AuthTokenRepositoryMock implements AuthTokenRepository {\n    constructor() {\n    }\n\n    generate(authUser: AuthUser): AuthToken {\n        return AuthTokenMother.random();\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthToken.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthTokenRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUser.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthTokenMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserAuthenticated.DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserIncorrectPasswordError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserRecoverPasswordToken.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/AggregateRoot.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Nullable.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/TokenMother.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthTokenMother.ts",{"fileContent":"import AuthToken from '../../../../src/modules/auth/domain/AuthToken';\nimport { TokenMother } from '../../shared/domain/TokenMother';\n\nexport default class AuthTokenMother {\n    static random(): AuthToken {\n        return AuthToken.fromString(TokenMother.random());\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthToken.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/TokenMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/StringValueObject.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/MotherCreator.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/TokenMother.ts",{"fileContent":"import { MotherCreator } from './MotherCreator';\n\nexport class TokenMother {\n    static random(): string {\n        return MotherCreator.random().datatype.hexaDecimal(50);\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/MotherCreator.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/__mocks__/AuthUserRepositoryMock.ts",{"fileContent":"import { AuthUser } from '../../../../src/modules/auth/domain/AuthUser';\nimport AuthUserId from '../../../../src/modules/auth/domain/AuthUserId';\nimport { AuthUserRepository } from '../../../../src/modules/auth/domain/AuthUserRepository';\nimport { Criteria } from '../../../../src/microk/common/criteria/Criteria';\nimport { Nullable } from '../../../../src/microk/common/Nullable';\n\nexport default class AuthUserRepositoryMock implements AuthUserRepository {\n    private readonly saveSpy = jest.fn();\n\n    private authUser: AuthUser;\n\n    constructor(\n    ) {\n    }\n\n    mockReturn(authUser: AuthUser) {\n        this.authUser = authUser;\n    }\n\n    async save(authUser: AuthUser): Promise<void> {\n        this.saveSpy(authUser)\n    }\n\n    hasBenCalledSaveWith(authUser: AuthUser) {\n        expect(this.saveSpy).toHaveBeenCalledWith(authUser)\n    }\n\n    async search(id: AuthUserId): Promise<Nullable<AuthUser>> {\n        return this.authUser;\n    }\n\n    async searchByCriteria(criteria: Criteria): Promise<Nullable<AuthUser[]>> {\n        return [this.authUser];\n    }\n\n    async searchOneByCriteria(criteria: Criteria): Promise<Nullable<AuthUser>> {\n        return this.authUser;\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUser.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Criteria.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/Nullable.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserAuthenticated.DomainEvent.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserIncorrectPasswordError.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserRecoverPasswordToken.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/AggregateRoot.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/PrimitiveType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/Uuid.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/Utils.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Filters.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/criteria/Order.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/docs/openapi/index.test.ts",{"fileContent":"import OpenApi from './index';\n\nconst expectedResponse = {\n    openapi: '3.0.0',\n    info: {\n        title: 'Test',\n        version: '1.0.0',\n        description: 'Public API',\n        license: {\n            name: 'MIT',\n        },\n    },\n    paths: {\n        '/notification': {\n            post: {\n                operationId: 'addJob',\n                tags: [\n                    'jobs',\n                ],\n                summary: 'Creates a new notification.',\n                description: '',\n                security: [\n                    {\n                        jwt: [],\n                    },\n                ],\n                requestBody: {\n                    description: 'Notification object to create',\n                    required: true,\n                    content: {\n                        'application/json': {\n                            schema: {\n                                $ref: '#/components/schemas/Notification',\n                            },\n                        },\n                    },\n                },\n                responses: {\n                    201: {\n                        description: 'Successful operation. The notification has been created on the server.',\n                        content: {\n                            'application/json': {\n                                schema: {\n                                    $ref: '#/components/schemas/Notification',\n                                },\n                            },\n                        },\n                    },\n                    400: {\n                        description: 'Bad Request',\n                        content: {\n                            'application/json': {\n                                schema: {\n                                    $ref: '#/components/schemas/Error',\n                                },\n                            },\n                        },\n                    },\n                },\n            },\n        },\n    },\n    components: {\n        securitySchemes: {\n            jwt: {\n                type: 'http',\n                scheme: 'bearer',\n                bearerFormat: 'JWT',\n            },\n        },\n        schemas: {\n            Error: {\n                type: 'object',\n                properties: {\n                    message: {\n                        type: 'string',\n                    },\n                    code: {\n                        type: 'integer',\n                        example: 404,\n                    },\n                },\n            },\n            Notification: {\n                type: 'object',\n                required: [\n                    'serviceUrl',\n                ],\n                properties: {\n                    serviceUrl: {\n                        type: 'string',\n                    },\n                    authenticationHeader: {\n                        type: 'string',\n                    },\n                    certificateSubject: {\n                        type: 'string',\n                    },\n                    parameters: {\n                        type: 'string',\n                    },\n                },\n            },\n        },\n    },\n};\n\ndescribe('OpenApi', () => {\n    it('should create a valid auth token', () => {\n        const openApi = new OpenApi({\n            baseDir: `${__dirname}/examples`,\n            filesPattern: './*.ts',\n            info: {\n                title: 'Test',\n                version: '1.0.0',\n                description: 'Public API',\n                license: {\n                    name: 'MIT',\n                },\n            },\n            components: {\n                securitySchemes: {\n                    jwt: {\n                        type: 'http',\n                        scheme: 'bearer',\n                        bearerFormat: 'JWT',\n                    },\n                },\n            },\n        })\n\n        const openApiDoc = openApi.generateDocs();\n\n        expect(openApiDoc).toEqual(expectedResponse)\n    });\n});\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/docs/openapi/index.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/src/microk/docs/openapi/index.ts",{"fileContent":"import doctrine from 'doctrine';\nimport fs from 'fs';\nimport glob from 'glob';\nimport mergeWith from 'lodash.mergewith';\nimport { OpenAPIObject } from 'openapi3-ts';\nimport {\n    ComponentsObject,\n    ExternalDocumentationObject,\n    InfoObject,\n    PathsObject,\n    SecurityRequirementObject,\n    ServerObject,\n    TagObject,\n} from 'openapi3-ts/src/model/OpenApi';\nimport path from 'path';\nimport YAML from 'yaml';\n\nexport type OpenApiConfig = {\n    baseDir: string,\n    filesPattern: string,\n\n    info: InfoObject;\n    servers?: ServerObject[];\n    paths?: PathsObject;\n    components?: ComponentsObject;\n    security?: SecurityRequirementObject[];\n    tags?: TagObject[];\n    externalDocs?: ExternalDocumentationObject;\n}\n\nexport default class OpenApi {\n    private static DEFAULT_EXCLUDED_FOLDER = 'node_modules';\n    private static DEFAULT_GLOB_OPTIONS = { ignore: ['**/node_modules/**', '**/openapi/examples/**'] };\n    // eslint-disable-next-line prefer-named-capture-group\n    private static COMMENTS_PATTERN = /((\\/\\*\\*+[\\s\\S]*?\\*\\/)|(\\/\\*+.*\\*\\/)|^\\/\\/.*?[\\r\\n])[\\r\\n]*/gm;\n    private static BREAK_LINE = /\\n/g;\n\n    constructor(\n        private readonly config: OpenApiConfig,\n    ) {\n    }\n\n    private globFilesMatches = (\n        baseDir: string,\n        filesPattern: string,\n        excludedFolder: string = OpenApi.DEFAULT_EXCLUDED_FOLDER,\n    ) => {\n        try {\n            const files = glob.sync(path.resolve(baseDir, filesPattern), OpenApi.DEFAULT_GLOB_OPTIONS);\n            return files.filter((file) => !file.includes(excludedFolder));\n        } catch (error) {\n            throw new Error('Error Glob Files');\n        }\n    }\n\n    private readFile(filePath: string): string {\n        return fs.readFileSync(filePath).toString();\n    }\n\n    private readFiles(files: string[]): string[] {\n        if (!files || !Array.isArray(files)) {\n            return [];\n        }\n        return files.map((file) => this.readFile(file));\n    }\n\n\n    private getComments = (text) => {\n        const comments = text.match(OpenApi.COMMENTS_PATTERN);\n        if (comments) {\n            const filterComments = comments.filter((comment) => comment.match(OpenApi.BREAK_LINE));\n            return filterComments.map((comment) => comment.trim());\n        }\n        return [];\n    };\n\n    private getOnlyComments(fileContents: string[] = []) {\n        if (!Array.isArray(fileContents)) {\n            return [];\n        }\n        const comments = fileContents.map((comment) => {\n            const trimedComments = comment.trim();\n            return this.getComments(trimedComments);\n        });\n        return [].concat(...comments).filter((comment) => (comment[0] === '/' && comment[1] !== '/'));\n    }\n\n    private jsdocInfo(comments): any[] {\n        if (!comments || !Array.isArray(comments)) {\n            return [];\n        }\n        return comments.map((comment) => {\n            const jsDocComment = doctrine.parse(comment, { unwrap: true });\n            return jsDocComment;\n        });\n    }\n\n    private parseYamlComments(jsDoc: any[]) {\n        const yamlComments = []\n        for (const doc of jsDoc) {\n            for (const tag of doc.tags) {\n                if (tag.title === 'openapi') {\n                    yamlComments.push(tag.description)\n                }\n            }\n        }\n        return yamlComments;\n    }\n\n    private parseJsonCommentsFromYaml(yamlComments): object[] {\n        const jsons = []\n        for (const doc of yamlComments) {\n            const parsed = YAML.parseDocument(doc);\n\n            const anchors = parsed.anchors.getNames();\n            if (anchors.length) {\n                throw new Error('Error parsing YAML comments');\n            } else if (parsed.errors && parsed.errors.length) {\n                throw new Error('Error parsing YAML comments');\n            } else {\n                jsons.push(parsed.toJSON());\n            }\n        }\n        return jsons;\n    }\n\n    private mergeDeep(first, second) {\n        return mergeWith({}, first, second, (x, y) => (y === null ? x : undefined));\n    }\n\n    private removeEmptyKeys(obj) {\n        if (!obj) {\n            return {};\n        }\n        Object.keys(obj).forEach((key) => {\n            if (obj[key] === undefined) {\n                delete obj[key];\n            }\n        });\n        return obj;\n    }\n\n    private buildOpenApiObject(jsonComments: object[]): OpenAPIObject {\n        const openApi: OpenAPIObject = this.removeEmptyKeys({\n            openapi: '3.0.0',\n            info: this.config.info,\n            servers: this.config.servers,\n            paths: this.config.paths || {},\n            components: {\n                ...this.config.components,\n                schemas: this.config.components.schemas || {},\n            },\n            security: this.config.security,\n            tags: this.config.tags,\n            externalDocs: this.config.externalDocs,\n        });\n\n        for (const jsonComment of jsonComments) {\n            for (const key of Object.keys(jsonComment)) {\n                if (key.startsWith('/')) {\n                    openApi.paths[key] = this.mergeDeep(openApi.paths[key], jsonComment[key]);\n                } else {\n                    openApi.components.schemas[key] = jsonComment[key];\n                }\n            }\n        }\n\n        return openApi;\n    }\n\n    generateDocs(): OpenAPIObject {\n        const files = this.globFilesMatches(this.config.baseDir, this.config.filesPattern);\n        const fileContents = this.readFiles(files);\n        const comments = this.getOnlyComments(fileContents);\n        const jsDocInfo = this.jsdocInfo(comments)\n        const yamlComments = this.parseYamlComments(jsDocInfo)\n        const jsonComments = this.parseJsonCommentsFromYaml(yamlComments)\n        return this.buildOpenApiObject(jsonComments);\n    }\n}\n","resolvedModuleNames":[]}],["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/infrastructure/generators/JwtAuthTokenGenerator.test.ts",{"fileContent":"import Container from '../../../../../src/app/Container';\nimport AuthTokenRepository from '../../../../../src/modules/auth/domain/AuthTokenRepository';\nimport AuthUserMother from '../../domain/AuthUserMother';\n\nconst repository: AuthTokenRepository = Container.get('Auth.domain.AuthTokenRepository');\n\ndescribe('AuthTokenRepository', () => {\n    describe('#generate', () => {\n        it('should generate a new auth token', async () => {\n            const authUser = AuthUserMother.random();\n\n            const authToken = await repository.generate(authUser);\n\n            expect(authToken).toBeDefined();\n            expect(authToken.toString()).toBeDefined();\n        });\n    });\n});\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/app/Container.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthTokenRepository.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/app/config/index.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/app/ProcessEnv.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/infrastructure/di/DependencyContainer.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthToken.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUser.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/AuthenticateQuery.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserEmailMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserIdMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserPasswordMother.ts"]}],["/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/application/AuthenticateQueryMother.ts",{"fileContent":"import AuthenticateQuery from '../../../../src/modules/auth/application/login/AuthenticateQuery';\nimport AuthUserEmailMother from '../domain/AuthUserEmailMother';\nimport AuthUserPasswordMother from '../domain/AuthUserPasswordMother';\n\nexport default class AuthenticateQueryMother {\n    static random(): AuthenticateQuery {\n        return new AuthenticateQuery(\n            AuthUserEmailMother.random(),\n            AuthUserPasswordMother.random(),\n        )\n    }\n}\n","resolvedModuleNames":["/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/application/login/AuthenticateQuery.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserEmailMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/auth/domain/AuthUserPasswordMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserEmail.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/modules/auth/domain/AuthUserPassword.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/value-object/MessageNameFactory.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageType.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/common/message/MessageId.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/cqrs/domain/query/Query.ts","/Users/cuatroochenta/FixBik/fixbik-node/src/microk/core/domain/http/Req.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/EmailMother.ts","/Users/cuatroochenta/FixBik/fixbik-node/tests/modules/shared/domain/PasswordMother.ts"]}]]